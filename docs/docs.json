{
	"id": 0,
	"name": "Stacks.js 1.4.1 Library Reference",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "auth",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/auth\n\nConstruct and decode authentication requests for Stacks apps. \n\nThis package provides the auth logic used by the [Stacks Connect](https://github.com/blockstack/ux/tree/master/packages/connect) library. If you're looking to integrate Stacks authentication into your web app, Stacks Connect provides a simple API and built-in user interface. See the [authentication tutorial](https://docs.blockstack.org/authentication/building-todo-app). \n\n## Installation\n\n```\nnpm install @stacks/auth\n```\n\n## Usage\n\n### Generating an authentication request\n\n```typescript\nimport { UserSession, makeAuthRequest, AppConfig } from '@stacks/auth'\n```\n\nThe app domain is the URL to your website/app. This is how the Stacks authentication system identifies apps and determines what credentials to provide. Changing the app domain is equivalent to changing the app. Note that you also need to have a valid manifest.json file at the domain.\n\n```typescript\nconst appDomain = 'https://www.myapp.com';\n```\n\nNext we set the basic permissions for your app to read and store user data. If your app will allow users to share data with other users, you will need an additional `publish_data` permission. We will also initiate a `UserSession` object using the configuration.\n\n```typescript\nconst appConfig = new AppConfig(['store_write'], appDomain);\nconst userSession = new UserSession({ appConfig });\n```\n\nThe authentication payloads are encrypted during transit, the encryption key generated below provides this\n\n```typescript\nconst transitKey = userSession.generateAndStoreTransitKey();\n```\n\nThe Stacks auth process will open a compatible Stacks authenticator or browser extension to perform the authentication. So you will need to provide a redirect URL which the authenticator or extension can redirect to with the authentication payload. This page should process the authentication payload. \n\n```typescript\nconst redirectUri = 'https://www.myapp.com/auth';\n```\n\nSet the location of your app manifest file. This file contains information about your app that is shown to the user during authentication.\n\n```typescript\nconst manifestUri = 'https://www.myapp.com/manifest.json';\n```\n\nFinally generate the authentication request payload:\n\n```typescript\nconst authRequest = userSession.makeAuthRequest(\n  transitKey,\n  redirectUri,\n  manifestUri\n);\n```\n\nThe resulting payload can now be passed to a compatible Stacks authenticator or browser extension. If you are using Stacks connect, this is performed automatically. \n\nIf you would like to implement a Stacks authenticator, check out the reference implementation of the [Stacks browser extension](https://github.com/blockstack/ux/tree/master/packages/app).\n\n### Handling an authentication response payload\n\nAfter an authenticator has processed your app's request, and the user has granted permission, the resulting response will be passed back to your app via the URL set in your `redirectUri`.\n\nBelow, we use `userSession.isSignInPending` to determine if there is an incoming authentication response. If detected, the `userSession.handlePendingSignIn` method will process the response and provide a `userData` object containing the user's identity, BNS username and profile information.\n\n```typescript\nif (userSession.isSignInPending()) {\n  userSession.handlePendingSignIn().then((userData) => {\n    // Do something with userData\n  });\n}\n```\n\n### Checking if the user is signed in\n\nUse the `userSession.isUserSignedIn` method to check if the user is already authenticated. If so, we can retrieve the user's profile data using `userSession.loadUserData`.\n\n```typescript\nif (userSession.isUserSignedIn()) {\n  const userData = userSession.loadUserData();\n}\n```\n\n### Sign out\n\nTo sign the user out simply call the `userSession.signUserOut` method.\n\n```typescript\nuserSession.signUserOut();\n```\n\n### Data encryption\n\nStacks authentication also provides an easy way to encrypt the user's data. If you are using the [`@stacks/storage`](https://github.com/blockstack/stacks.js/tree/master/packages/storage) package, encryption is automatically enabled. If you would like to perform encryption outside of storage you can use the `userSession.encryptContent` and `userSession.decryptContent` methods.\n\n```typescript\nconst message = 'My secret message';\nconst cipherText = await userSession.encryptContent(message);\nconst plainText = await userSession.decryptContent(cipherText);\n```\n\nNote that encryption here uses the user's private key associated with your app only. If you need to share this data with another app or other users, you should use the equivalent methods from `@stacks/encryption` and provide a custom private key.\n"
			},
			"originalName": "auth/src",
			"children": [
				{
					"id": 689,
					"name": "AuthScope",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Non-exhaustive list of common permission scopes."
					},
					"children": [
						{
							"id": 692,
							"name": "email",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Request the user's email if available."
							},
							"sources": [
								{
									"fileName": "packages/auth/src/constants.ts",
									"line": 40,
									"character": 7
								}
							],
							"defaultValue": "\"email\""
						},
						{
							"id": 691,
							"name": "publish_data",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Publish data so that other users of the app can discover and interact with the user.\nThe user's files stored on Gaia hub are made visible to others via the `apps` property in the\nuserâ€™s `profile.json` file."
							},
							"sources": [
								{
									"fileName": "packages/auth/src/constants.ts",
									"line": 36,
									"character": 14
								}
							],
							"defaultValue": "\"publish_data\""
						},
						{
							"id": 690,
							"name": "store_write",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Read and write data to the user's Gaia hub in an app-specific storage bucket.\nThis is the default scope."
							},
							"sources": [
								{
									"fileName": "packages/auth/src/constants.ts",
									"line": 30,
									"character": 13
								}
							],
							"defaultValue": "\"store_write\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								692,
								691,
								690
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/auth/src/constants.ts",
							"line": 25,
							"character": 27
						}
					]
				},
				{
					"id": 541,
					"name": "AppConfig",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Configuration data for the current app.",
						"text": "On browser platforms, creating an instance of this\nclass without any arguments will use\n`window.location.origin` as the app domain.\nOn non-browser platforms, you need to\nspecify an app domain as the second argument.\n\n"
					},
					"children": [
						{
							"id": 542,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 543,
									"name": "new AppConfig",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 544,
											"name": "scopes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "permissions this app is requesting"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 545,
											"name": "appDomain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the app domain"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 546,
											"name": "redirectPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "path on app domain to redirect users to after authentication"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										},
										{
											"id": 547,
											"name": "manifestPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "path relative to app domain of app's manifest file"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'/manifest.json'"
										},
										{
											"id": 548,
											"name": "coreNode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "override the default or user selected core node"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 549,
											"name": "authenticatorURL",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the web-based fall back authenticator\n([[DEFAULT_BLOCKSTACK_HOST]])\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 541,
										"name": "AppConfig"
									}
								}
							]
						},
						{
							"id": 550,
							"name": "appDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Blockstack apps are uniquely identified by their app domain."
							},
							"sources": [
								{
									"fileName": "packages/auth/src/appConfig.ts",
									"line": 19,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 555,
							"name": "authenticatorURL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The URL of a web-based Blockstack Authenticator to use in the event\nthe user doesn't have Blockstack installed on their machine. If this\nis not specified, the current default in this library will be used."
							},
							"sources": [
								{
									"fileName": "packages/auth/src/appConfig.ts",
									"line": 57,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 554,
							"name": "coreNode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The URL of Blockstack core node to use for this app. If this is\n`null`, the core node specified by the user or default core node\nwill be used."
							},
							"sources": [
								{
									"fileName": "packages/auth/src/appConfig.ts",
									"line": 49,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 553,
							"name": "manifestPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Path relative to app domain of app's manifest file.",
								"text": "This file needs to have CORS headers set so that it can be fetched\nfrom any origin. Typically this means return the header `Access-Control-Allow-Origin: *`.\n\n"
							},
							"sources": [
								{
									"fileName": "packages/auth/src/appConfig.ts",
									"line": 41,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 552,
							"name": "redirectPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Path on app domain to redirect users to after authentication. The\nauthentication response token will be postpended in a query."
							},
							"sources": [
								{
									"fileName": "packages/auth/src/appConfig.ts",
									"line": 32,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 551,
							"name": "scopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "An array of string representing permissions requested by the app."
							},
							"sources": [
								{
									"fileName": "packages/auth/src/appConfig.ts",
									"line": 25,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 558,
							"name": "manifestURI",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/appConfig.ts",
									"line": 98,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 559,
									"name": "manifestURI",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The location of the app's manifest file.",
										"returns": "- URI\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 556,
							"name": "redirectURI",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/appConfig.ts",
									"line": 90,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 557,
									"name": "redirectURI",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The location to which the authenticator should\nredirect the user.",
										"returns": "- URI\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								542
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								550,
								555,
								554,
								553,
								552,
								551
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								558,
								556
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/auth/src/appConfig.ts",
							"line": 14,
							"character": 22
						}
					]
				},
				{
					"id": 625,
					"name": "UserSession",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Represents an instance of a signed in user for a particular app.",
						"text": "A signed in user has access to two major pieces of information\nabout the user, the user's private key for that app and the location\nof the user's gaia storage bucket for the app.\n\nA user can be signed in either directly through the interactive\nsign in process or by directly providing the app private key.\n\n\n\n"
					},
					"children": [
						{
							"id": 626,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 627,
									"name": "new UserSession",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {
										"shortText": "Creates a UserSession object"
									},
									"parameters": [
										{
											"id": 628,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 629,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 630,
															"name": "appConfig",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/auth/src/userSession.ts",
																	"line": 59,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"id": 541,
																"name": "AppConfig"
															}
														},
														{
															"id": 632,
															"name": "sessionOptions",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/auth/src/userSession.ts",
																	"line": 61,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "SessionOptions"
															}
														},
														{
															"id": 631,
															"name": "sessionStore",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/auth/src/userSession.ts",
																	"line": 60,
																	"character": 16
																}
															],
															"type": {
																"type": "reference",
																"name": "SessionDataStore"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																630,
																632,
																631
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 625,
										"name": "UserSession"
									}
								}
							]
						},
						{
							"id": 633,
							"name": "appConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/userSession.ts",
									"line": 49,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 541,
								"name": "AppConfig"
							}
						},
						{
							"id": 634,
							"name": "store",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/userSession.ts",
									"line": 51,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "SessionDataStore"
							}
						},
						{
							"id": 661,
							"name": "decryptContent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/userSession.ts",
									"line": 395,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 662,
									"name": "decryptContent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Decrypts data encrypted with `encryptContent` with the\ntransit private key.",
										"returns": "decrypted content.\n"
									},
									"parameters": [
										{
											"id": 663,
											"name": "content",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "encrypted content."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 664,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 665,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 666,
															"name": "privateKey",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "The hex string of the ECDSA private\nkey to use for decryption. If not provided, will use user's appPrivateKey."
															},
															"sources": [
																{
																	"fileName": "packages/auth/src/userSession.ts",
																	"line": 395,
																	"character": 56
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																666
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 657,
							"name": "encryptContent",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/userSession.ts",
									"line": 378,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 658,
									"name": "encryptContent",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Encrypts the data provided with the app public key.",
										"returns": "Stringified ciphertext object\n"
									},
									"parameters": [
										{
											"id": 659,
											"name": "content",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the data to encrypt"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													}
												]
											}
										},
										{
											"id": 660,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {},
											"type": {
												"type": "reference",
												"id": 1449,
												"name": "EncryptContentOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 644,
							"name": "generateAndStoreTransitKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/userSession.ts",
									"line": 151,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 645,
									"name": "generateAndStoreTransitKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generates a ECDSA keypair to\nuse as the ephemeral app transit private key\nand store in the session.",
										"returns": "the hex encoded private key\n\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 646,
							"name": "getAuthResponseToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/userSession.ts",
									"line": 163,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 647,
									"name": "getAuthResponseToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieve the authentication token from the URL query",
										"returns": "the authentication token if it exists otherwise `null`\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 652,
							"name": "handlePendingSignIn",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/userSession.ts",
									"line": 216,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 653,
									"name": "handlePendingSignIn",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Try to process any pending sign in request by returning a `Promise` that resolves\nto the user data object if the sign in succeeds.",
										"returns": "that resolves to the user data object if successful and rejects\nif handling the sign in request fails or there was no pending sign in request.\n"
									},
									"parameters": [
										{
											"id": 654,
											"name": "authResponseToken",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the signed authentication response token"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 705,
												"name": "UserData"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 648,
							"name": "isSignInPending",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/userSession.ts",
									"line": 183,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 649,
									"name": "isSignInPending",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check if there is a authentication request that hasn't been handled.",
										"text": "Also checks for a protocol echo reply (which if detected then the page\nwill be automatically redirected after this call).\n",
										"returns": "`true` if there is a pending sign in, otherwise `false`\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 650,
							"name": "isUserSignedIn",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/userSession.ts",
									"line": 204,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 651,
									"name": "isUserSignedIn",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check if a user is currently signed in.",
										"returns": "`true` if the user is signed in, `false` if not.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 655,
							"name": "loadUserData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/userSession.ts",
									"line": 361,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 656,
									"name": "loadUserData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the user data object. The user's profile is stored in the key [[Profile]].",
										"returns": "User data object.\n"
									},
									"type": {
										"type": "reference",
										"id": 705,
										"name": "UserData"
									}
								}
							]
						},
						{
							"id": 635,
							"name": "makeAuthRequest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/userSession.ts",
									"line": 114,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 636,
									"name": "makeAuthRequest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generates an authentication request that can be sent to the Blockstack\nbrowser for the user to approve sign in. This authentication request can\nthen be used for sign in by passing it to the [[redirectToSignInWithAuthRequest]]\nmethod.",
										"text": "*Note*: This method should only be used if you want to use a customized authentication\nflow. Typically, you'd use [[redirectToSignIn]] which is the default sign in method.\n",
										"returns": "the authentication request\n"
									},
									"parameters": [
										{
											"id": 637,
											"name": "transitKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "A HEX encoded transit private key."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 638,
											"name": "redirectURI",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Location to redirect the user to after sign in approval."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 639,
											"name": "manifestURI",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Location of this app's manifest file."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 640,
											"name": "scopes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The permissions this app is requesting. The default is `store_write`."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 641,
											"name": "appDomain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "The origin of the app."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 642,
											"name": "expiresAt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The time at which this request is no longer valid."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										},
										{
											"id": 643,
											"name": "extraParams",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Any extra parameters to pass to the authenticator. Use this to\npass options that aren't part of the Blockstack authentication specification,\nbut might be supported by special authenticators.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 667,
							"name": "signUserOut",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/userSession.ts",
									"line": 410,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 668,
									"name": "signUserOut",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Sign the user out and optionally redirect to given location."
									},
									"parameters": [
										{
											"id": 669,
											"name": "redirectURL",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "\nLocation to redirect user to after sign out.\nOnly used in environments with `window` available\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								626
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								633,
								634
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								661,
								657,
								644,
								646,
								652,
								648,
								650,
								655,
								635,
								667
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/auth/src/userSession.ts",
							"line": 48,
							"character": 24
						}
					]
				},
				{
					"id": 701,
					"name": "ProfileLookupOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 704,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/auth/src/profile.ts",
									"line": 8,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						},
						{
							"id": 702,
							"name": "username",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/profile.ts",
									"line": 6,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 703,
							"name": "zoneFileLookupURL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/auth/src/profile.ts",
									"line": 7,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								704,
								702,
								703
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/auth/src/profile.ts",
							"line": 5,
							"character": 37
						}
					]
				},
				{
					"id": 705,
					"name": "UserData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": " Returned from the [[UserSession.loadUserData]] function."
					},
					"children": [
						{
							"id": 710,
							"name": "appPrivateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/userData.ts",
									"line": 23,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 713,
							"name": "authResponseToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/userData.ts",
									"line": 29,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 712,
							"name": "coreNode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/userData.ts",
									"line": 27,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 714,
							"name": "coreSessionToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/auth/src/userData.ts",
									"line": 31,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 708,
							"name": "decentralizedID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/auth/src/userData.ts",
									"line": 16,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 707,
							"name": "email",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/auth/src/userData.ts",
									"line": 13,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 715,
							"name": "gaiaAssociationToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/auth/src/userData.ts",
									"line": 33,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 717,
							"name": "gaiaHubConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/auth/src/userData.ts",
									"line": 38,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 711,
							"name": "hubUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/userData.ts",
									"line": 26,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 709,
							"name": "identityAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/auth/src/userData.ts",
									"line": 19,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 716,
							"name": "profile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/userData.ts",
									"line": 36,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 706,
							"name": "username",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/userData.ts",
									"line": 6,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								710,
								713,
								712,
								714,
								708,
								707,
								715,
								717,
								711,
								709,
								716,
								706
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/auth/src/userData.ts",
							"line": 4,
							"character": 25
						}
					]
				},
				{
					"id": 684,
					"name": "DEFAULT_BLOCKSTACK_HOST",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "This constant is used in the [[redirectToSignInWithAuthRequest]]"
					},
					"sources": [
						{
							"fileName": "packages/auth/src/constants.ts",
							"line": 12,
							"character": 36
						}
					],
					"type": {
						"type": "literal",
						"value": "https://browser.blockstack.org/auth"
					},
					"defaultValue": "'https://browser.blockstack.org/auth'"
				},
				{
					"id": 685,
					"name": "DEFAULT_PROFILE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Default user profile object"
					},
					"sources": [
						{
							"fileName": "packages/auth/src/constants.ts",
							"line": 17,
							"character": 28
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 686,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 688,
									"name": "@context",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'http://schema.org'"
								},
								{
									"id": 687,
									"name": "@type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'Person'"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										688,
										687
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 698,
					"name": "lookupProfile",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/auth/src/profile.ts",
							"line": 20,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 699,
							"name": "lookupProfile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Look up a user profile by blockstack ID",
								"returns": "that resolves to a profile object\n"
							},
							"parameters": [
								{
									"id": 700,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 701,
										"name": "ProfileLookupOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 560,
					"name": "makeAuthRequest",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/auth/src/messages.ts",
							"line": 56,
							"character": 31
						}
					],
					"signatures": [
						{
							"id": 561,
							"name": "makeAuthRequest",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates an authentication request that can be sent to the Blockstack\nbrowser for the user to approve sign in. This authentication request can\nthen be used for sign in by passing it to the `redirectToSignInWithAuthRequest`\nmethod.",
								"text": "*Note: This method should only be used if you want to roll your own authentication\nflow. Typically you'd use `redirectToSignIn` which takes care of this\nunder the hood.*\n",
								"returns": "the authentication request\n"
							},
							"parameters": [
								{
									"id": 562,
									"name": "transitPrivateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "hex encoded transit private key"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 563,
									"name": "redirectURI",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "location to redirect user to after sign in approval"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 564,
									"name": "manifestURI",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "location of this app's manifest file"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 565,
									"name": "scopes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the permissions this app is requesting"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"id": 689,
													"name": "AuthScope"
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 566,
									"name": "appDomain",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "the origin of this app"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 567,
									"name": "expiresAt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the time at which this request is no longer valid"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "..."
								},
								{
									"id": 568,
									"name": "extraParams",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Any extra parameters you'd like to pass to the authenticator.\nUse this to pass options that aren't part of the Blockstack auth spec, but might be supported\nby special authenticators."
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						689
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						541,
						625
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						701,
						705
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						684,
						685
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						698,
						560
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/auth/src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2,
			"name": "bns",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# `@stacks/bns`\n\nA package for interacting with the [BNS contract](https://explorer.stacks.co/txid/SP000000000000000000002Q6VF78.bns?chain=mainnet)\non the Stacks blockchain.\n\n## What is BNS?\nThe [Blockchain Naming System](https://docs.blockstack.org/build-apps/references/bns)\n(BNS) is a network system that binds Stacks usernames to off-chain\nstate without relying on any central points of control.\n\n## Installation\n```\nnpm install --save @stacks/bns\n```\n\n## Example Usage\n\n```typescript\nimport { canRegisterName } from '@stacks/bns';\nimport { StacksTestnet } from '@stacks/network';\n\nconst network = new StacksMainnet();\n\nconst fullyQualifiedName = 'name.id';\nconst result = await canRegisterName({ fullyQualifiedName, network });\n```\n\n```typescript\nimport { buildRegisterNameTX } from '@stacks/bns';\nimport { StacksTestnet } from '@stacks/network';\n\nconst network = new StacksMainnet();\n\nconst name = 'name.id';\nconst salt =  'example-salt'\nconst zonefile =  'example-zonefile'\nconst publicKey = 'SPF0324DSC4K505TP6A8C7GAK4R95E38TGNZP7RE'\n\n// construct an unsigned bns register-name transaction\n// note: builder functions build transactions with AnchorMode set to Any\nconst unsignedTX = await buildRegisterNameTX({ name, salt, zonefile, publicKey, network });\n```\n"
			},
			"originalName": "bns/src",
			"children": [
				{
					"id": 43,
					"name": "BnsContractAddress",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 44,
							"name": "mainnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 34,
									"character": 9
								}
							],
							"defaultValue": "\"SP000000000000000000002Q6VF78\""
						},
						{
							"id": 45,
							"name": "testnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 35,
									"character": 9
								}
							],
							"defaultValue": "\"ST000000000000000000002AMW42H\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								44,
								45
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 33,
							"character": 36
						}
					]
				},
				{
					"id": 67,
					"name": "BnsContractCallOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 72,
							"name": "attachment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 72,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						},
						{
							"id": 69,
							"name": "functionArgs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 69,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2430,
									"name": "ClarityValue"
								}
							}
						},
						{
							"id": 68,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 68,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 71,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 71,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						},
						{
							"id": 70,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 70,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								72,
								69,
								68,
								71,
								70
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 67,
							"character": 39
						}
					]
				},
				{
					"id": 73,
					"name": "BnsReadOnlyOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 75,
							"name": "functionArgs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 92,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2430,
									"name": "ClarityValue"
								}
							}
						},
						{
							"id": 74,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 91,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 77,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 94,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						},
						{
							"id": 76,
							"name": "senderAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 93,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								75,
								74,
								77,
								76
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 90,
							"character": 35
						}
					]
				},
				{
					"id": 78,
					"name": "CanRegisterNameOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Can register name options",
						"tags": [
							{
								"tag": "param",
								"text": "the fully qualified name (\"name.namespace\") to check",
								"param": "fullyQualifiedName"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 79,
							"name": "fullyQualifiedName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 115,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 80,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 116,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								79,
								80
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 114,
							"character": 39
						}
					]
				},
				{
					"id": 84,
					"name": "GetNamePriceOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Get name price options",
						"tags": [
							{
								"tag": "param",
								"text": "the fully qualified name (\"name.namespace\") to get the price of",
								"param": "fullyQualifiedName"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 85,
							"name": "fullyQualifiedName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 215,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 86,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 216,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								85,
								86
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 214,
							"character": 36
						}
					]
				},
				{
					"id": 81,
					"name": "GetNamespacePriceOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Get namespace price options",
						"tags": [
							{
								"tag": "param",
								"text": "the namespace to get the price of",
								"param": "namespace"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 82,
							"name": "namespace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 164,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 83,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 165,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								82,
								83
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 163,
							"character": 41
						}
					]
				},
				{
					"id": 101,
					"name": "ImportNameOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Namespace name import options",
						"tags": [
							{
								"tag": "param",
								"text": "the namespace to import name into",
								"param": "namespace"
							},
							{
								"tag": "param",
								"text": "the name to import",
								"param": "name"
							},
							{
								"tag": "param",
								"text": "the address to register the name to",
								"param": "beneficiary"
							},
							{
								"tag": "param",
								"text": "the zonefile hash to register",
								"param": "zonefileHash"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 104,
							"name": "beneficiary",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 397,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 103,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 396,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 102,
							"name": "namespace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 395,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 107,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 400,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						},
						{
							"id": 106,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 399,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 105,
							"name": "zonefile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 398,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								104,
								103,
								102,
								107,
								106,
								105
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 394,
							"character": 34
						}
					]
				},
				{
					"id": 112,
					"name": "PreorderNameOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Preorder name options",
						"tags": [
							{
								"tag": "param",
								"text": "the fully qualified name to preorder including the\n                                       namespace (myName.id)",
								"param": "fullyQualifiedName"
							},
							{
								"tag": "param",
								"text": "salt used to generate the preorder name hash",
								"param": "salt"
							},
							{
								"tag": "param",
								"text": "amount of STX to burn for the registration",
								"param": "stxToBurn"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 113,
							"name": "fullyQualifiedName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 488,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 117,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 492,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						},
						{
							"id": 116,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 491,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 114,
							"name": "salt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 489,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 115,
							"name": "stxToBurn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 490,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								113,
								117,
								116,
								114,
								115
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 487,
							"character": 36
						}
					]
				},
				{
					"id": 87,
					"name": "PreorderNamespaceOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Preorder namespace options",
						"tags": [
							{
								"tag": "param",
								"text": "the namespace to preorder",
								"param": "namespace"
							},
							{
								"tag": "param",
								"text": "salt used to generate the preorder namespace hash",
								"param": "salt"
							},
							{
								"tag": "param",
								"text": "amount of STX to burn for the registration",
								"param": "stxToBurn"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 88,
							"name": "namespace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 272,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 92,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 276,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						},
						{
							"id": 91,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 275,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 89,
							"name": "salt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 273,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 90,
							"name": "stxToBurn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 274,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								88,
								92,
								91,
								89,
								90
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 271,
							"character": 41
						}
					]
				},
				{
					"id": 46,
					"name": "PriceFunction",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 49,
							"name": "b1",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 58,
							"name": "b10",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 56,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 59,
							"name": "b11",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 57,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 60,
							"name": "b12",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 58,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 61,
							"name": "b13",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 59,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 62,
							"name": "b14",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 60,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 63,
							"name": "b15",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 61,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 64,
							"name": "b16",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 62,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 50,
							"name": "b2",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 48,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 51,
							"name": "b3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 52,
							"name": "b4",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 50,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 53,
							"name": "b5",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 54,
							"name": "b6",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 55,
							"name": "b7",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 53,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 56,
							"name": "b8",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 54,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 57,
							"name": "b9",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 55,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 47,
							"name": "base",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 45,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 48,
							"name": "coefficient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 46,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 66,
							"name": "noVowelDiscount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 64,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 65,
							"name": "nonAlphaDiscount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 63,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								49,
								58,
								59,
								60,
								61,
								62,
								63,
								64,
								50,
								51,
								52,
								53,
								54,
								55,
								56,
								57,
								47,
								48,
								66,
								65
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 44,
							"character": 30
						}
					]
				},
				{
					"id": 108,
					"name": "ReadyNamespaceOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Ready namespace options",
						"tags": [
							{
								"tag": "param",
								"text": "the namespace to ready",
								"param": "namespace"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 109,
							"name": "namespace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 446,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 111,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 448,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						},
						{
							"id": 110,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 447,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								109,
								111,
								110
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 445,
							"character": 38
						}
					]
				},
				{
					"id": 118,
					"name": "RegisterNameOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Register name options",
						"tags": [
							{
								"tag": "param",
								"text": "the fully qualified name to preorder including the\n                                       namespace (myName.id)",
								"param": "fullyQualifiedName"
							},
							{
								"tag": "param",
								"text": "salt used to generate the preorder name hash",
								"param": "salt"
							},
							{
								"tag": "param",
								"text": "the zonefile to register with the name",
								"param": "zonefile"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 119,
							"name": "fullyQualifiedName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 540,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 123,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 544,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						},
						{
							"id": 122,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 543,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 120,
							"name": "salt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 541,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 121,
							"name": "zonefile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 542,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								119,
								123,
								122,
								120,
								121
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 539,
							"character": 36
						}
					]
				},
				{
					"id": 139,
					"name": "RenewNameOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Renew name options",
						"tags": [
							{
								"tag": "param",
								"text": "the fully qualified name to renew including the\n                                       namespace (myName.id)",
								"param": "fullyQualifiedName"
							},
							{
								"tag": "param",
								"text": "amount of STX to burn for the registration",
								"param": "stxToBurn"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "optionally choose a new owner address",
								"param": "newOwnerAddress"
							},
							{
								"tag": "param",
								"text": "optionally update the zonefile hash",
								"param": "zonefileHash"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 140,
							"name": "fullyQualifiedName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 750,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 143,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 753,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						},
						{
							"id": 144,
							"name": "newOwnerAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 754,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 142,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 752,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 141,
							"name": "stxToBurn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 751,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 145,
							"name": "zonefile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 755,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								140,
								143,
								144,
								142,
								141,
								145
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 749,
							"character": 33
						}
					]
				},
				{
					"id": 93,
					"name": "RevealNamespaceOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Reveal namespace options",
						"tags": [
							{
								"tag": "param",
								"text": "the namespace to reveal",
								"param": "namespace"
							},
							{
								"tag": "param",
								"text": "salt used to generate the preorder namespace hash",
								"param": "salt"
							},
							{
								"tag": "param",
								"text": "an object containing the price function for the namespace",
								"param": "priceFunction"
							},
							{
								"tag": "param",
								"text": "the number of blocks name registrations are valid for in the namespace",
								"param": "lifeTime"
							},
							{
								"tag": "param",
								"text": "the STX address used for name imports",
								"param": "namespaceImportAddress"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 97,
							"name": "lifetime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 324,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 94,
							"name": "namespace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 321,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 98,
							"name": "namespaceImportAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 325,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 100,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 327,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						},
						{
							"id": 96,
							"name": "priceFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 323,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 46,
								"name": "PriceFunction"
							}
						},
						{
							"id": 99,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 326,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 95,
							"name": "salt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 322,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								97,
								94,
								98,
								100,
								96,
								99,
								95
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 320,
							"character": 39
						}
					]
				},
				{
					"id": 135,
					"name": "RevokeNameOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Revoke name options",
						"tags": [
							{
								"tag": "param",
								"text": "the fully qualified name to revoke including the\n                                       namespace (myName.id)",
								"param": "fullyQualifiedName"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 136,
							"name": "fullyQualifiedName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 704,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 138,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 706,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						},
						{
							"id": 137,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 705,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								136,
								138,
								137
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 703,
							"character": 34
						}
					]
				},
				{
					"id": 129,
					"name": "TransferNameOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Transfer name options",
						"tags": [
							{
								"tag": "param",
								"text": "the fully qualified name to transfer including the\n                                       namespace (myName.id)",
								"param": "fullyQualifiedName"
							},
							{
								"tag": "param",
								"text": "the recipient address of the name transfer",
								"param": "newOwnerAddress"
							},
							{
								"tag": "param",
								"text": "the optional zonefile to register with the name",
								"param": "zonefile"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 130,
							"name": "fullyQualifiedName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 645,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 133,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 648,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						},
						{
							"id": 131,
							"name": "newOwnerAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 646,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 132,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 647,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 134,
							"name": "zonefile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 649,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								130,
								133,
								131,
								132,
								134
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 644,
							"character": 36
						}
					]
				},
				{
					"id": 124,
					"name": "UpdateNameOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Update name options",
						"tags": [
							{
								"tag": "param",
								"text": "the fully qualified name to update including the\n                                       namespace (myName.id)",
								"param": "fullyQualifiedName"
							},
							{
								"tag": "param",
								"text": "the zonefile to register with the name",
								"param": "zonefile"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 125,
							"name": "fullyQualifiedName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 596,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 128,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 599,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						},
						{
							"id": 127,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 598,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 126,
							"name": "zonefile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 597,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								125,
								128,
								127,
								126
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 595,
							"character": 34
						}
					]
				},
				{
					"id": 42,
					"name": "BNS_CONTRACT_NAME",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 31,
							"character": 30
						}
					],
					"type": {
						"type": "literal",
						"value": "bns"
					},
					"defaultValue": "'bns'"
				},
				{
					"id": 18,
					"name": "buildImportNameTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 413,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 19,
							"name": "buildImportNameTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a namespace name import transaction.\nAn optional step in namespace registration.",
								"text": "Resolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 20,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 101,
										"name": "ImportNameOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 24,
					"name": "buildPreorderNameTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 506,
							"character": 41
						}
					],
					"signatures": [
						{
							"id": 25,
							"name": "buildPreorderNameTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a name preorder transaction.\nFirst step in registering a name. This transaction does not reveal the name that is\nabout to be registered. And it sets the amount of STX to be burned for the registration.",
								"text": "Resolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 26,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 112,
										"name": "PreorderNameOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 12,
					"name": "buildPreorderNamespaceTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 290,
							"character": 46
						}
					],
					"signatures": [
						{
							"id": 13,
							"name": "buildPreorderNamespaceTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a namespace preorder transaction.\nFirst step in registering a namespace. This transaction does not reveal the namespace that is\nabout to be registered. And it sets the amount of STX to be burned for the registration.",
								"text": "Resolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 14,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 87,
										"name": "PreorderNamespaceOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 21,
					"name": "buildReadyNamespaceTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 462,
							"character": 43
						}
					],
					"signatures": [
						{
							"id": 22,
							"name": "buildReadyNamespaceTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a ready namespace transaction.\nFinal step in namespace registration. This completes the namespace registration and\nmakes the namespace available for name registrations.",
								"text": "Resolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 23,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 108,
										"name": "ReadyNamespaceOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 27,
					"name": "buildRegisterNameTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 557,
							"character": 41
						}
					],
					"signatures": [
						{
							"id": 28,
							"name": "buildRegisterNameTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a name registration transaction.\nSecond and final step in registering a name.",
								"text": "Resolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 29,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 118,
										"name": "RegisterNameOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 39,
					"name": "buildRenewNameTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 768,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 40,
							"name": "buildRenewNameTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a name renew transaction.\nThis renews a name registration.",
								"text": "Resolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 41,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 139,
										"name": "RenewNameOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 15,
					"name": "buildRevealNamespaceTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 340,
							"character": 44
						}
					],
					"signatures": [
						{
							"id": 16,
							"name": "buildRevealNamespaceTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a namespace reveal transaction.\nSecond step in registering a namespace.",
								"text": "Resolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 17,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 93,
										"name": "RevealNamespaceOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 36,
					"name": "buildRevokeNameTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 719,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 37,
							"name": "buildRevokeNameTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a name revoke transaction.\nThis revokes a name registration.",
								"text": "Resolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 38,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 135,
										"name": "RevokeNameOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 33,
					"name": "buildTransferNameTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 666,
							"character": 41
						}
					],
					"signatures": [
						{
							"id": 34,
							"name": "buildTransferNameTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a name transfer transaction.\nThis changes the owner of the registered name.",
								"text": "Since the underlying NFT will be transferred,\nyou will be required to add a post-condition to this\ntransaction before broadcasting it.\n\nResolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 35,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 129,
										"name": "TransferNameOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 30,
					"name": "buildUpdateNameTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 612,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 31,
							"name": "buildUpdateNameTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a name update transaction.\nThis changes the zonefile for the registered name.",
								"text": "Resolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 32,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 124,
										"name": "UpdateNameOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 3,
					"name": "canRegisterName",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 127,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 4,
							"name": "canRegisterName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if name can be registered",
								"returns": "that resolves to true if the operation succeeds\n"
							},
							"parameters": [
								{
									"id": 5,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 78,
										"name": "CanRegisterNameOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 9,
					"name": "getNamePrice",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 227,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 10,
							"name": "getNamePrice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get price of name registration in microstacks",
								"returns": "that resolves to a BN object number of microstacks if the operation succeeds\n"
							},
							"parameters": [
								{
									"id": 11,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 84,
										"name": "GetNamePriceOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "BN"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 6,
					"name": "getNamespacePrice",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 176,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 7,
							"name": "getNamespacePrice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get price of namespace registration in microstacks",
								"returns": "that resolves to a BN object number of microstacks if the operation succeeds\n"
							},
							"parameters": [
								{
									"id": 8,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 81,
										"name": "GetNamespacePriceOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "BN"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						43
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						67,
						73,
						78,
						84,
						81,
						101,
						112,
						87,
						46,
						108,
						118,
						139,
						93,
						135,
						129,
						124
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						42
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						18,
						24,
						12,
						21,
						27,
						39,
						15,
						36,
						33,
						30,
						3,
						9,
						6
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/bns/src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 146,
			"name": "cli",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/cli\n\nCommand line interface to interact with auth, storage and Stacks transactions.\n\n## Installation\n\n```\nnpm install @stacks/cli\n```\n\n## Usage\n\nSee [documentation](https://docs.blockstack.org/references/stacks-cli)\n"
			},
			"originalName": "cli/src",
			"children": [
				{
					"id": 718,
					"name": "CLIMain",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1768,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 719,
							"name": "CLIMain",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						718
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 147,
			"name": "common",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/common\n\nCommon utilities used by Stacks.js packages.\n\n## Installation\n\n```\nnpm install @stacks/common\n```\n"
			},
			"originalName": "common/src",
			"children": [
				{
					"id": 1272,
					"name": "ChainID",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 1274,
							"name": "Mainnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/common/src/constants.ts",
									"line": 3,
									"character": 9
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 1273,
							"name": "Testnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/common/src/constants.ts",
									"line": 2,
									"character": 9
								}
							],
							"defaultValue": "2147483648"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								1274,
								1273
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/common/src/constants.ts",
							"line": 1,
							"character": 12
						}
					]
				},
				{
					"id": 1275,
					"name": "TransactionVersion",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 1276,
							"name": "Mainnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/common/src/constants.ts",
									"line": 7,
									"character": 9
								}
							],
							"defaultValue": "0"
						},
						{
							"id": 1277,
							"name": "Testnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/common/src/constants.ts",
									"line": 8,
									"character": 9
								}
							],
							"defaultValue": "128"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								1276,
								1277
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/common/src/constants.ts",
							"line": 6,
							"character": 23
						}
					]
				},
				{
					"id": 1010,
					"name": "HubErrorDetails",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1011,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/common/src/errors.ts",
									"line": 217,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1012,
							"name": "statusCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/common/src/errors.ts",
									"line": 218,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1013,
							"name": "statusText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/common/src/errors.ts",
									"line": 219,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1011,
								1012,
								1013
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/common/src/errors.ts",
							"line": 216,
							"character": 32
						}
					],
					"indexSignature": {
						"id": 1014,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 1015,
								"name": "prop",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 1270,
					"name": "Buffer",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/common/src/utils.ts",
							"line": 12,
							"character": 27
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"name": "NodeJSBuffer"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 1240,
					"name": "getBase64OutputLength",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils.ts",
							"line": 78,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 1241,
							"name": "getBase64OutputLength",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Calculate the base64 encoded string length for a given input length.\nThis is equivalent to the byte length when the string is ASCII or UTF8-8\nencoded."
							},
							"parameters": [
								{
									"id": 1242,
									"name": "inputByteLength",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						1272,
						1275
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1010
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1270
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1240
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 148,
			"name": "encryption",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/encryption\n\nEncryption functions used by Stacks.js packages.\n\n## Installation\n\n```\nnpm install @stacks/cli\n```\n"
			},
			"originalName": "encryption/src",
			"children": [
				{
					"id": 1409,
					"name": "NodeCryptoSha2Hash",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1410,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1411,
									"name": "new NodeCryptoSha2Hash",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1412,
											"name": "createHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1413,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1414,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1415,
																	"name": "algorithm",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 1416,
																	"name": "options",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "HashOptions"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Hash"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1409,
										"name": "NodeCryptoSha2Hash"
									}
								}
							]
						},
						{
							"id": 1417,
							"name": "createHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/sha2Hash.ts",
									"line": 12,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1418,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1419,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1420,
													"name": "algorithm",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1421,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "HashOptions"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Hash"
											}
										}
									]
								}
							}
						},
						{
							"id": 1422,
							"name": "digest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/sha2Hash.ts",
									"line": 18,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 1423,
									"name": "digest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1424,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1425,
											"name": "algorithm",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'sha256'"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1410
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1417
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1422
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/sha2Hash.ts",
							"line": 11,
							"character": 31
						}
					]
				},
				{
					"id": 1426,
					"name": "WebCryptoSha2Hash",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1427,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1428,
									"name": "new WebCryptoSha2Hash",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1429,
											"name": "subtleCrypto",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SubtleCrypto"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1426,
										"name": "WebCryptoSha2Hash"
									}
								}
							]
						},
						{
							"id": 1430,
							"name": "subtleCrypto",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/sha2Hash.ts",
									"line": 33,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "SubtleCrypto"
							}
						},
						{
							"id": 1431,
							"name": "digest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/sha2Hash.ts",
									"line": 39,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 1432,
									"name": "digest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1433,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1434,
											"name": "algorithm",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'sha256'"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1406,
										"name": "Sha2Hash.digest"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1405,
								"name": "Sha2Hash.digest"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1427
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1430
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1431
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/sha2Hash.ts",
							"line": 32,
							"character": 30
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1404,
							"name": "Sha2Hash"
						}
					]
				},
				{
					"id": 1449,
					"name": "EncryptContentOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify encryption options, and whether to sign the ciphertext."
					},
					"children": [
						{
							"id": 1453,
							"name": "cipherTextEncoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "String encoding format for the cipherText buffer.\nCurrently defaults to 'hex' for legacy backwards-compatibility.\nOnly used if the `encrypt` option is also used.\nNote: in the future this should default to 'base64' for the significant\nfile size reduction."
							},
							"sources": [
								{
									"fileName": "packages/encryption/src/encryption.ts",
									"line": 27,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "CipherTextEncoding"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1447,
								"name": "EncryptionOptions.cipherTextEncoding"
							}
						},
						{
							"id": 1451,
							"name": "privateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Encrypt the data with the public key corresponding to the supplied private key"
							},
							"sources": [
								{
									"fileName": "packages/encryption/src/encryption.ts",
									"line": 48,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1450,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Encrypt the data with this key."
							},
							"sources": [
								{
									"fileName": "packages/encryption/src/encryption.ts",
									"line": 44,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1452,
							"name": "sign",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If set to `true` the data is signed using ECDSA on SHA256 hashes with the user's\napp private key. If a string is specified, it is used as the private key instead\nof the user's app private key.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/encryption/src/encryption.ts",
									"line": 19,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1446,
								"name": "EncryptionOptions.sign"
							}
						},
						{
							"id": 1454,
							"name": "wasString",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies if the original unencrypted content is a ASCII or UTF-8 string.\nFor example stringified JSON.\nIf true, then when the ciphertext is decrypted, it will be returned as\na `string` type variable, otherwise will be returned as a Buffer."
							},
							"sources": [
								{
									"fileName": "packages/encryption/src/encryption.ts",
									"line": 34,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1448,
								"name": "EncryptionOptions.wasString"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1453,
								1451,
								1450,
								1452,
								1454
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/encryption.ts",
							"line": 40,
							"character": 38
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1445,
							"name": "EncryptionOptions"
						}
					]
				},
				{
					"id": 1445,
					"name": "EncryptionOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1447,
							"name": "cipherTextEncoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "String encoding format for the cipherText buffer.\nCurrently defaults to 'hex' for legacy backwards-compatibility.\nOnly used if the `encrypt` option is also used.\nNote: in the future this should default to 'base64' for the significant\nfile size reduction."
							},
							"sources": [
								{
									"fileName": "packages/encryption/src/encryption.ts",
									"line": 27,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "CipherTextEncoding"
							}
						},
						{
							"id": 1446,
							"name": "sign",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If set to `true` the data is signed using ECDSA on SHA256 hashes with the user's\napp private key. If a string is specified, it is used as the private key instead\nof the user's app private key.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/encryption/src/encryption.ts",
									"line": 19,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 1448,
							"name": "wasString",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies if the original unencrypted content is a ASCII or UTF-8 string.\nFor example stringified JSON.\nIf true, then when the ciphertext is decrypted, it will be returned as\na `string` type variable, otherwise will be returned as a Buffer."
							},
							"sources": [
								{
									"fileName": "packages/encryption/src/encryption.ts",
									"line": 34,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1447,
								1446,
								1448
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/encryption.ts",
							"line": 12,
							"character": 34
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1449,
							"name": "EncryptContentOptions"
						},
						{
							"type": "reference",
							"id": 2041,
							"name": "PutFileOptions"
						}
					]
				},
				{
					"id": 1404,
					"name": "Sha2Hash",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1405,
							"name": "digest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1406,
									"name": "digest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1407,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1408,
											"name": "algorithm",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "sha256"
													},
													{
														"type": "literal",
														"value": "sha512"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1405
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/sha2Hash.ts",
							"line": 7,
							"character": 25
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 1426,
							"name": "WebCryptoSha2Hash"
						}
					]
				},
				{
					"id": 1392,
					"name": "GetRandomBytes",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Optional function to generate cryptographically secure random bytes"
					},
					"sources": [
						{
							"fileName": "packages/encryption/src/cryptoRandom.ts",
							"line": 8,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1393,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/cryptoRandom.ts",
									"line": 8,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 1394,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1395,
											"name": "count",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							]
						}
					}
				},
				{
					"id": 1396,
					"name": "createSha2Hash",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/encryption/src/sha2Hash.ts",
							"line": 61,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 1397,
							"name": "createSha2Hash",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1404,
										"name": "Sha2Hash"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1439,
					"name": "decryptContent",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/encryption/src/encryption.ts",
							"line": 111,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 1440,
							"name": "decryptContent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Decrypts data encrypted with `encryptContent` with the\ntransit private key.",
								"returns": "decrypted content.\n"
							},
							"parameters": [
								{
									"id": 1441,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "encrypted content."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1442,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1443,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1444,
													"name": "privateKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "the hex string of the ECDSA private\nkey to use for decryption. If not provided, will use user's appPrivateKey."
													},
													"sources": [
														{
															"fileName": "packages/encryption/src/encryption.ts",
															"line": 114,
															"character": 14
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1444
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/encryption/src/encryption.ts",
													"line": 113,
													"character": 11
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1435,
					"name": "encryptContent",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/encryption/src/encryption.ts",
							"line": 59,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 1436,
							"name": "encryptContent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Encrypts the data provided with the app public key.",
								"returns": "Stringified ciphertext object\n"
							},
							"parameters": [
								{
									"id": 1437,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "data to encrypt"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer"
											}
										]
									}
								},
								{
									"id": 1438,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1449,
										"name": "EncryptContentOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1458,
					"name": "getBase64OutputLength",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/encryption/src/utils.ts",
							"line": 18,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 1459,
							"name": "getBase64OutputLength",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Calculate the base64 encoded string length for a given input length.\nThis is equivalent to the byte length when the string is ASCII or UTF8-8\nencoded."
							},
							"parameters": [
								{
									"id": 1460,
									"name": "inputByteLength",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1398,
					"name": "hashSha256Sync",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/encryption/src/sha2Hash.ts",
							"line": 70,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 1399,
							"name": "hashSha256Sync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1400,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 1401,
					"name": "hashSha512Sync",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/encryption/src/sha2Hash.ts",
							"line": 76,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 1402,
							"name": "hashSha512Sync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1403,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 1382,
					"name": "randomBytes",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExternal": true,
						"isConst": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/randombytes/index.d.ts",
							"line": 12,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 1383,
							"name": "randomBytes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1384,
									"name": "size",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						},
						{
							"id": 1385,
							"name": "randomBytes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1386,
									"name": "size",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1387,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1388,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/crypto.d.ts",
													"line": 429,
													"character": 48
												}
											],
											"signatures": [
												{
													"id": 1389,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 1390,
															"name": "err",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "Error"
																	},
																	{
																		"type": "literal",
																		"value": null
																	}
																]
															}
														},
														{
															"id": 1391,
															"name": "buf",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"name": "Buffer"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1409,
						1426
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1449,
						1445,
						1404
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1392
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1396,
						1439,
						1435,
						1458,
						1398,
						1401,
						1382
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/encryption/src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 149,
			"name": "keychain",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/keychain\n\nCreate and manage keys/wallets for the Stacks blockchain.\n\n## Installation\n\n```\nnpm install @stacks/keychain\n```\n"
			},
			"originalName": "keychain/src",
			"children": [
				{
					"id": 1600,
					"name": "IdentityNameValidityError",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 1603,
							"name": "ILLEGAL_CHARACTER",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/utils/index.ts",
									"line": 159,
									"character": 19
								}
							],
							"defaultValue": "\"error_illegal_character\""
						},
						{
							"id": 1602,
							"name": "MAXIMUM_LENGTH",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/utils/index.ts",
									"line": 158,
									"character": 16
								}
							],
							"defaultValue": "\"error_maximum_length\""
						},
						{
							"id": 1601,
							"name": "MINIMUM_LENGTH",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/utils/index.ts",
									"line": 157,
									"character": 16
								}
							],
							"defaultValue": "\"error_minimum_length\""
						},
						{
							"id": 1604,
							"name": "UNAVAILABLE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/utils/index.ts",
									"line": 160,
									"character": 13
								}
							],
							"defaultValue": "\"error_name_unavailable\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								1603,
								1602,
								1601,
								1604
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/index.ts",
							"line": 156,
							"character": 37
						}
					]
				},
				{
					"id": 1746,
					"name": "Subdomains",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 1748,
							"name": "BLOCKSTACK",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/profiles.ts",
									"line": 44,
									"character": 12
								}
							],
							"defaultValue": "\"id.blockstack\""
						},
						{
							"id": 1747,
							"name": "TEST",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/profiles.ts",
									"line": 43,
									"character": 6
								}
							],
							"defaultValue": "\"test-personal.id\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								1748,
								1747
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/keychain/src/profiles.ts",
							"line": 42,
							"character": 22
						}
					]
				},
				{
					"id": 1776,
					"name": "Identity",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1777,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1778,
									"name": "new Identity",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1779,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IdentityConstructorOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1776,
										"name": "Identity"
									}
								}
							]
						},
						{
							"id": 1781,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 32,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1782,
							"name": "defaultUsername",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 33,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1780,
							"name": "keyPair",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 31,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"id": 1589,
								"name": "IdentityKeyPair"
							}
						},
						{
							"id": 1784,
							"name": "profile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 35,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"id": 1727,
								"name": "Profile"
							}
						},
						{
							"id": 1783,
							"name": "usernames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 34,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1794,
							"name": "appPrivateKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 115,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 1795,
									"name": "appPrivateKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1796,
											"name": "appDomain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 1800,
							"name": "fetchNames",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 135,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1801,
									"name": "fetchNames",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1785,
							"name": "makeAuthResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 51,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 1786,
									"name": "makeAuthResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1787,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1788,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1789,
															"name": "appDomain",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/keychain/src/identity.ts",
																	"line": 58,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1790,
															"name": "gaiaUrl",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/keychain/src/identity.ts",
																	"line": 59,
																	"character": 11
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1792,
															"name": "scopes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/keychain/src/identity.ts",
																	"line": 61,
																	"character": 10
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														},
														{
															"id": 1793,
															"name": "stxAddress",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/keychain/src/identity.ts",
																	"line": 62,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1791,
															"name": "transitPublicKey",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/keychain/src/identity.ts",
																	"line": 60,
																	"character": 20
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																1789,
																1790,
																1792,
																1793,
																1791
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1797,
							"name": "profileUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 121,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1798,
									"name": "profileUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1799,
											"name": "gaiaUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1802,
							"name": "refresh",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 146,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 1803,
									"name": "refresh",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch existing information related to this identity, like username and profile information"
									},
									"parameters": [
										{
											"id": 1804,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RefreshOptions"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1777
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1781,
								1782,
								1780,
								1784,
								1783
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1794,
								1800,
								1785,
								1797,
								1802
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/keychain/src/identity.ts",
							"line": 30,
							"character": 21
						}
					]
				},
				{
					"id": 1464,
					"name": "Wallet",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1493,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1494,
									"name": "new Wallet",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1495,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1672,
												"name": "ConstructorOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1464,
										"name": "Wallet"
									}
								}
							]
						},
						{
							"id": 1498,
							"name": "bitcoinPublicKeychain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 68,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1496,
							"name": "chain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 66,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"id": 3060,
								"name": "ChainID"
							}
						},
						{
							"id": 1504,
							"name": "configPrivateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 74,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1497,
							"name": "encryptedBackupPhrase",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 67,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1499,
							"name": "firstBitcoinAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 69,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1503,
							"name": "identities",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 73,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1776,
									"name": "Identity"
								}
							}
						},
						{
							"id": 1501,
							"name": "identityAddresses",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 71,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1500,
							"name": "identityKeypairs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 70,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1589,
									"name": "IdentityKeyPair"
								}
							}
						},
						{
							"id": 1502,
							"name": "identityPublicKeychain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 72,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1505,
							"name": "stacksPrivateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 75,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						},
						{
							"id": 1506,
							"name": "walletConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 76,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"id": 1669,
								"name": "WalletConfig"
							}
						},
						{
							"id": 1516,
							"name": "createGaiaConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 224,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 1517,
									"name": "createGaiaConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1518,
											"name": "gaiaHubUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2023,
												"name": "GaiaHubConfig"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1513,
							"name": "createNewIdentity",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 212,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1514,
									"name": "createNewIdentity",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1515,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1776,
												"name": "Identity"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1519,
							"name": "fetchConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 228,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 1520,
									"name": "fetchConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1521,
											"name": "gaiaConfig",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2023,
												"name": "GaiaHubConfig"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"id": 1669,
														"name": "WalletConfig"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1522,
							"name": "getOrCreateConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 245,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1523,
									"name": "getOrCreateConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1524,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1525,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1526,
															"name": "gaiaConfig",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/keychain/src/wallet/index.ts",
																	"line": 249,
																	"character": 14
																}
															],
															"type": {
																"type": "reference",
																"id": 2023,
																"name": "GaiaHubConfig"
															}
														},
														{
															"id": 1527,
															"name": "skipUpload",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/keychain/src/wallet/index.ts",
																	"line": 250,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																1526,
																1527
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1669,
												"name": "WalletConfig"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1543,
							"name": "getSigner",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 323,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 1544,
									"name": "getSigner",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1684,
										"name": "WalletSigner"
									}
								}
							]
						},
						{
							"id": 1507,
							"name": "restoreIdentities",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 178,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1508,
									"name": "restoreIdentities",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Restore all previously used identities. This is meant to be used when 'restoring' a wallet.\nFirst, it will check for a `walletConfig`. If present, then we use that to determine how\nmany identities to generate, and auto-populate their username.",
										"text": "If `walletConfig` is empty, then this is being restored from an authenticator that doesn't\nsupport `walletConfig`. In that case, we will recursively generate identities, and check for\non-chain names.\n\n"
									},
									"parameters": [
										{
											"id": 1509,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1510,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1512,
															"name": "gaiaReadURL",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/keychain/src/wallet/index.ts",
																	"line": 183,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1511,
															"name": "rootNode",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/keychain/src/wallet/index.ts",
																	"line": 182,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"name": "BIP32Interface"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																1512,
																1511
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1464,
												"name": "Wallet"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1528,
							"name": "updateConfig",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 273,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 1529,
									"name": "updateConfig",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1530,
											"name": "gaiaConfig",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2023,
												"name": "GaiaHubConfig"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1538,
							"name": "updateConfigForReuseWarning",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 315,
									"character": 35
								}
							],
							"signatures": [
								{
									"id": 1539,
									"name": "updateConfigForReuseWarning",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1540,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1541,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1542,
															"name": "gaiaConfig",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/keychain/src/wallet/index.ts",
																	"line": 315,
																	"character": 64
																}
															],
															"type": {
																"type": "reference",
																"id": 2023,
																"name": "GaiaHubConfig"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																1542
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1531,
							"name": "updateConfigWithAuth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 279,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 1532,
									"name": "updateConfigWithAuth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1533,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1534,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1536,
															"name": "app",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/keychain/src/wallet/index.ts",
																	"line": 285,
																	"character": 7
																}
															],
															"type": {
																"type": "reference",
																"id": 1663,
																"name": "ConfigApp"
															}
														},
														{
															"id": 1537,
															"name": "gaiaConfig",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/keychain/src/wallet/index.ts",
																	"line": 286,
																	"character": 14
																}
															],
															"type": {
																"type": "reference",
																"id": 2023,
																"name": "GaiaHubConfig"
															}
														},
														{
															"id": 1535,
															"name": "identityIndex",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/keychain/src/wallet/index.ts",
																	"line": 284,
																	"character": 17
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																1536,
																1537,
																1535
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1485,
							"name": "createAccount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 139,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 1486,
									"name": "createAccount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1487,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1488,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1491,
															"name": "chain",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/keychain/src/wallet/index.ts",
																	"line": 147,
																	"character": 9
																}
															],
															"type": {
																"type": "reference",
																"id": 3060,
																"name": "ChainID"
															}
														},
														{
															"id": 1489,
															"name": "encryptedBackupPhrase",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/keychain/src/wallet/index.ts",
																	"line": 145,
																	"character": 25
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1492,
															"name": "identitiesToGenerate",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/keychain/src/wallet/index.ts",
																	"line": 148,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1490,
															"name": "rootNode",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/keychain/src/wallet/index.ts",
																	"line": 146,
																	"character": 12
																}
															],
															"type": {
																"type": "reference",
																"name": "BIP32Interface"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																1491,
																1489,
																1492,
																1490
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1464,
												"name": "Wallet"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1472,
							"name": "generate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 118,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 1473,
									"name": "generate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1474,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1475,
											"name": "chain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3060,
												"name": "ChainID"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1464,
												"name": "Wallet"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1465,
							"name": "generateFactory",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 104,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 1466,
									"name": "generateFactory",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1467,
											"name": "bitsEntropy",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1645,
												"name": "AllowedKeyEntropyBits"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1468,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 1469,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1470,
															"name": "password",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1471,
															"name": "chain",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 3060,
																"name": "ChainID"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 1464,
																"name": "Wallet"
															}
														],
														"name": "Promise"
													}
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 1476,
							"name": "generateStrong",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 122,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 1477,
									"name": "generateStrong",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1478,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1479,
											"name": "chain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3060,
												"name": "ChainID"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1464,
												"name": "Wallet"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1480,
							"name": "restore",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 126,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 1481,
									"name": "restore",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1482,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1483,
											"name": "seedPhrase",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1484,
											"name": "chain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3060,
												"name": "ChainID"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1464,
												"name": "Wallet"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1493
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1498,
								1496,
								1504,
								1497,
								1499,
								1503,
								1501,
								1500,
								1502,
								1505,
								1506
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1516,
								1513,
								1519,
								1522,
								1543,
								1507,
								1528,
								1538,
								1531,
								1485,
								1472,
								1465,
								1476,
								1480
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/keychain/src/wallet/index.ts",
							"line": 65,
							"character": 19
						}
					]
				},
				{
					"id": 1684,
					"name": "WalletSigner",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1685,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1686,
									"name": "new WalletSigner",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1687,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1688,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1689,
															"name": "privateKey",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/keychain/src/wallet/signer.ts",
																	"line": 57,
																	"character": 42
																}
															],
															"type": {
																"type": "reference",
																"name": "Buffer"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																1689
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1684,
										"name": "WalletSigner"
									}
								}
							]
						},
						{
							"id": 1690,
							"name": "privateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/signer.ts",
									"line": 55,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						},
						{
							"id": 1698,
							"name": "fetchAccount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/signer.ts",
									"line": 75,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 1699,
									"name": "fetchAccount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1700,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1701,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1703,
															"name": "rpcClient",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/keychain/src/wallet/signer.ts",
																	"line": 80,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "RPCClient"
															}
														},
														{
															"id": 1702,
															"name": "version",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/keychain/src/wallet/signer.ts",
																	"line": 79,
																	"character": 11
																}
															],
															"type": {
																"type": "reference",
																"id": 3085,
																"name": "TransactionVersion"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																1703,
																1702
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Account"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1696,
							"name": "getNetwork",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/signer.ts",
									"line": 69,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 1697,
									"name": "getNetwork",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 248,
										"name": "StacksTestnet"
									}
								}
							]
						},
						{
							"id": 1691,
							"name": "getSTXAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/signer.ts",
									"line": 61,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 1692,
									"name": "getSTXAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1693,
											"name": "version",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3085,
												"name": "TransactionVersion"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 1694,
							"name": "getSTXPrivateKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/signer.ts",
									"line": 65,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1695,
									"name": "getSTXPrivateKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							]
						},
						{
							"id": 1704,
							"name": "signContractCall",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/signer.ts",
									"line": 87,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 1705,
									"name": "signContractCall",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1706,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractCallOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2138,
												"name": "StacksTransaction"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1707,
							"name": "signContractDeploy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/signer.ts",
									"line": 112,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 1708,
									"name": "signContractDeploy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1709,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ContractDeployOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2138,
												"name": "StacksTransaction"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1710,
							"name": "signSTXTransfer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/signer.ts",
									"line": 133,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 1711,
									"name": "signSTXTransfer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1712,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "STXTransferOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2138,
												"name": "StacksTransaction"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1685
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1690
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1698,
								1696,
								1691,
								1694,
								1704,
								1707,
								1710
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/keychain/src/wallet/signer.ts",
							"line": 54,
							"character": 25
						}
					]
				},
				{
					"id": 1663,
					"name": "ConfigApp",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1667,
							"name": "appIcon",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 34,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1666,
							"name": "lastLoginAt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 33,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1668,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 35,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1664,
							"name": "origin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 31,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1665,
							"name": "scopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 32,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1667,
								1666,
								1668,
								1664,
								1665
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/keychain/src/wallet/index.ts",
							"line": 30,
							"character": 26
						}
					]
				},
				{
					"id": 1672,
					"name": "ConstructorOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1675,
							"name": "bitcoinPublicKeychain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 54,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1673,
							"name": "chain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 52,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"id": 3060,
								"name": "ChainID"
							}
						},
						{
							"id": 1681,
							"name": "configPrivateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 60,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1679,
							"name": "encryptedBackupPhrase",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 58,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1676,
							"name": "firstBitcoinAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 55,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1680,
							"name": "identities",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 59,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1776,
									"name": "Identity"
								}
							}
						},
						{
							"id": 1678,
							"name": "identityAddresses",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 57,
									"character": 19
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1677,
							"name": "identityKeypairs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 56,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1589,
									"name": "IdentityKeyPair"
								}
							}
						},
						{
							"id": 1674,
							"name": "identityPublicKeychain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 53,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1682,
							"name": "stacksPrivateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 61,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						},
						{
							"id": 1683,
							"name": "walletConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 62,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"id": 1669,
								"name": "WalletConfig"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1675,
								1673,
								1681,
								1679,
								1676,
								1680,
								1678,
								1677,
								1674,
								1682,
								1683
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/keychain/src/wallet/index.ts",
							"line": 51,
							"character": 35
						}
					]
				},
				{
					"id": 1589,
					"name": "IdentityKeyPair",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1592,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/utils/index.ts",
									"line": 72,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1593,
							"name": "appsNodeKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/utils/index.ts",
									"line": 73,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1590,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/utils/index.ts",
									"line": 70,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1591,
							"name": "keyID",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/utils/index.ts",
									"line": 71,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1595,
							"name": "salt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/utils/index.ts",
									"line": 75,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1594,
							"name": "stxNodeKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/utils/index.ts",
									"line": 74,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1592,
								1593,
								1590,
								1591,
								1595,
								1594
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/index.ts",
							"line": 69,
							"character": 32
						}
					]
				},
				{
					"id": 1727,
					"name": "Profile",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1729,
							"name": "@context",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/profiles.ts",
									"line": 19,
									"character": 30
								}
							],
							"type": {
								"type": "literal",
								"value": "http://schema.org"
							}
						},
						{
							"id": 1728,
							"name": "@type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/profiles.ts",
									"line": 18,
									"character": 26
								}
							],
							"type": {
								"type": "literal",
								"value": "Person"
							}
						},
						{
							"id": 1730,
							"name": "apps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/profiles.ts",
									"line": 21,
									"character": 6
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1731,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1732,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1733,
												"name": "origin",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							}
						},
						{
							"id": 1734,
							"name": "appsMeta",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/profiles.ts",
									"line": 24,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1735,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1736,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1737,
												"name": "origin",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reflection",
											"declaration": {
												"id": 1738,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 1739,
														"name": "publicKey",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "packages/keychain/src/profiles.ts",
																"line": 26,
																"character": 15
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 1740,
														"name": "storage",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "packages/keychain/src/profiles.ts",
																"line": 27,
																"character": 13
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"kind": 1024,
														"children": [
															1739,
															1740
														]
													}
												],
												"sources": [
													{
														"fileName": "packages/keychain/src/profiles.ts",
														"line": 25,
														"character": 21
													}
												]
											}
										}
									}
								}
							}
						},
						{
							"id": 1742,
							"name": "image",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/profiles.ts",
									"line": 31,
									"character": 7
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 1723,
									"name": "ProfileImage"
								}
							}
						},
						{
							"id": 1741,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/profiles.ts",
									"line": 30,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1729,
								1728,
								1730,
								1734,
								1742,
								1741
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/keychain/src/profiles.ts",
							"line": 18,
							"character": 24
						}
					],
					"indexSignature": {
						"id": 1743,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 1744,
								"name": "key",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 1723,
					"name": "ProfileImage",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1724,
							"name": "@type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/profiles.ts",
									"line": 12,
									"character": 31
								}
							],
							"type": {
								"type": "literal",
								"value": "ImageObject"
							}
						},
						{
							"id": 1726,
							"name": "contentUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/profiles.ts",
									"line": 15,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1725,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/profiles.ts",
									"line": 14,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1724,
								1726,
								1725
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/keychain/src/profiles.ts",
							"line": 12,
							"character": 29
						}
					]
				},
				{
					"id": 1669,
					"name": "WalletConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1671,
							"name": "hideWarningForReusingIdentity",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 48,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1670,
							"name": "identities",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/wallet/index.ts",
									"line": 47,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ConfigIdentity"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1671,
								1670
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/keychain/src/wallet/index.ts",
							"line": 46,
							"character": 29
						}
					]
				},
				{
					"id": 1645,
					"name": "AllowedKeyEntropyBits",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/mnemonic/index.ts",
							"line": 8,
							"character": 33
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": 128
							},
							{
								"type": "literal",
								"value": 256
							}
						]
					}
				},
				{
					"id": 150,
					"name": "default",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 151,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 152,
									"name": "Wallet",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "query",
										"queryType": {
											"type": "reference",
											"id": 1464,
											"name": "Wallet"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										152
									]
								}
							]
						}
					}
				},
				{
					"id": 1745,
					"name": "DEFAULT_PROFILE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/profiles.ts",
							"line": 35,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"id": 1727,
						"name": "Profile"
					},
					"defaultValue": "..."
				},
				{
					"id": 1659,
					"name": "derivationPaths",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/address-derivation/index.ts",
							"line": 7,
							"character": 28
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1660,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1661,
									"name": "1",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 1662,
									"name": "2147483648",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1661,
										1662
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 1749,
					"name": "registrars",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/profiles.ts",
							"line": 47,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1750,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1755,
									"name": "id.blockstack",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1756,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1758,
													"name": "apiUrl",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'https://registrar.blockstack.org/v1/names'"
												},
												{
													"id": 1757,
													"name": "registerUrl",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'https://registrar.blockstack.org/register'"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1758,
														1757
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 1751,
									"name": "test-personal.id",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1752,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1754,
													"name": "apiUrl",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'https://test-registrar.blockstack.org/v1/names'"
												},
												{
													"id": 1753,
													"name": "registerUrl",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'https://test-registrar.blockstack.org/register'"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1754,
														1753
													]
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1755,
										1751
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 1585,
					"name": "assertIsTruthy",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/index.ts",
							"line": 150,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 1586,
							"name": "assertIsTruthy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 1587,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1588,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "val",
								"asserts": true,
								"targetType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"name": "T"
										}
									],
									"name": "NonNullable"
								}
							}
						}
					]
				},
				{
					"id": 1545,
					"name": "decrypt",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/encryption/decrypt.ts",
							"line": 13,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 1546,
							"name": "decrypt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Decrypt an encrypted mnemonic phrase with a password.\nLegacy triplesec encrypted payloads are also supported.",
								"returns": "the raw mnemonic phrase\n"
							},
							"parameters": [
								{
									"id": 1547,
									"name": "dataBuffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Buffer"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 1548,
									"name": "password",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Password for data"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1571,
					"name": "deriveIdentityKeyPair",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/index.ts",
							"line": 78,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 1572,
							"name": "deriveIdentityKeyPair",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1573,
									"name": "identityOwnerAddressNode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IdentityAddressOwnerNode"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1589,
								"name": "IdentityKeyPair"
							}
						}
					]
				},
				{
					"id": 1635,
					"name": "deriveRootKeychainFromMnemonic",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/mnemonic/index.ts",
							"line": 35,
							"character": 52
						}
					],
					"signatures": [
						{
							"id": 1636,
							"name": "deriveRootKeychainFromMnemonic",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1637,
									"name": "plaintextMnemonic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "BIP32Interface"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1649,
					"name": "deriveStxAddressChain",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/address-derivation/index.ts",
							"line": 16,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 1650,
							"name": "deriveStxAddressChain",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1651,
									"name": "chain",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3060,
										"name": "ChainID"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1652,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1653,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1654,
													"name": "rootNode",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "BIP32Interface"
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1655,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1657,
															"name": "address",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "..."
														},
														{
															"id": 1656,
															"name": "childKey",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "BIP32Interface"
															}
														},
														{
															"id": 1658,
															"name": "privateKey",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																1657,
																1656,
																1658
															]
														}
													]
												}
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 1549,
					"name": "encrypt",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/encryption/encrypt.ts",
							"line": 9,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 1550,
							"name": "encrypt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Encrypt a raw mnemonic phrase to be password protected",
								"returns": "The encrypted phrase\n"
							},
							"parameters": [
								{
									"id": 1551,
									"name": "phrase",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Raw mnemonic phrase"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1552,
									"name": "password",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Password to encrypt mnemonic with"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1638,
					"name": "encryptMnemonicFormatted",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/mnemonic/index.ts",
							"line": 41,
							"character": 46
						}
					],
					"signatures": [
						{
							"id": 1639,
							"name": "encryptMnemonicFormatted",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1640,
									"name": "plaintextMnemonic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1641,
									"name": "password",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1642,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1643,
													"name": "encryptedMnemonic",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Buffer"
													}
												},
												{
													"id": 1644,
													"name": "encryptedMnemonicHex",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1643,
														1644
													]
												}
											]
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1770,
					"name": "fetchProfile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/profiles.ts",
							"line": 177,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 1771,
							"name": "fetchProfile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1772,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1773,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1775,
													"name": "gaiaUrl",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/keychain/src/profiles.ts",
															"line": 182,
															"character": 9
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1774,
													"name": "identity",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/keychain/src/profiles.ts",
															"line": 181,
															"character": 10
														}
													],
													"type": {
														"type": "reference",
														"id": 1776,
														"name": "Identity"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1775,
														1774
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1727,
												"name": "Profile"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1628,
					"name": "generateEncryptedMnemonicRootKeychain",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/mnemonic/index.ts",
							"line": 20,
							"character": 59
						}
					],
					"signatures": [
						{
							"id": 1629,
							"name": "generateEncryptedMnemonicRootKeychain",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1630,
									"name": "password",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1631,
									"name": "entropy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1645,
										"name": "AllowedKeyEntropyBits"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1632,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1634,
													"name": "encryptedMnemonicPhrase",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1633,
													"name": "rootNode",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "BIP32Interface"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1634,
														1633
													]
												}
											]
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1622,
					"name": "generateMnemonicRootKeychain",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/mnemonic/index.ts",
							"line": 10,
							"character": 50
						}
					],
					"signatures": [
						{
							"id": 1623,
							"name": "generateMnemonicRootKeychain",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1624,
									"name": "entropy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1645,
										"name": "AllowedKeyEntropyBits"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1625,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1627,
													"name": "plaintextMnemonic",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1626,
													"name": "rootNode",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "BIP32Interface"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1627,
														1626
													]
												}
											]
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1568,
					"name": "getAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/index.ts",
							"line": 65,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 1569,
							"name": "getAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1570,
									"name": "node",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BIP32Interface"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1559,
					"name": "getBitcoinAddressNode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/index.ts",
							"line": 30,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 1560,
							"name": "getBitcoinAddressNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1561,
									"name": "bitcoinKeychain",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BIP32Interface"
									}
								},
								{
									"id": 1562,
									"name": "addressIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 1563,
									"name": "chainType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"name": "BIP32Interface"
							}
						}
					]
				},
				{
					"id": 1556,
					"name": "getBitcoinPrivateKeychain",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/index.ts",
							"line": 19,
							"character": 41
						}
					],
					"signatures": [
						{
							"id": 1557,
							"name": "getBitcoinPrivateKeychain",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1558,
									"name": "rootNode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BIP32Interface"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "BIP32Interface"
							}
						}
					]
				},
				{
					"id": 1574,
					"name": "getBlockchainIdentities",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/index.ts",
							"line": 97,
							"character": 45
						}
					],
					"signatures": [
						{
							"id": 1575,
							"name": "getBlockchainIdentities",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1576,
									"name": "rootNode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BIP32Interface"
									}
								},
								{
									"id": 1577,
									"name": "identitiesToGenerate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1578,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1580,
													"name": "bitcoinPublicKeychain",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1581,
													"name": "firstBitcoinAddress",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1584,
													"name": "identities",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1776,
															"name": "Identity"
														}
													}
												},
												{
													"id": 1582,
													"name": "identityAddresses",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 1583,
													"name": "identityKeypairs",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"id": 1589,
															"name": "IdentityKeyPair"
														}
													}
												},
												{
													"id": 1579,
													"name": "identityPublicKeychain",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1580,
														1581,
														1584,
														1582,
														1583,
														1579
													]
												}
											]
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1646,
					"name": "getDerivationPath",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/address-derivation/index.ts",
							"line": 12,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 1647,
							"name": "getDerivationPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1648,
									"name": "chain",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3060,
										"name": "ChainID"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1564,
					"name": "getIdentityOwnerAddressNode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/index.ts",
							"line": 48,
							"character": 49
						}
					],
					"signatures": [
						{
							"id": 1565,
							"name": "getIdentityOwnerAddressNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1566,
									"name": "identityPrivateKeychain",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BIP32Interface"
									}
								},
								{
									"id": 1567,
									"name": "identityIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "default"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1553,
					"name": "getIdentityPrivateKeychain",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/index.ts",
							"line": 12,
							"character": 42
						}
					],
					"signatures": [
						{
							"id": 1554,
							"name": "getIdentityPrivateKeychain",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1555,
									"name": "rootNode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BIP32Interface"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "BIP32Interface"
							}
						}
					]
				},
				{
					"id": 1619,
					"name": "getProfileURLFromZoneFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/index.ts",
							"line": 250,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 1620,
							"name": "getProfileURLFromZoneFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1621,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1596,
					"name": "makeIdentity",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/index.ts",
							"line": 135,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 1597,
							"name": "makeIdentity",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1598,
									"name": "rootNode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BIP32Interface"
									}
								},
								{
									"id": 1599,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1776,
										"name": "Identity"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1612,
					"name": "recursiveRestoreIdentities",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/index.ts",
							"line": 204,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 1613,
							"name": "recursiveRestoreIdentities",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Restore identities by recursively making a new identity, and checking if it has a username.",
								"text": "As soon as a username is not found for an identity, the recursion stops.\n"
							},
							"parameters": [
								{
									"id": 1614,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RecursiveMakeIdentitiesOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1776,
											"name": "Identity"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1759,
					"name": "registerSubdomain",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/profiles.ts",
							"line": 140,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 1760,
							"name": "registerSubdomain",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Register a subdomain for a given identity"
							},
							"parameters": [
								{
									"id": 1761,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "RegisterParams"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1776,
										"name": "Identity"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1762,
					"name": "signAndUploadProfile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/profiles.ts",
							"line": 162,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 1763,
							"name": "signAndUploadProfile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1764,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1765,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1769,
													"name": "gaiaHubConfig",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/keychain/src/profiles.ts",
															"line": 171,
															"character": 15
														}
													],
													"type": {
														"type": "reference",
														"id": 2023,
														"name": "GaiaHubConfig"
													}
												},
												{
													"id": 1767,
													"name": "gaiaHubUrl",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/keychain/src/profiles.ts",
															"line": 169,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1768,
													"name": "identity",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/keychain/src/profiles.ts",
															"line": 170,
															"character": 10
														}
													],
													"type": {
														"type": "reference",
														"id": 1776,
														"name": "Identity"
													}
												},
												{
													"id": 1766,
													"name": "profile",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/keychain/src/profiles.ts",
															"line": 168,
															"character": 9
														}
													],
													"type": {
														"type": "reference",
														"id": 1727,
														"name": "Profile"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1769,
														1767,
														1768,
														1766
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1713,
					"name": "signProfileForUpload",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/profiles.ts",
							"line": 58,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 1714,
							"name": "signProfileForUpload",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1715,
									"name": "profile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1727,
										"name": "Profile"
									}
								},
								{
									"id": 1716,
									"name": "keypair",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1589,
										"name": "IdentityKeyPair"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1717,
					"name": "uploadProfile",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/profiles.ts",
							"line": 68,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 1718,
							"name": "uploadProfile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1719,
									"name": "gaiaHubUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1720,
									"name": "identity",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1776,
										"name": "Identity"
									}
								},
								{
									"id": 1721,
									"name": "signedProfileTokenData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1722,
									"name": "gaiaHubConfig",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 2023,
										"name": "GaiaHubConfig"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1615,
					"name": "validateSubdomain",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/index.ts",
							"line": 224,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 1616,
							"name": "validateSubdomain",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Validate the format and availability of a subdomain. Will return an error of enum\nIdentityNameValidityError if an error is present. If no errors are found, will return null."
							},
							"parameters": [
								{
									"id": 1617,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the subdomain to be registered"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1618,
									"name": "subdomain",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a valid Subdomains enum\n"
									},
									"type": {
										"type": "reference",
										"id": 1746,
										"name": "Subdomains"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 1600,
												"name": "IdentityNameValidityError"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1608,
					"name": "validateSubdomainAvailability",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/index.ts",
							"line": 183,
							"character": 42
						}
					],
					"signatures": [
						{
							"id": 1609,
							"name": "validateSubdomainAvailability",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1610,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1611,
									"name": "subdomain",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1746,
										"name": "Subdomains"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1605,
					"name": "validateSubdomainFormat",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/index.ts",
							"line": 165,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 1606,
							"name": "validateSubdomainFormat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1607,
									"name": "identityName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 1600,
										"name": "IdentityNameValidityError"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						1600,
						1746
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1776,
						1464,
						1684
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1663,
						1672,
						1589,
						1727,
						1723,
						1669
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1645
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						150
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1745,
						1659,
						1749
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1585,
						1545,
						1571,
						1635,
						1649,
						1549,
						1638,
						1770,
						1628,
						1622,
						1568,
						1559,
						1556,
						1574,
						1646,
						1564,
						1553,
						1619,
						1596,
						1612,
						1759,
						1762,
						1713,
						1717,
						1615,
						1608,
						1605
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/keychain/src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 153,
			"name": "network",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/network\n\nNetwork and API library for working with Stacks blockchain nodes.\n\n## Installation\n\n```\nnpm install @stacks/network\n```\n\n## Usage\n\nCreating a Stacks mainnet, testnet, regtest or mocknet network\n\n```typescript\nimport { StacksMainnet, StacksTestnet, StacksMocknet } from '@stacks/network';\n\nconst network = new StacksMainnet();\n\nconst testnet = new StacksTestnet();\n\nconst regtest = new StacksRegtest();\n\nconst mocknet = new StacksMocknet();\n```\n\nSetting a custom node URL\n\n```typescript\nnetwork.coreApiUrl = 'https://www.mystacksnode.com/';\n```\n\nCheck if network is mainnet\n\n```typescript\nconst isMainnet = network.isMainnet();\n```\n\nExample usage in transaction builder\n\n```typescript\nimport { makeSTXTokenTransfer } from '@stacks/transactions';\n\nconst txOptions = {\n  network,\n  recipient: 'SP2BS6HD7TN34V8Z5BNF8Q2AW3K8K2DPV4264CF26',\n  amount: new BigNum(12345),\n  senderKey: 'b244296d5907de9864c0b0d51f98a13c52890be0404e83f273144cd5b9960eed01',\n};\n\nconst transaction = await makeSTXTokenTransfer(txOptions);\n```\n\nGet various API URLs\n\n```typescript\n  const txBroadcastUrl = network.getBroadcastApiUrl();\n\n  const feeEstimateUrl = network.getTransferFeeEstimateApiUrl();\n\n  const address = 'SP2BS6HD7TN34V8Z5BNF8Q2AW3K8K2DPV4264CF26';\n  const accountInfoUrl = network.getAccountApiUrl(address);\n\n  const contractName = 'hello_world';\n  const abiUrl = network.getAbiApiUrl(address, contractName);\n\n  const functionName = 'hello';\n  const readOnlyFunctionCallUrl = network.getReadOnlyFunctionCallApiUrl(address, contractName, functionName);\n\n  const nodeInfoUrl = network.getInfoUrl();\n\n  const blockTimeUrl = network.getBlockTimeInfoUrl();\n\n  const poxInfoUrl = network.getPoxInfoUrl();\n```"
			},
			"originalName": "network/src",
			"children": [
				{
					"id": 205,
					"name": "StacksMainnet",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 206,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 207,
									"name": "new StacksMainnet",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 205,
										"name": "StacksMainnet"
									}
								}
							]
						},
						{
							"id": 214,
							"name": "accountEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 46,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/accounts'",
							"implementationOf": {
								"type": "reference",
								"id": 161,
								"name": "StacksNetwork.accountEndpoint"
							}
						},
						{
							"id": 211,
							"name": "bnsLookupUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 43,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'https://stacks-node-api.mainnet.stacks.co'",
							"implementationOf": {
								"type": "reference",
								"id": 158,
								"name": "StacksNetwork.bnsLookupUrl"
							}
						},
						{
							"id": 212,
							"name": "broadcastEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 44,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/transactions'",
							"implementationOf": {
								"type": "reference",
								"id": 159,
								"name": "StacksNetwork.broadcastEndpoint"
							}
						},
						{
							"id": 209,
							"name": "chainId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 41,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1272,
								"name": "ChainID"
							},
							"defaultValue": "...",
							"implementationOf": {
								"type": "reference",
								"id": 156,
								"name": "StacksNetwork.chainId"
							}
						},
						{
							"id": 215,
							"name": "contractAbiEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 47,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/contracts/interface'",
							"implementationOf": {
								"type": "reference",
								"id": 162,
								"name": "StacksNetwork.contractAbiEndpoint"
							}
						},
						{
							"id": 210,
							"name": "coreApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 42,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'https://stacks-node-api.mainnet.stacks.co'",
							"implementationOf": {
								"type": "reference",
								"id": 157,
								"name": "StacksNetwork.coreApiUrl"
							}
						},
						{
							"id": 216,
							"name": "readOnlyFunctionCallEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 48,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/contracts/call-read'",
							"implementationOf": {
								"type": "reference",
								"id": 163,
								"name": "StacksNetwork.readOnlyFunctionCallEndpoint"
							}
						},
						{
							"id": 213,
							"name": "transferFeeEstimateEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 45,
									"character": 29
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/fees/transfer'",
							"implementationOf": {
								"type": "reference",
								"id": 160,
								"name": "StacksNetwork.transferFeeEstimateEndpoint"
							}
						},
						{
							"id": 208,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 40,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1275,
								"name": "TransactionVersion"
							},
							"defaultValue": "...",
							"implementationOf": {
								"type": "reference",
								"id": 155,
								"name": "StacksNetwork.version"
							}
						},
						{
							"id": 226,
							"name": "getAbiApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 55,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 227,
									"name": "getAbiApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 228,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 229,
											"name": "contract",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getAbiApiUrl"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 176,
								"name": "StacksNetwork.getAbiApiUrl"
							}
						},
						{
							"id": 223,
							"name": "getAccountApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 53,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 224,
									"name": "getAccountApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 225,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getAccountApiUrl"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 172,
								"name": "StacksNetwork.getAccountApiUrl"
							}
						},
						{
							"id": 237,
							"name": "getBlockTimeInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 66,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 238,
									"name": "getBlockTimeInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getBlockTimeInfoUrl"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 190,
								"name": "StacksNetwork.getBlockTimeInfoUrl"
							}
						},
						{
							"id": 219,
							"name": "getBroadcastApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 51,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 220,
									"name": "getBroadcastApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getBroadcastApiUrl"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 166,
								"name": "StacksNetwork.getBroadcastApiUrl"
							}
						},
						{
							"id": 235,
							"name": "getInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 65,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 236,
									"name": "getInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getInfoUrl"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 187,
								"name": "StacksNetwork.getInfoUrl"
							}
						},
						{
							"id": 245,
							"name": "getNameInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"comment": {
								"shortText": "Get WHOIS-like information for a name, including the address that owns it,\nthe block at which it expires, and the zone file anchored to it (if available).",
								"text": "This is intended for use in third-party wallets or in DApps that register names."
							},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 71,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 246,
									"name": "getNameInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get WHOIS-like information for a name, including the address that owns it,\nthe block at which it expires, and the zone file anchored to it (if available).",
										"text": "This is intended for use in third-party wallets or in DApps that register names."
									},
									"parameters": [
										{
											"id": 247,
											"name": "fullyQualifiedName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getNameInfo"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 201,
								"name": "StacksNetwork.getNameInfo"
							}
						},
						{
							"id": 239,
							"name": "getPoxInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 67,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 240,
									"name": "getPoxInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getPoxInfoUrl"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 193,
								"name": "StacksNetwork.getPoxInfoUrl"
							}
						},
						{
							"id": 230,
							"name": "getReadOnlyFunctionCallApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 57,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 231,
									"name": "getReadOnlyFunctionCallApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 232,
											"name": "contractAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 233,
											"name": "contractName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 234,
											"name": "functionName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getReadOnlyFunctionCallApiUrl"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 181,
								"name": "StacksNetwork.getReadOnlyFunctionCallApiUrl"
							}
						},
						{
							"id": 241,
							"name": "getStackerInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 68,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 242,
									"name": "getStackerInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 243,
											"name": "contractAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 244,
											"name": "contractName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getStackerInfoUrl"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 196,
								"name": "StacksNetwork.getStackerInfoUrl"
							}
						},
						{
							"id": 221,
							"name": "getTransferFeeEstimateApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 52,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 222,
									"name": "getTransferFeeEstimateApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getTransferFeeEstimateApiUrl"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 169,
								"name": "StacksNetwork.getTransferFeeEstimateApiUrl"
							}
						},
						{
							"id": 217,
							"name": "isMainnet",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 50,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 218,
									"name": "isMainnet",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"id": 165,
										"name": "StacksNetwork.isMainnet"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 164,
								"name": "StacksNetwork.isMainnet"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								206
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								214,
								211,
								212,
								209,
								215,
								210,
								216,
								213,
								208
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								226,
								223,
								237,
								219,
								235,
								245,
								239,
								230,
								241,
								221,
								217
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/network/src/index.ts",
							"line": 39,
							"character": 26
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 248,
							"name": "StacksTestnet"
						},
						{
							"type": "reference",
							"id": 291,
							"name": "StacksMocknet"
						},
						{
							"type": "reference",
							"id": 334,
							"name": "StacksRegtest"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 154,
							"name": "StacksNetwork"
						}
					]
				},
				{
					"id": 291,
					"name": "StacksMocknet",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 292,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 293,
									"name": "new StacksMocknet",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 291,
										"name": "StacksMocknet"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 207,
										"name": "StacksMainnet.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 206,
								"name": "StacksMainnet.constructor"
							}
						},
						{
							"id": 300,
							"name": "accountEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 46,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/accounts'",
							"inheritedFrom": {
								"type": "reference",
								"id": 214,
								"name": "StacksMainnet.accountEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 161,
								"name": "StacksNetwork.accountEndpoint"
							}
						},
						{
							"id": 297,
							"name": "bnsLookupUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 43,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'https://stacks-node-api.mainnet.stacks.co'",
							"inheritedFrom": {
								"type": "reference",
								"id": 211,
								"name": "StacksMainnet.bnsLookupUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 158,
								"name": "StacksNetwork.bnsLookupUrl"
							}
						},
						{
							"id": 298,
							"name": "broadcastEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 44,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/transactions'",
							"inheritedFrom": {
								"type": "reference",
								"id": 212,
								"name": "StacksMainnet.broadcastEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 159,
								"name": "StacksNetwork.broadcastEndpoint"
							}
						},
						{
							"id": 295,
							"name": "chainId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 107,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1272,
								"name": "ChainID"
							},
							"defaultValue": "...",
							"overwrites": {
								"type": "reference",
								"id": 209,
								"name": "StacksMainnet.chainId"
							},
							"implementationOf": {
								"type": "reference",
								"id": 156,
								"name": "StacksNetwork.chainId"
							}
						},
						{
							"id": 301,
							"name": "contractAbiEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 47,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/contracts/interface'",
							"inheritedFrom": {
								"type": "reference",
								"id": 215,
								"name": "StacksMainnet.contractAbiEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 162,
								"name": "StacksNetwork.contractAbiEndpoint"
							}
						},
						{
							"id": 296,
							"name": "coreApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 108,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'http://localhost:3999'",
							"overwrites": {
								"type": "reference",
								"id": 210,
								"name": "StacksMainnet.coreApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 157,
								"name": "StacksNetwork.coreApiUrl"
							}
						},
						{
							"id": 302,
							"name": "readOnlyFunctionCallEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 48,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/contracts/call-read'",
							"inheritedFrom": {
								"type": "reference",
								"id": 216,
								"name": "StacksMainnet.readOnlyFunctionCallEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 163,
								"name": "StacksNetwork.readOnlyFunctionCallEndpoint"
							}
						},
						{
							"id": 299,
							"name": "transferFeeEstimateEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 45,
									"character": 29
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/fees/transfer'",
							"inheritedFrom": {
								"type": "reference",
								"id": 213,
								"name": "StacksMainnet.transferFeeEstimateEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 160,
								"name": "StacksNetwork.transferFeeEstimateEndpoint"
							}
						},
						{
							"id": 294,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 106,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1275,
								"name": "TransactionVersion"
							},
							"defaultValue": "...",
							"overwrites": {
								"type": "reference",
								"id": 208,
								"name": "StacksMainnet.version"
							},
							"implementationOf": {
								"type": "reference",
								"id": 155,
								"name": "StacksNetwork.version"
							}
						},
						{
							"id": 312,
							"name": "getAbiApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 55,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 313,
									"name": "getAbiApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 314,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 315,
											"name": "contract",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 227,
										"name": "StacksMainnet.getAbiApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getAbiApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 226,
								"name": "StacksMainnet.getAbiApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 176,
								"name": "StacksNetwork.getAbiApiUrl"
							}
						},
						{
							"id": 309,
							"name": "getAccountApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 53,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 310,
									"name": "getAccountApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 311,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 224,
										"name": "StacksMainnet.getAccountApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getAccountApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 223,
								"name": "StacksMainnet.getAccountApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 172,
								"name": "StacksNetwork.getAccountApiUrl"
							}
						},
						{
							"id": 323,
							"name": "getBlockTimeInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 66,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 324,
									"name": "getBlockTimeInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 238,
										"name": "StacksMainnet.getBlockTimeInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getBlockTimeInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 237,
								"name": "StacksMainnet.getBlockTimeInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 190,
								"name": "StacksNetwork.getBlockTimeInfoUrl"
							}
						},
						{
							"id": 305,
							"name": "getBroadcastApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 51,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 306,
									"name": "getBroadcastApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 220,
										"name": "StacksMainnet.getBroadcastApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getBroadcastApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 219,
								"name": "StacksMainnet.getBroadcastApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 166,
								"name": "StacksNetwork.getBroadcastApiUrl"
							}
						},
						{
							"id": 321,
							"name": "getInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 65,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 322,
									"name": "getInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 236,
										"name": "StacksMainnet.getInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 235,
								"name": "StacksMainnet.getInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 187,
								"name": "StacksNetwork.getInfoUrl"
							}
						},
						{
							"id": 331,
							"name": "getNameInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"comment": {
								"shortText": "Get WHOIS-like information for a name, including the address that owns it,\nthe block at which it expires, and the zone file anchored to it (if available).",
								"text": "This is intended for use in third-party wallets or in DApps that register names."
							},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 71,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 332,
									"name": "getNameInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get WHOIS-like information for a name, including the address that owns it,\nthe block at which it expires, and the zone file anchored to it (if available).",
										"text": "This is intended for use in third-party wallets or in DApps that register names."
									},
									"parameters": [
										{
											"id": 333,
											"name": "fullyQualifiedName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 246,
										"name": "StacksMainnet.getNameInfo"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getNameInfo"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 245,
								"name": "StacksMainnet.getNameInfo"
							},
							"implementationOf": {
								"type": "reference",
								"id": 201,
								"name": "StacksNetwork.getNameInfo"
							}
						},
						{
							"id": 325,
							"name": "getPoxInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 67,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 326,
									"name": "getPoxInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 240,
										"name": "StacksMainnet.getPoxInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getPoxInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 239,
								"name": "StacksMainnet.getPoxInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 193,
								"name": "StacksNetwork.getPoxInfoUrl"
							}
						},
						{
							"id": 316,
							"name": "getReadOnlyFunctionCallApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 57,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 317,
									"name": "getReadOnlyFunctionCallApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 318,
											"name": "contractAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 319,
											"name": "contractName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 320,
											"name": "functionName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 231,
										"name": "StacksMainnet.getReadOnlyFunctionCallApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getReadOnlyFunctionCallApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 230,
								"name": "StacksMainnet.getReadOnlyFunctionCallApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 181,
								"name": "StacksNetwork.getReadOnlyFunctionCallApiUrl"
							}
						},
						{
							"id": 327,
							"name": "getStackerInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 68,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 328,
									"name": "getStackerInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 329,
											"name": "contractAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 330,
											"name": "contractName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 242,
										"name": "StacksMainnet.getStackerInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getStackerInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 241,
								"name": "StacksMainnet.getStackerInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 196,
								"name": "StacksNetwork.getStackerInfoUrl"
							}
						},
						{
							"id": 307,
							"name": "getTransferFeeEstimateApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 52,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 308,
									"name": "getTransferFeeEstimateApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 222,
										"name": "StacksMainnet.getTransferFeeEstimateApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getTransferFeeEstimateApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 221,
								"name": "StacksMainnet.getTransferFeeEstimateApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 169,
								"name": "StacksNetwork.getTransferFeeEstimateApiUrl"
							}
						},
						{
							"id": 303,
							"name": "isMainnet",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 50,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 304,
									"name": "isMainnet",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 218,
										"name": "StacksMainnet.isMainnet"
									},
									"implementationOf": {
										"type": "reference",
										"id": 165,
										"name": "StacksNetwork.isMainnet"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 217,
								"name": "StacksMainnet.isMainnet"
							},
							"implementationOf": {
								"type": "reference",
								"id": 164,
								"name": "StacksNetwork.isMainnet"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								292
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								300,
								297,
								298,
								295,
								301,
								296,
								302,
								299,
								294
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								312,
								309,
								323,
								305,
								321,
								331,
								325,
								316,
								327,
								307,
								303
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/network/src/index.ts",
							"line": 105,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 205,
							"name": "StacksMainnet"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 154,
							"name": "StacksNetwork"
						}
					]
				},
				{
					"id": 334,
					"name": "StacksRegtest",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 335,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 336,
									"name": "new StacksRegtest",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 334,
										"name": "StacksRegtest"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 207,
										"name": "StacksMainnet.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 206,
								"name": "StacksMainnet.constructor"
							}
						},
						{
							"id": 343,
							"name": "accountEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 46,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/accounts'",
							"inheritedFrom": {
								"type": "reference",
								"id": 214,
								"name": "StacksMainnet.accountEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 161,
								"name": "StacksNetwork.accountEndpoint"
							}
						},
						{
							"id": 340,
							"name": "bnsLookupUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 43,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'https://stacks-node-api.mainnet.stacks.co'",
							"inheritedFrom": {
								"type": "reference",
								"id": 211,
								"name": "StacksMainnet.bnsLookupUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 158,
								"name": "StacksNetwork.bnsLookupUrl"
							}
						},
						{
							"id": 341,
							"name": "broadcastEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 44,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/transactions'",
							"inheritedFrom": {
								"type": "reference",
								"id": 212,
								"name": "StacksMainnet.broadcastEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 159,
								"name": "StacksNetwork.broadcastEndpoint"
							}
						},
						{
							"id": 338,
							"name": "chainId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 113,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1272,
								"name": "ChainID"
							},
							"defaultValue": "...",
							"overwrites": {
								"type": "reference",
								"id": 209,
								"name": "StacksMainnet.chainId"
							},
							"implementationOf": {
								"type": "reference",
								"id": 156,
								"name": "StacksNetwork.chainId"
							}
						},
						{
							"id": 344,
							"name": "contractAbiEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 47,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/contracts/interface'",
							"inheritedFrom": {
								"type": "reference",
								"id": 215,
								"name": "StacksMainnet.contractAbiEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 162,
								"name": "StacksNetwork.contractAbiEndpoint"
							}
						},
						{
							"id": 339,
							"name": "coreApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 114,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'https://stacks-node-api.regtest.stacks.co'",
							"overwrites": {
								"type": "reference",
								"id": 210,
								"name": "StacksMainnet.coreApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 157,
								"name": "StacksNetwork.coreApiUrl"
							}
						},
						{
							"id": 345,
							"name": "readOnlyFunctionCallEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 48,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/contracts/call-read'",
							"inheritedFrom": {
								"type": "reference",
								"id": 216,
								"name": "StacksMainnet.readOnlyFunctionCallEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 163,
								"name": "StacksNetwork.readOnlyFunctionCallEndpoint"
							}
						},
						{
							"id": 342,
							"name": "transferFeeEstimateEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 45,
									"character": 29
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/fees/transfer'",
							"inheritedFrom": {
								"type": "reference",
								"id": 213,
								"name": "StacksMainnet.transferFeeEstimateEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 160,
								"name": "StacksNetwork.transferFeeEstimateEndpoint"
							}
						},
						{
							"id": 337,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 112,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1275,
								"name": "TransactionVersion"
							},
							"defaultValue": "...",
							"overwrites": {
								"type": "reference",
								"id": 208,
								"name": "StacksMainnet.version"
							},
							"implementationOf": {
								"type": "reference",
								"id": 155,
								"name": "StacksNetwork.version"
							}
						},
						{
							"id": 355,
							"name": "getAbiApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 55,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 356,
									"name": "getAbiApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 357,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 358,
											"name": "contract",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 227,
										"name": "StacksMainnet.getAbiApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getAbiApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 226,
								"name": "StacksMainnet.getAbiApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 176,
								"name": "StacksNetwork.getAbiApiUrl"
							}
						},
						{
							"id": 352,
							"name": "getAccountApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 53,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 353,
									"name": "getAccountApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 354,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 224,
										"name": "StacksMainnet.getAccountApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getAccountApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 223,
								"name": "StacksMainnet.getAccountApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 172,
								"name": "StacksNetwork.getAccountApiUrl"
							}
						},
						{
							"id": 366,
							"name": "getBlockTimeInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 66,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 367,
									"name": "getBlockTimeInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 238,
										"name": "StacksMainnet.getBlockTimeInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getBlockTimeInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 237,
								"name": "StacksMainnet.getBlockTimeInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 190,
								"name": "StacksNetwork.getBlockTimeInfoUrl"
							}
						},
						{
							"id": 348,
							"name": "getBroadcastApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 51,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 349,
									"name": "getBroadcastApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 220,
										"name": "StacksMainnet.getBroadcastApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getBroadcastApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 219,
								"name": "StacksMainnet.getBroadcastApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 166,
								"name": "StacksNetwork.getBroadcastApiUrl"
							}
						},
						{
							"id": 364,
							"name": "getInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 65,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 365,
									"name": "getInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 236,
										"name": "StacksMainnet.getInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 235,
								"name": "StacksMainnet.getInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 187,
								"name": "StacksNetwork.getInfoUrl"
							}
						},
						{
							"id": 374,
							"name": "getNameInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"comment": {
								"shortText": "Get WHOIS-like information for a name, including the address that owns it,\nthe block at which it expires, and the zone file anchored to it (if available).",
								"text": "This is intended for use in third-party wallets or in DApps that register names."
							},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 71,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 375,
									"name": "getNameInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get WHOIS-like information for a name, including the address that owns it,\nthe block at which it expires, and the zone file anchored to it (if available).",
										"text": "This is intended for use in third-party wallets or in DApps that register names."
									},
									"parameters": [
										{
											"id": 376,
											"name": "fullyQualifiedName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 246,
										"name": "StacksMainnet.getNameInfo"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getNameInfo"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 245,
								"name": "StacksMainnet.getNameInfo"
							},
							"implementationOf": {
								"type": "reference",
								"id": 201,
								"name": "StacksNetwork.getNameInfo"
							}
						},
						{
							"id": 368,
							"name": "getPoxInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 67,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 369,
									"name": "getPoxInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 240,
										"name": "StacksMainnet.getPoxInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getPoxInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 239,
								"name": "StacksMainnet.getPoxInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 193,
								"name": "StacksNetwork.getPoxInfoUrl"
							}
						},
						{
							"id": 359,
							"name": "getReadOnlyFunctionCallApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 57,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 360,
									"name": "getReadOnlyFunctionCallApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 361,
											"name": "contractAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 362,
											"name": "contractName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 363,
											"name": "functionName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 231,
										"name": "StacksMainnet.getReadOnlyFunctionCallApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getReadOnlyFunctionCallApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 230,
								"name": "StacksMainnet.getReadOnlyFunctionCallApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 181,
								"name": "StacksNetwork.getReadOnlyFunctionCallApiUrl"
							}
						},
						{
							"id": 370,
							"name": "getStackerInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 68,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 371,
									"name": "getStackerInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 372,
											"name": "contractAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 373,
											"name": "contractName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 242,
										"name": "StacksMainnet.getStackerInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getStackerInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 241,
								"name": "StacksMainnet.getStackerInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 196,
								"name": "StacksNetwork.getStackerInfoUrl"
							}
						},
						{
							"id": 350,
							"name": "getTransferFeeEstimateApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 52,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 351,
									"name": "getTransferFeeEstimateApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 222,
										"name": "StacksMainnet.getTransferFeeEstimateApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getTransferFeeEstimateApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 221,
								"name": "StacksMainnet.getTransferFeeEstimateApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 169,
								"name": "StacksNetwork.getTransferFeeEstimateApiUrl"
							}
						},
						{
							"id": 346,
							"name": "isMainnet",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 50,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 347,
									"name": "isMainnet",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 218,
										"name": "StacksMainnet.isMainnet"
									},
									"implementationOf": {
										"type": "reference",
										"id": 165,
										"name": "StacksNetwork.isMainnet"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 217,
								"name": "StacksMainnet.isMainnet"
							},
							"implementationOf": {
								"type": "reference",
								"id": 164,
								"name": "StacksNetwork.isMainnet"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								335
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								343,
								340,
								341,
								338,
								344,
								339,
								345,
								342,
								337
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								355,
								352,
								366,
								348,
								364,
								374,
								368,
								359,
								370,
								350,
								346
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/network/src/index.ts",
							"line": 111,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 205,
							"name": "StacksMainnet"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 154,
							"name": "StacksNetwork"
						}
					]
				},
				{
					"id": 248,
					"name": "StacksTestnet",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 249,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 250,
									"name": "new StacksTestnet",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 248,
										"name": "StacksTestnet"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 207,
										"name": "StacksMainnet.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 206,
								"name": "StacksMainnet.constructor"
							}
						},
						{
							"id": 257,
							"name": "accountEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 46,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/accounts'",
							"inheritedFrom": {
								"type": "reference",
								"id": 214,
								"name": "StacksMainnet.accountEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 161,
								"name": "StacksNetwork.accountEndpoint"
							}
						},
						{
							"id": 254,
							"name": "bnsLookupUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 43,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'https://stacks-node-api.mainnet.stacks.co'",
							"inheritedFrom": {
								"type": "reference",
								"id": 211,
								"name": "StacksMainnet.bnsLookupUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 158,
								"name": "StacksNetwork.bnsLookupUrl"
							}
						},
						{
							"id": 255,
							"name": "broadcastEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 44,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/transactions'",
							"inheritedFrom": {
								"type": "reference",
								"id": 212,
								"name": "StacksMainnet.broadcastEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 159,
								"name": "StacksNetwork.broadcastEndpoint"
							}
						},
						{
							"id": 252,
							"name": "chainId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 101,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1272,
								"name": "ChainID"
							},
							"defaultValue": "...",
							"overwrites": {
								"type": "reference",
								"id": 209,
								"name": "StacksMainnet.chainId"
							},
							"implementationOf": {
								"type": "reference",
								"id": 156,
								"name": "StacksNetwork.chainId"
							}
						},
						{
							"id": 258,
							"name": "contractAbiEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 47,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/contracts/interface'",
							"inheritedFrom": {
								"type": "reference",
								"id": 215,
								"name": "StacksMainnet.contractAbiEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 162,
								"name": "StacksNetwork.contractAbiEndpoint"
							}
						},
						{
							"id": 253,
							"name": "coreApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 102,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'https://stacks-node-api.testnet.stacks.co'",
							"overwrites": {
								"type": "reference",
								"id": 210,
								"name": "StacksMainnet.coreApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 157,
								"name": "StacksNetwork.coreApiUrl"
							}
						},
						{
							"id": 259,
							"name": "readOnlyFunctionCallEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 48,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/contracts/call-read'",
							"inheritedFrom": {
								"type": "reference",
								"id": 216,
								"name": "StacksMainnet.readOnlyFunctionCallEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 163,
								"name": "StacksNetwork.readOnlyFunctionCallEndpoint"
							}
						},
						{
							"id": 256,
							"name": "transferFeeEstimateEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 45,
									"character": 29
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/fees/transfer'",
							"inheritedFrom": {
								"type": "reference",
								"id": 213,
								"name": "StacksMainnet.transferFeeEstimateEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 160,
								"name": "StacksNetwork.transferFeeEstimateEndpoint"
							}
						},
						{
							"id": 251,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 100,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1275,
								"name": "TransactionVersion"
							},
							"defaultValue": "...",
							"overwrites": {
								"type": "reference",
								"id": 208,
								"name": "StacksMainnet.version"
							},
							"implementationOf": {
								"type": "reference",
								"id": 155,
								"name": "StacksNetwork.version"
							}
						},
						{
							"id": 269,
							"name": "getAbiApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 55,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 270,
									"name": "getAbiApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 271,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 272,
											"name": "contract",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 227,
										"name": "StacksMainnet.getAbiApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getAbiApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 226,
								"name": "StacksMainnet.getAbiApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 176,
								"name": "StacksNetwork.getAbiApiUrl"
							}
						},
						{
							"id": 266,
							"name": "getAccountApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 53,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 267,
									"name": "getAccountApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 268,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 224,
										"name": "StacksMainnet.getAccountApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getAccountApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 223,
								"name": "StacksMainnet.getAccountApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 172,
								"name": "StacksNetwork.getAccountApiUrl"
							}
						},
						{
							"id": 280,
							"name": "getBlockTimeInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 66,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 281,
									"name": "getBlockTimeInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 238,
										"name": "StacksMainnet.getBlockTimeInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getBlockTimeInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 237,
								"name": "StacksMainnet.getBlockTimeInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 190,
								"name": "StacksNetwork.getBlockTimeInfoUrl"
							}
						},
						{
							"id": 262,
							"name": "getBroadcastApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 51,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 263,
									"name": "getBroadcastApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 220,
										"name": "StacksMainnet.getBroadcastApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getBroadcastApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 219,
								"name": "StacksMainnet.getBroadcastApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 166,
								"name": "StacksNetwork.getBroadcastApiUrl"
							}
						},
						{
							"id": 278,
							"name": "getInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 65,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 279,
									"name": "getInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 236,
										"name": "StacksMainnet.getInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 235,
								"name": "StacksMainnet.getInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 187,
								"name": "StacksNetwork.getInfoUrl"
							}
						},
						{
							"id": 288,
							"name": "getNameInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"comment": {
								"shortText": "Get WHOIS-like information for a name, including the address that owns it,\nthe block at which it expires, and the zone file anchored to it (if available).",
								"text": "This is intended for use in third-party wallets or in DApps that register names."
							},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 71,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 289,
									"name": "getNameInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get WHOIS-like information for a name, including the address that owns it,\nthe block at which it expires, and the zone file anchored to it (if available).",
										"text": "This is intended for use in third-party wallets or in DApps that register names."
									},
									"parameters": [
										{
											"id": 290,
											"name": "fullyQualifiedName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 246,
										"name": "StacksMainnet.getNameInfo"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getNameInfo"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 245,
								"name": "StacksMainnet.getNameInfo"
							},
							"implementationOf": {
								"type": "reference",
								"id": 201,
								"name": "StacksNetwork.getNameInfo"
							}
						},
						{
							"id": 282,
							"name": "getPoxInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 67,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 283,
									"name": "getPoxInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 240,
										"name": "StacksMainnet.getPoxInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getPoxInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 239,
								"name": "StacksMainnet.getPoxInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 193,
								"name": "StacksNetwork.getPoxInfoUrl"
							}
						},
						{
							"id": 273,
							"name": "getReadOnlyFunctionCallApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 57,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 274,
									"name": "getReadOnlyFunctionCallApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 275,
											"name": "contractAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 276,
											"name": "contractName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 277,
											"name": "functionName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 231,
										"name": "StacksMainnet.getReadOnlyFunctionCallApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getReadOnlyFunctionCallApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 230,
								"name": "StacksMainnet.getReadOnlyFunctionCallApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 181,
								"name": "StacksNetwork.getReadOnlyFunctionCallApiUrl"
							}
						},
						{
							"id": 284,
							"name": "getStackerInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 68,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 285,
									"name": "getStackerInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 286,
											"name": "contractAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 287,
											"name": "contractName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 242,
										"name": "StacksMainnet.getStackerInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getStackerInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 241,
								"name": "StacksMainnet.getStackerInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 196,
								"name": "StacksNetwork.getStackerInfoUrl"
							}
						},
						{
							"id": 264,
							"name": "getTransferFeeEstimateApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 52,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 265,
									"name": "getTransferFeeEstimateApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 222,
										"name": "StacksMainnet.getTransferFeeEstimateApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getTransferFeeEstimateApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 221,
								"name": "StacksMainnet.getTransferFeeEstimateApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 169,
								"name": "StacksNetwork.getTransferFeeEstimateApiUrl"
							}
						},
						{
							"id": 260,
							"name": "isMainnet",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 50,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 261,
									"name": "isMainnet",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 218,
										"name": "StacksMainnet.isMainnet"
									},
									"implementationOf": {
										"type": "reference",
										"id": 165,
										"name": "StacksNetwork.isMainnet"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 217,
								"name": "StacksMainnet.isMainnet"
							},
							"implementationOf": {
								"type": "reference",
								"id": 164,
								"name": "StacksNetwork.isMainnet"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								249
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								257,
								254,
								255,
								252,
								258,
								253,
								259,
								256,
								251
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								269,
								266,
								280,
								262,
								278,
								288,
								282,
								273,
								284,
								264,
								260
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/network/src/index.ts",
							"line": 99,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 205,
							"name": "StacksMainnet"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 154,
							"name": "StacksNetwork"
						}
					]
				},
				{
					"id": 154,
					"name": "StacksNetwork",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 161,
							"name": "accountEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 10,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 158,
							"name": "bnsLookupUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 7,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 159,
							"name": "broadcastEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 8,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 156,
							"name": "chainId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 5,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1272,
								"name": "ChainID"
							}
						},
						{
							"id": 162,
							"name": "contractAbiEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 11,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 157,
							"name": "coreApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 6,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 176,
							"name": "getAbiApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 17,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 177,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 178,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 179,
													"name": "address",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 180,
													"name": "contract",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 172,
							"name": "getAccountApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 16,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 173,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 174,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 175,
													"name": "address",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 190,
							"name": "getBlockTimeInfoUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 24,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 191,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 192,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 166,
							"name": "getBroadcastApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 14,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 167,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 168,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 187,
							"name": "getInfoUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 23,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 188,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 189,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 201,
							"name": "getNameInfo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Get WHOIS-like information for a name, including the address that owns it,\nthe block at which it expires, and the zone file anchored to it (if available).",
								"text": "This is intended for use in third-party wallets or in DApps that register names.",
								"tags": [
									{
										"tag": "param",
										"text": "the name to query.  Can be on-chain of off-chain.",
										"param": "fullyQualifiedName"
									},
									{
										"tag": "returns",
										"text": "a promise that resolves to the WHOIS-like information\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 36,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 202,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 203,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 204,
													"name": "fullyQualifiedName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							}
						},
						{
							"id": 193,
							"name": "getPoxInfoUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 25,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 194,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 195,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 181,
							"name": "getReadOnlyFunctionCallApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 18,
									"character": 31
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 182,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 183,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 184,
													"name": "contractAddress",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 185,
													"name": "contractName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 186,
													"name": "functionName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 196,
							"name": "getStackerInfoUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 26,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 197,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 198,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 199,
													"name": "contractAddress",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 200,
													"name": "contractName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 169,
							"name": "getTransferFeeEstimateApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 15,
									"character": 30
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 170,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 171,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 163,
							"name": "readOnlyFunctionCallEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 12,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 160,
							"name": "transferFeeEstimateEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 9,
									"character": 29
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 155,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 4,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 1275,
								"name": "TransactionVersion"
							}
						},
						{
							"id": 164,
							"name": "isMainnet",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 165,
									"name": "isMainnet",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								161,
								158,
								159,
								156,
								162,
								157,
								176,
								172,
								190,
								166,
								187,
								201,
								193,
								181,
								196,
								169,
								163,
								160,
								155
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								164
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/network/src/index.ts",
							"line": 3,
							"character": 30
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 205,
							"name": "StacksMainnet"
						},
						{
							"type": "reference",
							"id": 291,
							"name": "StacksMocknet"
						},
						{
							"type": "reference",
							"id": 334,
							"name": "StacksRegtest"
						},
						{
							"type": "reference",
							"id": 248,
							"name": "StacksTestnet"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						205,
						291,
						334,
						248
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						154
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/network/src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 377,
			"name": "profile",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/profile\n\nFunctions for manipulating user profiles.\n\n## Installation\n\n```\nnpm install @stacks/profile\n```\n"
			},
			"originalName": "profile/src",
			"children": [
				{
					"id": 1805,
					"name": "Profile",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Represents a user profile"
					},
					"children": [
						{
							"id": 1818,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1819,
									"name": "new Profile",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1820,
											"name": "profile",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1821,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"id": 1805,
										"name": "Profile"
									}
								}
							]
						},
						{
							"id": 1822,
							"name": "_profile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/profile/src/profile.ts",
									"line": 40,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1823,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"indexSignature": {
										"id": 1824,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {},
										"parameters": [
											{
												"id": 1825,
												"name": "key",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							}
						},
						{
							"id": 1826,
							"name": "toJSON",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/profile/src/profile.ts",
									"line": 52,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1827,
									"name": "toJSON",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1828,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"indexSignature": {
												"id": 1829,
												"name": "__index",
												"kind": 8192,
												"kindString": "Index signature",
												"flags": {},
												"parameters": [
													{
														"id": 1830,
														"name": "key",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									}
								}
							]
						},
						{
							"id": 1831,
							"name": "toToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/profile/src/profile.ts",
									"line": 56,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 1832,
									"name": "toToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1833,
											"name": "privateKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 1810,
							"name": "fromToken",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/profile/src/profile.ts",
									"line": 65,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1811,
									"name": "fromToken",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1812,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1813,
											"name": "publicKeyOrAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "null"
										}
									],
									"type": {
										"type": "reference",
										"id": 1805,
										"name": "Profile"
									}
								}
							]
						},
						{
							"id": 1814,
							"name": "makeZoneFile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/profile/src/profile.ts",
									"line": 70,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 1815,
									"name": "makeZoneFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1816,
											"name": "domainName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1817,
											"name": "tokenFileURL",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 1806,
							"name": "validateSchema",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/profile/src/profile.ts",
									"line": 60,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 1807,
									"name": "validateSchema",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1808,
											"name": "profile",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 1809,
											"name": "strict",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1818
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1822
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1826,
								1831,
								1810,
								1814,
								1806
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/profile/src/profile.ts",
							"line": 39,
							"character": 20
						}
					]
				},
				{
					"id": 1942,
					"name": "extractProfile",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/profile/src/profileTokens.ts",
							"line": 138,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 1943,
							"name": "extractProfile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Extracts a profile from an encoded token and optionally verifies it,\nif `publicKeyOrAddress` is provided.",
								"returns": "- the profile extracted from the encoded token",
								"tags": [
									{
										"tag": "throws",
										"text": "{Error} - if the token isn't signed by the provided `publicKeyOrAddress`\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1944,
									"name": "token",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the token to be extracted"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1945,
									"name": "publicKeyOrAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the public key or address of the\n  keypair that is thought to have signed the token"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									},
									"defaultValue": "null"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record"
							}
						}
					]
				},
				{
					"id": 1923,
					"name": "signProfileToken",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/profile/src/profileTokens.ts",
							"line": 18,
							"character": 32
						}
					],
					"signatures": [
						{
							"id": 1924,
							"name": "signProfileToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Signs a profile token",
								"returns": "- the signed profile token\n\n"
							},
							"parameters": [
								{
									"id": 1925,
									"name": "profile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the JSON of the profile to be signed"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1926,
									"name": "privateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the signing private key"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1927,
									"name": "subject",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "the entity that the information is about"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1928,
									"name": "issuer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "the entity that is issuing the token"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1929,
									"name": "signingAlgorithm",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the signing algorithm to use"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'ES256K'"
								},
								{
									"id": 1930,
									"name": "issuedAt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the time of issuance of the token"
									},
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"defaultValue": "..."
								},
								{
									"id": 1931,
									"name": "expiresAt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the time of expiration of the token"
									},
									"type": {
										"type": "reference",
										"name": "Date"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1938,
					"name": "verifyProfileToken",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/profile/src/profileTokens.ts",
							"line": 75,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 1939,
							"name": "verifyProfileToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Verifies a profile token",
								"returns": "- the verified, decoded profile token",
								"tags": [
									{
										"tag": "throws",
										"text": "{Error} - throws an error if token verification fails\n"
									}
								]
							},
							"parameters": [
								{
									"id": 1940,
									"name": "token",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the token to be verified"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1941,
									"name": "publicKeyOrAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the public key or address of the\n  keypair that is thought to have signed the token"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "TokenInterface"
							}
						}
					]
				},
				{
					"id": 1932,
					"name": "wrapProfileToken",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/profile/src/profileTokens.ts",
							"line": 60,
							"character": 32
						}
					],
					"signatures": [
						{
							"id": 1933,
							"name": "wrapProfileToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Wraps a token for a profile token file",
								"returns": "- including `token` and `decodedToken`\n"
							},
							"parameters": [
								{
									"id": 1934,
									"name": "token",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the token to be wrapped"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1935,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1937,
											"name": "decodedToken",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenInterface"
											},
											"defaultValue": "..."
										},
										{
											"id": 1936,
											"name": "token",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1937,
												1936
											]
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1805
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1942,
						1923,
						1938,
						1932
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/profile/src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 378,
			"name": "stacking",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/stacking [![npm](https://img.shields.io/npm/v/@stacks/stacking?color=red)](https://www.npmjs.com/package/@stacks/stacking)\n\nLibrary for PoX Stacking.\n\n## Installation\n\n```shell\nnpm install @stacks/stacking bn.js\n```\n\n## Initialization\n\nInitialize a `StackingClient` to interact with the Stacking contract.\n\n*Note: the `StackingClient` sets its transactions `AnchorMode` to `Any`.*\n\n```typescript\nimport { getNonce } from '@stacks/transactions';\nimport { StacksTestnet, StacksMainnet } from '@stacks/network';\nimport { StackingClient } from '@stacks/stacking';\nimport BN from 'bn.js';\n\nconst network = new StacksTestnet();\n// for mainnet: const network = new StacksMainnet();\nconst client = new StackingClient(address, network);\n\n// the stacks STX address\nconst address = 'ST3XKKN4RPV69NN1PHFDNX3TYKXT7XPC4N8KC1ARH';\n// a BTC address for reward payouts\nconst poxAddress = 'mvuYDknzDtPgGqm2GnbAbmGMLwiyW3AwFP';\n// number cycles to stack\nconst cycles = 3;\n// how much to stack, in microSTX\nconst amountMicroStx = new BN(100000000000);\n// private key for transaction signing\nconst privateKey = 'd48f215481c16cbe6426f8e557df9b78895661971d71735126545abddcd5377001';\n// block height at which to stack\nconst burnBlockHeight = 2000;\n```\n\n## Check stacking eligibility\n\n```typescript\nconst stackingEligibility = await client.canStack({ poxAddress, cycles });\n\n// {\n//   eligible: false,\n//   reason: 'ERR_STACKING_INVALID_LOCK_PERIOD',\n// }\n```\n\n## Stack STX\n\n```typescript\nconst stackingResults = await client.stack({\n  amountMicroStx,\n  poxAddress,\n  cycles,\n  privateKey,\n  burnBlockHeight,\n});\n\n// {\n//   txid: '0xf6e9dbf6a26c1b73a14738606cb2232375d1b440246e6bbc14a45b3a66618481',\n// }\n```\n\n## Will Stacking be executed in the next cycle?\n\n```typescript\nconst stackingEnabledNextCycle = await client.isStackingEnabledNextCycle();\n\n// true / false\n```\n\n## How long (in seconds) is a Stacking cycle?\n\n```typescript\nconst cycleDuration = await client.getCycleDuration();\n\n// 120\n```\n\n## How much time is left (in seconds) until the next cycle begins?\n\n```typescript\nconst secondsUntilNextCycle = await client.getSecondsUntilNextCycle();\n\n// 600000\n```\n\n## Get PoX info\n\n```typescript\nconst poxInfo = await client.getPoxInfo();\n\n// {\n//   contract_id: 'ST000000000000000000002AMW42H.pox',\n//   first_burnchain_block_height: 0,\n//   min_amount_ustx: 83335083333333,\n//   prepare_cycle_length: 30,\n//   rejection_fraction: 3333333333333333,\n//   reward_cycle_id: 17,\n//   reward_cycle_length: 120,\n//   rejection_votes_left_required: 0,\n//   total_liquid_supply_ustx: 40000840000000000\n// }\n```\n\n## Get Stacks node info\n\n```typescript\nconst coreInfo = await client.getCoreInfo();\n\n// {\n//   peer_version: 385875968,\n//   pox_consensus: 'bb88a6e6e65fa7c974d3f6e91a941d05cc3dff8e',\n//   burn_block_height: 2133,\n//   stable_pox_consensus: '2284451c3e623237def1f8caed1c11fa46b6f0cc',\n//   stable_burn_block_height: 2132,\n//   server_version: 'blockstack-core 0.0.1 => 23.0.0.0 (HEAD:a4deb7a+, release build, linux [x86_64])',\n//   network_id: 2147483648,\n//   parent_network_id: 3669344250,\n//   stacks_tip_height: 1797,\n//   stacks_tip: '016df36c6a154cb6114c469a28cc0ce8b415a7af0527f13f15e66e27aa480f94',\n//   stacks_tip_consensus_hash: 'bb88a6e6e65fa7c974d3f6e91a941d05cc3dff8e',\n//   unanchored_tip: '6b93d2c62fc07cf44302d4928211944d2debf476e5c71fb725fb298a037323cc',\n//   exit_at_block_height: null\n// }\n```\n\n## Get account balance\n\n```typescript\nconst responseBalanceInfo = await client.getAccountBalance();\n\n// 800000000000\n```\n\n## Does account have sufficient STX to meet minimum threshold?\n\n```js\nconst hasMinStxAmount = await client.hasMinimumStx();\n\n// true / false\n```\n\n## Get account stacking status\n\n```typescript\nconst stackingStatus = await client.getStatus();\n\n// {\n//   stacked: true,\n//   details: {\n//     amount_microstx: '80000000000000',\n//     first_reward_cycle: 18,\n//     lock_period: 10,\n//     unlock_height: 3020,\n//     pox_address: {\n//       version: '00',\n//       hashbytes: '05cf52a44bf3e6829b4f8c221cc675355bf83b7d'\n//     }\n//   }\n// }\n```\n\n## Delegation\n\nThere are four methods available for delegation, two for the delegators and two for the delegatee.\n\n### Delegatee\n\nIf you are the account owner (\"stacker\"), you can delegate or revoke delegation rights.\n\n#### Delegate STX\n\n```typescript\n// STX address of the delegator\nconst delegateTo = 'ST2MCYPWTFMD2MGR5YY695EJG0G1R4J2BTJPRGM7H';\n// burn height at which the delegation relationship should be revoked (optional)\nconst untilBurnBlockHeight = 5000;\n\nconst delegetateResponse = await client.delegateStx({\n  amountMicroStx,\n  delegateTo,\n  untilBurnBlockHeight, // optional\n  privateKey,\n});\n\n// {\n//   txid: '0xf6e9dbf6a26c1b73a14738606cb2232375d1b440246e6bbc14a45b3a66618481',\n// }\n```\n\n#### Revoke delegation\n\n```typescript\n// note that the parameter here is not JSON\nconst revokeResponse = await client.revokeDelegateStx(privateKey);\n\n// {\n//   txid: '0xf6e9dbf6a26c1b73a14738606cb2232375d1b440246e6bbc14a45b3a66618481',\n// }\n```\n\n### Delegator\n\nIf you are the delegator, you can stack (\"lock up\") tokens for your users and commit to stacking participation for upcoming reward cycles.\n\n#### Stack delegated STX\n\n```typescript\n// delegators would initiate a different client\nconst delegatorAddress = 'ST22X605P0QX2BJC3NXEENXDPFCNJPHE02DTX5V74';\n// delegator private key for transaction signing\nconst delegatorPrivateKey = 'd48f215481c16cbe6426f8e557df9b78895661971d71735126545abddcd5377001';\n// the BTC address for reward payouts\nconst delegatorBtcAddress = 'msiYwJCvXEzjgq6hDwD9ueBka6MTfN962Z';\n\n// if you call this method multiple times in the same block, you need to increase the nonce manually\nlet nonce = getNonce(delegatorAddress, network);\nnonce = nonce.add(new BN(1));\n\nconst delegatorClient = new StackingClient(delegatorAddress, network);\n\nconst delegetateStackResponses = await delegatorClient.delegateStackStx({\n  stacker: address,\n  amountMicroStx,\n  poxAddress: delegatorBtcAddress,\n  burnBlockHeight,\n  cycles,\n  privateKey: delegatorPrivateKey,\n  nonce, // optional\n});\n\n//   {\n//     txid: '0xf6e9dbf6a26c1b73a14738606cb2232375d1b440246e6bbc14a45b3a66618481',\n//   }\n```\n\n#### Commit to stacking\n\n```typescript\n// reward cycle id to commit to\nconst rewardCycle = 12;\n\nconst delegetateCommitResponse = await delegatorClient.stackAggregationCommit({\n  poxAddress: delegatorBtcAddress,\n  rewardCycle,\n  privateKey: privateKeyDelegate,\n});\n\n// {\n//   txid: '0xf6e9dbf6a26c1b73a14738606cb2232375d1b440246e6bbc14a45b3a66618481',\n// }\n```\n"
			},
			"originalName": "stacking/src",
			"children": [
				{
					"id": 1978,
					"name": "InvalidAddressError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1989,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1990,
									"name": "new InvalidAddressError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1991,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1992,
											"name": "innerError",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1978,
										"name": "InvalidAddressError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 1993,
							"name": "innerError",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/stacking/src/utils.ts",
									"line": 15,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Error"
							}
						},
						{
							"id": 1995,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 974,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.message"
							}
						},
						{
							"id": 1994,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 973,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.name"
							}
						},
						{
							"id": 1996,
							"name": "stack",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
									"line": 975,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stack"
							}
						},
						{
							"id": 1983,
							"name": "prepareStackTrace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Optional override for formatting stack traces",
								"tags": [
									{
										"tag": "see",
										"text": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 11,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1984,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1985,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1986,
													"name": "err",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Error"
													}
												},
												{
													"id": 1987,
													"name": "stackTraces",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "CallSite"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.prepareStackTrace"
							}
						},
						{
							"id": 1988,
							"name": "stackTraceLimit",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/globals.d.ts",
									"line": 13,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.stackTraceLimit"
							}
						},
						{
							"id": 1979,
							"name": "captureStackTrace",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true,
								"isExternal": true
							},
							"signatures": [
								{
									"id": 1980,
									"name": "captureStackTrace",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Create .stack property on a target object"
									},
									"parameters": [
										{
											"id": 1981,
											"name": "targetObject",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 1982,
											"name": "constructorOpt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Function"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Error.captureStackTrace"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Error.captureStackTrace"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1989
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1993,
								1995,
								1994,
								1996,
								1983,
								1988
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1979
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/utils.ts",
							"line": 14,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Error"
						}
					]
				},
				{
					"id": 446,
					"name": "StackingClient",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 447,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 448,
									"name": "new StackingClient",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 449,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 450,
											"name": "network",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 154,
												"name": "StacksNetwork"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 446,
										"name": "StackingClient"
									}
								}
							]
						},
						{
							"id": 451,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 452,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						},
						{
							"id": 471,
							"name": "canStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 281,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 472,
									"name": "canStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check if account can lock stx",
										"returns": "that resolves to a StackingEligibility object if the operation succeeds\n"
									},
									"parameters": [
										{
											"id": 473,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 419,
												"name": "CanLockStxOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 416,
												"name": "StackingEligibility"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 480,
							"name": "delegateStackStx",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 398,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 481,
									"name": "delegateStackStx",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "As a delegator, generate and broadcast transactions to stack for multiple delegatees. This will lock up tokens owned by the delegatees.",
										"returns": "that resolves to a broadcasted txid if the operation succeeds\n"
									},
									"parameters": [
										{
											"id": 482,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 434,
												"name": "DelegateStackStxOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2735,
												"name": "TxBroadcastResult"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 477,
							"name": "delegateStx",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 365,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 478,
									"name": "delegateStx",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "As a delegatee, generate and broadcast a transaction to create a delegation relationship",
										"returns": "that resolves to a broadcasted txid if the operation succeeds\n"
									},
									"parameters": [
										{
											"id": 479,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 428,
												"name": "DelegateStxOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2735,
												"name": "TxBroadcastResult"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 461,
							"name": "getAccountBalance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 207,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 462,
									"name": "getAccountBalance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get account balance",
										"returns": "that resolves to a BigNum if the operation succeeds\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BN"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 459,
							"name": "getAccountStatus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 197,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 460,
									"name": "getAccountStatus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 453,
							"name": "getCoreInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 166,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 454,
									"name": "getCoreInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get stacks node info",
										"returns": "that resolves to a CoreInfo response if the operation succeeds\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 410,
												"name": "CoreInfo"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 463,
							"name": "getCycleDuration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 222,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 464,
									"name": "getCycleDuration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get reward cycle duration in seconds",
										"returns": "that resolves to a number if the operation succeeds\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 498,
							"name": "getDelegateOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 516,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 499,
									"name": "getDelegateOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 500,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 501,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 503,
															"name": "amountMicroStx",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 524,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "BN"
															}
														},
														{
															"id": 502,
															"name": "contract",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 523,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 504,
															"name": "delegateTo",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 525,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 506,
															"name": "poxAddress",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 527,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 505,
															"name": "untilBurnBlockHeight",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 526,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																503,
																502,
																504,
																506,
																505
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2813,
										"name": "ContractCallOptions"
									}
								}
							]
						},
						{
							"id": 507,
							"name": "getDelegateStackOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 562,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 508,
									"name": "getDelegateStackOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 509,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 510,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 513,
															"name": "amountMicroStx",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 573,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "BN"
															}
														},
														{
															"id": 515,
															"name": "burnBlockHeight",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 575,
																	"character": 19
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 511,
															"name": "contract",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 571,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 516,
															"name": "cycles",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 576,
																	"character": 10
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 517,
															"name": "nonce",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 577,
																	"character": 9
																}
															],
															"type": {
																"type": "reference",
																"name": "BN"
															}
														},
														{
															"id": 514,
															"name": "poxAddress",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 574,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 512,
															"name": "stacker",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 572,
																	"character": 11
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																513,
																515,
																511,
																516,
																517,
																514,
																512
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2813,
										"name": "ContractCallOptions"
									}
								}
							]
						},
						{
							"id": 455,
							"name": "getPoxInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 176,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 456,
									"name": "getPoxInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get stacks node pox info",
										"returns": "that resolves to a PoxInfo response if the operation succeeds\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 379,
												"name": "PoxInfo"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 525,
							"name": "getRevokeDelegateStxOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 643,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 526,
									"name": "getRevokeDelegateStxOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 527,
											"name": "contract",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2813,
										"name": "ContractCallOptions"
									}
								}
							]
						},
						{
							"id": 465,
							"name": "getSecondsUntilNextCycle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 238,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 466,
									"name": "getSecondsUntilNextCycle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get number of seconds until next reward cycle",
										"returns": "that resolves to a number if the operation succeeds\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 518,
							"name": "getStackAggregationCommitOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 612,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 519,
									"name": "getStackAggregationCommitOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 520,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 521,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 522,
															"name": "contract",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 617,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 523,
															"name": "poxAddress",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 618,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 524,
															"name": "rewardCycle",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 619,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																522,
																523,
																524
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2813,
										"name": "ContractCallOptions"
									}
								}
							]
						},
						{
							"id": 489,
							"name": "getStackOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 476,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 490,
									"name": "getStackOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 491,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 492,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 495,
															"name": "amountMicroStx",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 485,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "BN"
															}
														},
														{
															"id": 497,
															"name": "burnBlockHeight",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 487,
																	"character": 19
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 496,
															"name": "contract",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 486,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 493,
															"name": "cycles",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 483,
																	"character": 10
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 494,
															"name": "poxAddress",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 484,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																495,
																497,
																496,
																493,
																494
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2813,
										"name": "ContractCallOptions"
									}
								}
							]
						},
						{
							"id": 528,
							"name": "getStatus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 663,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 529,
									"name": "getStatus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check stacking status",
										"returns": "that resolves to a StackerInfo object if the operation succeeds\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 388,
												"name": "StackerInfo"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 457,
							"name": "getTargetBlockTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 186,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 458,
									"name": "getTargetBlockTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get stacks node target block time",
										"returns": "that resolves to a number if the operation succeeds\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 469,
							"name": "hasMinimumStx",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 268,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 470,
									"name": "hasMinimumStx",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check if account has minimum require amount of Stacks for stacking",
										"returns": "that resolves to a bool if the operation succeeds\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 467,
							"name": "isStackingEnabledNextCycle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 259,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 468,
									"name": "isStackingEnabledNextCycle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check if stacking is enabled for next reward cycle",
										"returns": "that resolves to a bool if the operation succeeds\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 530,
							"name": "modifyLockTxFee",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 715,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 531,
									"name": "modifyLockTxFee",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adjust microstacks amount for locking after taking into account transaction fees",
										"returns": "that resolves to a transaction object if the operation succeeds\n"
									},
									"parameters": [
										{
											"id": 532,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 533,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 535,
															"name": "amountMicroStx",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 715,
																	"character": 81
																}
															],
															"type": {
																"type": "reference",
																"name": "BN"
															}
														},
														{
															"id": 534,
															"name": "tx",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 715,
																	"character": 46
																}
															],
															"type": {
																"type": "reference",
																"id": 2138,
																"name": "StacksTransaction"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																535,
																534
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								}
							]
						},
						{
							"id": 536,
							"name": "parseContractId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 728,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 537,
									"name": "parseContractId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parses a contract identifier and ensures it is formatted correctly",
										"returns": "a contract address and name\n"
									},
									"parameters": [
										{
											"id": 538,
											"name": "contract",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						},
						{
							"id": 486,
							"name": "revokeDelegateStx",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 462,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 487,
									"name": "revokeDelegateStx",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "As a delegatee, generate and broadcast a transaction to terminate the delegation relationship",
										"returns": "that resolves to a broadcasted txid if the operation succeeds\n"
									},
									"parameters": [
										{
											"id": 488,
											"name": "privateKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the private key to be used for the revoke call\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2735,
												"name": "TxBroadcastResult"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 474,
							"name": "stack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 333,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 475,
									"name": "stack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generate and broadcast a stacking transaction to lock STX",
										"returns": "that resolves to a broadcasted txid if the operation succeeds\n"
									},
									"parameters": [
										{
											"id": 476,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 422,
												"name": "LockStxOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2735,
												"name": "TxBroadcastResult"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 483,
							"name": "stackAggregationCommit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 434,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 484,
									"name": "stackAggregationCommit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "As a delegator, generate and broadcast a transaction to commit partially committed delegatee tokens",
										"returns": "that resolves to a broadcasted txid if the operation succeeds\n"
									},
									"parameters": [
										{
											"id": 485,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 442,
												"name": "StackAggregationCommitOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2735,
												"name": "TxBroadcastResult"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								447
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								451,
								452
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								471,
								480,
								477,
								461,
								459,
								453,
								463,
								498,
								507,
								455,
								525,
								465,
								518,
								489,
								528,
								457,
								469,
								467,
								530,
								536,
								486,
								474,
								483
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 158,
							"character": 27
						}
					]
				},
				{
					"id": 413,
					"name": "BalanceInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 414,
							"name": "balance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 77,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 415,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 78,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								414,
								415
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 76,
							"character": 28
						}
					]
				},
				{
					"id": 403,
					"name": "BlockTimeInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 404,
							"name": "mainnet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 63,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 405,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 406,
											"name": "target_block_time",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/stacking/src/index.ts",
													"line": 64,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												406
											]
										}
									]
								}
							}
						},
						{
							"id": 407,
							"name": "testnet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 66,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 408,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 409,
											"name": "target_block_time",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/stacking/src/index.ts",
													"line": 67,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												409
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								404,
								407
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 62,
							"character": 30
						}
					]
				},
				{
					"id": 419,
					"name": "CanLockStxOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Lock stx check options",
						"tags": [
							{
								"tag": "param",
								"text": "the reward Bitcoin address",
								"param": "poxAddress"
							},
							{
								"tag": "param",
								"text": "number of cycles to lock\n",
								"param": "cycles"
							}
						]
					},
					"children": [
						{
							"id": 421,
							"name": "cycles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 94,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 420,
							"name": "poxAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 93,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								421,
								420
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 92,
							"character": 34
						}
					]
				},
				{
					"id": 410,
					"name": "CoreInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 411,
							"name": "burn_block_height",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 72,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 412,
							"name": "stable_pox_consensus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 73,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								411,
								412
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 71,
							"character": 25
						}
					]
				},
				{
					"id": 434,
					"name": "DelegateStackStxOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Delegate stack stx options",
						"tags": [
							{
								"tag": "param",
								"text": "the STX address of the delegator",
								"param": "stacker"
							},
							{
								"tag": "param",
								"text": "number of microstacks to lock",
								"param": "amountMicroStx"
							},
							{
								"tag": "param",
								"text": "the reward Bitcoin address of the delegator",
								"param": "poxAddress"
							},
							{
								"tag": "param",
								"text": "the burnchain block height to begin lock",
								"param": "burnBlockHeight"
							},
							{
								"tag": "param",
								"text": "number of cycles to lock",
								"param": "cycles"
							},
							{
								"tag": "param",
								"text": "private key to sign transaction",
								"param": "privateKey"
							},
							{
								"tag": "param",
								"text": "nonce for the transaction\n",
								"param": "nonce"
							}
						]
					},
					"children": [
						{
							"id": 436,
							"name": "amountMicroStx",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 144,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 438,
							"name": "burnBlockHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 146,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 439,
							"name": "cycles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 147,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 441,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 149,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 437,
							"name": "poxAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 145,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 440,
							"name": "privateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 148,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 435,
							"name": "stacker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 143,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								436,
								438,
								439,
								441,
								437,
								440,
								435
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 142,
							"character": 40
						}
					]
				},
				{
					"id": 428,
					"name": "DelegateStxOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Delegate stx options",
						"tags": [
							{
								"tag": "param",
								"text": "number of microstacks to delegate",
								"param": "amountMicroStx"
							},
							{
								"tag": "param",
								"text": "the STX address of the delegatee",
								"param": "delegateTo"
							},
							{
								"tag": "param",
								"text": "the burnchain block height after which delegation is revoked",
								"param": "untilBurnBlockHeight"
							},
							{
								"tag": "param",
								"text": "the reward Bitcoin address of the delegator",
								"param": "poxAddress"
							},
							{
								"tag": "param",
								"text": "private key to sign transaction\n",
								"param": "privateKey"
							}
						]
					},
					"children": [
						{
							"id": 429,
							"name": "amountMicroStx",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 124,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 430,
							"name": "delegateTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 125,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 432,
							"name": "poxAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 127,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 433,
							"name": "privateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 128,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 431,
							"name": "untilBurnBlockHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 126,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								429,
								430,
								432,
								433,
								431
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 123,
							"character": 35
						}
					]
				},
				{
					"id": 422,
					"name": "LockStxOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Lock stx options",
						"tags": [
							{
								"tag": "param",
								"text": "private key to sign transaction",
								"param": "key"
							},
							{
								"tag": "param",
								"text": "the reward Bitcoin address",
								"param": "poxAddress"
							},
							{
								"tag": "param",
								"text": "number of cycles to lock",
								"param": "cycles"
							},
							{
								"tag": "param",
								"text": "number of microstacks to lock",
								"param": "amountMicroStx"
							},
							{
								"tag": "param",
								"text": "the burnchain block height to begin lock\n",
								"param": "burnBlockHeight"
							}
						]
					},
					"children": [
						{
							"id": 426,
							"name": "amountMicroStx",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 110,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 427,
							"name": "burnBlockHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 111,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 424,
							"name": "cycles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 108,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 425,
							"name": "poxAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 109,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 423,
							"name": "privateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 107,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								426,
								427,
								424,
								425,
								423
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 106,
							"character": 31
						}
					]
				},
				{
					"id": 379,
					"name": "PoxInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 380,
							"name": "contract_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 34,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 381,
							"name": "first_burnchain_block_height",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 35,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 382,
							"name": "min_amount_ustx",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 36,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 383,
							"name": "registration_window_length",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 37,
									"character": 28
								}
							],
							"type": {
								"type": "literal",
								"value": 250
							}
						},
						{
							"id": 384,
							"name": "rejection_fraction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 38,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 387,
							"name": "rejection_votes_left_required",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 41,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 385,
							"name": "reward_cycle_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 39,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 386,
							"name": "reward_cycle_length",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 40,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								380,
								381,
								382,
								383,
								384,
								387,
								385,
								386
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 33,
							"character": 24
						}
					]
				},
				{
					"id": 442,
					"name": "StackAggregationCommitOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 443,
							"name": "poxAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 153,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 445,
							"name": "privateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 155,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 444,
							"name": "rewardCycle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 154,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								443,
								445,
								444
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 152,
							"character": 46
						}
					]
				},
				{
					"id": 416,
					"name": "StackingEligibility",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 417,
							"name": "eligible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 82,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 418,
							"name": "reason",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 83,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								417,
								418
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 81,
							"character": 36
						}
					]
				},
				{
					"id": 2007,
					"name": "PoxAddressArgs",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/stacking/src/utils.ts",
							"line": 117,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "tuple",
								"elements": [
									{
										"type": "named-tuple-member",
										"name": "version",
										"isOptional": false,
										"element": {
											"type": "reference",
											"name": "Buffer"
										}
									},
									{
										"type": "named-tuple-member",
										"name": "hashBytes",
										"isOptional": false,
										"element": {
											"type": "reference",
											"name": "Buffer"
										}
									},
									{
										"type": "named-tuple-member",
										"name": "network",
										"isOptional": false,
										"element": {
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": "mainnet"
												},
												{
													"type": "literal",
													"value": "testnet"
												}
											]
										}
									}
								]
							},
							{
								"type": "tuple",
								"elements": [
									{
										"type": "named-tuple-member",
										"name": "poxAddrClarityValue",
										"isOptional": false,
										"element": {
											"type": "reference",
											"id": 2430,
											"name": "ClarityValue"
										}
									},
									{
										"type": "named-tuple-member",
										"name": "network",
										"isOptional": false,
										"element": {
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": "mainnet"
												},
												{
													"type": "literal",
													"value": "testnet"
												}
											]
										}
									}
								]
							}
						]
					}
				},
				{
					"id": 388,
					"name": "StackerInfo",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 44,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 389,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 390,
											"name": "stacked",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/stacking/src/index.ts",
													"line": 46,
													"character": 13
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												390
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/stacking/src/index.ts",
											"line": 45,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 391,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 393,
											"name": "details",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/stacking/src/index.ts",
													"line": 50,
													"character": 13
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 394,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 395,
															"name": "amount_microstx",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 51,
																	"character": 23
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 396,
															"name": "first_reward_cycle",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 52,
																	"character": 26
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 397,
															"name": "lock_period",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 53,
																	"character": 19
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 399,
															"name": "pox_address",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 55,
																	"character": 19
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 400,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 402,
																			"name": "hashbytes",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/stacking/src/index.ts",
																					"line": 57,
																					"character": 19
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Buffer"
																			}
																		},
																		{
																			"id": 401,
																			"name": "version",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/stacking/src/index.ts",
																					"line": 56,
																					"character": 17
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Buffer"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				402,
																				401
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/stacking/src/index.ts",
																			"line": 55,
																			"character": 20
																		}
																	]
																}
															}
														},
														{
															"id": 398,
															"name": "unlock_height",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 54,
																	"character": 21
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																395,
																396,
																397,
																399,
																398
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/stacking/src/index.ts",
															"line": 50,
															"character": 14
														}
													]
												}
											}
										},
										{
											"id": 392,
											"name": "stacked",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/stacking/src/index.ts",
													"line": 49,
													"character": 13
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												393,
												392
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/stacking/src/index.ts",
											"line": 48,
											"character": 3
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 1997,
					"name": "BitcoinNetworkVersion",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/stacking/src/utils.ts",
							"line": 28,
							"character": 34
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1998,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1999,
									"name": "mainnet",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2000,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2001,
													"name": "P2PKH",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": 0
													},
													"defaultValue": "0x00"
												},
												{
													"id": 2002,
													"name": "P2SH",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": 5
													},
													"defaultValue": "0x05"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														2001,
														2002
													]
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 2003,
									"name": "testnet",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2004,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 2005,
													"name": "P2PKH",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": 111
													},
													"defaultValue": "0x6f"
												},
												{
													"id": 2006,
													"name": "P2SH",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "literal",
														"value": 196
													},
													"defaultValue": "0xc4"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														2005,
														2006
													]
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1999,
										2003
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 1946,
					"name": "btcAddressVersionToHashMode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/stacking/src/utils.ts",
							"line": 39,
							"character": 43
						}
					],
					"signatures": [
						{
							"id": 1947,
							"name": "btcAddressVersionToHashMode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1948,
									"name": "btcAddressVersion",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3102,
								"name": "AddressHashMode"
							}
						}
					]
				},
				{
					"id": 1956,
					"name": "decodeBtcAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/stacking/src/utils.ts",
							"line": 80,
							"character": 32
						}
					],
					"signatures": [
						{
							"id": 1957,
							"name": "decodeBtcAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1958,
									"name": "btcAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1959,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1961,
											"name": "data",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											},
											"defaultValue": "..."
										},
										{
											"id": 1960,
											"name": "hashMode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3102,
												"name": "AddressHashMode"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1961,
												1960
											]
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 1962,
					"name": "extractPoxAddressFromClarityValue",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/stacking/src/utils.ts",
							"line": 94,
							"character": 49
						}
					],
					"signatures": [
						{
							"id": 1963,
							"name": "extractPoxAddressFromClarityValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1964,
									"name": "poxAddrClarityValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1965,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 1967,
											"name": "hashBytes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											},
											"defaultValue": "..."
										},
										{
											"id": 1966,
											"name": "version",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												1967,
												1966
											]
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 1953,
					"name": "getAddressHashMode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/stacking/src/utils.ts",
							"line": 71,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 1954,
							"name": "getAddressHashMode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1955,
									"name": "btcAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3102,
								"name": "AddressHashMode"
							}
						}
					]
				},
				{
					"id": 1971,
					"name": "getBTCAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/stacking/src/utils.ts",
							"line": 142,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 1972,
							"name": "getBTCAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1973,
									"name": "version",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 1974,
									"name": "checksum",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1975,
					"name": "getErrorString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/stacking/src/utils.ts",
							"line": 147,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 1976,
							"name": "getErrorString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1977,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "StackingErrors"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1949,
					"name": "hashModeToBtcAddressVersion",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/stacking/src/utils.ts",
							"line": 54,
							"character": 43
						}
					],
					"signatures": [
						{
							"id": 1950,
							"name": "hashModeToBtcAddressVersion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1951,
									"name": "hashMode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3102,
										"name": "AddressHashMode"
									}
								},
								{
									"id": 1952,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "mainnet"
											},
											{
												"type": "literal",
												"value": "testnet"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1968,
					"name": "poxAddressToBtcAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/stacking/src/utils.ts",
							"line": 121,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 1969,
							"name": "poxAddressToBtcAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1970,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "reference",
										"id": 2007,
										"name": "PoxAddressArgs"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1978,
						446
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						413,
						403,
						419,
						410,
						434,
						428,
						422,
						379,
						442,
						416
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2007,
						388
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1997
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1946,
						1956,
						1962,
						1953,
						1971,
						1975,
						1949,
						1968
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/stacking/src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 539,
			"name": "storage",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/storage\n\nStore and fetch files with Gaia, the decentralized storage system.\n\n## Installation\n\n```\nnpm install @stacks/storage\n```\n\n## Usage\n\n### Initiating a storage client\n\n```typescript\nimport { UserSession } from '@stacks/auth';\nimport { Storage } from '@stacks/storage';\n\nconst appConfig = new AppConfig();\nconst userSession = new UserSession({ appConfig });\nconst storage = new Storage({ userSession });\n```\n\nNote that you can also use an existing `userSession` object created during the authentication process.\n\n### Put file\n\n```typescript\nconst myData = JSON.stringify({\n  hello: \"world\",\n  num: 1\n});\n\nstorage.putFile('my_data.json', myData));\n```\n\nStore data at a different path\n\n```typescript\nstorage.putFile('path/my_data.json', myData));\n```\n\nPut file with options\n\n```typescript\nconst putFileOptions = {\n  // override the default content type\n  contentType: 'application/json', \n  // override encrypting data by default\n  // you can also set encrypt to a private key to specify a custom encryption key\n  encrypt: false, \n  // ignore automatic conflict prevention using etags\n  dangerouslyIgnoreEtag: true\n}\n\nstorage.putFile('my_data.json', myData, putFileOptions));\n```\n\n### Get file\n\n```typescript\nstorage.getFile('my_data.json').then((fileContent) => {\n  console.log(fileContent);\n});\n```\n\nGet file with options\n\n```typescript\nconst getFileOptions = {\n  decrypt: false,\n  // by default files stored are signed and can be verified for authenticity\n  verify: false\n}\n\nstorage.getFile('my_data.json', getFileOptions).then((fileContent) => {\n  console.log(fileContent);\n});\n```\n\n### Delete file\n\n```typescript\nstorage.deleteFile('my_data.json');\n```\n\nDelete the file and the corresponding signature file if signed\n\n```typescript\nstorage.deleteFile('my_data.json', { wasSigned: true });\n```\n\n### List file\n\nList all files in the user's Gaia hub\n\n```typescript\nstorage.listFiles((filename) => {\n  if (filename === 'my_data.json') {\n    return storage.getFile(filename).then((fileContent) => {\n      console.log(fileContent);\n      // return false to stop iterating through files\n      return false;\n    })\n  } else {\n    // return true to continue iterating\n    return true;\n  }\n});\n```\n"
			},
			"originalName": "storage/src",
			"children": [
				{
					"id": 2060,
					"name": "Storage",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 2061,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2062,
									"name": "new Storage",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2063,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2058,
												"name": "StorageOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2060,
										"name": "Storage"
									}
								}
							]
						},
						{
							"id": 2064,
							"name": "userSession",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 114,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 625,
								"name": "UserSession"
							}
						},
						{
							"id": 2108,
							"name": "deleteFile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 631,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 2109,
									"name": "deleteFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Deletes the specified file from the app's data store.",
										"returns": "Resolves when the file has been removed or rejects with an error.\n"
									},
									"parameters": [
										{
											"id": 2110,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The path to the file to delete."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2111,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optional options object."
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2112,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2113,
															"name": "wasSigned",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"comment": {
																"text": "Set to true if the file was originally signed\nin order for the corresponding signature file to also be deleted."
															},
															"sources": [
																{
																	"fileName": "packages/storage/src/storage.ts",
																	"line": 634,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																2113
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2114,
							"name": "getAppBucketUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 675,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 2115,
									"name": "getAppBucketUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the app storage bucket URL",
										"returns": "That resolves to the URL of the app index file\nor rejects if it fails\n"
									},
									"parameters": [
										{
											"id": 2116,
											"name": "gaiaHubUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the gaia hub URL"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2117,
											"name": "appPrivateKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the app private key used to generate the app address"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2065,
							"name": "getFile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 129,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 2066,
									"name": "getFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Retrieves the specified file from the app's data store.",
										"returns": "that resolves to the raw data in the file\nor rejects with an error\n"
									},
									"parameters": [
										{
											"id": 2067,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the path to the file to read"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2068,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "a [[GetFileOptions]] object\n"
											},
											"type": {
												"type": "reference",
												"id": 2048,
												"name": "GetFileOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ArrayBuffer"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2084,
							"name": "getFileContents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 274,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 2085,
									"name": "getFileContents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2086,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2087,
											"name": "app",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2088,
											"name": "username",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 2089,
											"name": "zoneFileLookupURL",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 2090,
											"name": "forceText",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ArrayBuffer"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2091,
							"name": "getFileSignedUnencrypted",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 316,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 2092,
									"name": "getFileSignedUnencrypted",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2093,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2094,
											"name": "opt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2048,
												"name": "GetFileOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ArrayBuffer"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2080,
							"name": "getFileUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 246,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 2081,
									"name": "getFileUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the URL for reading a file from an app's data store.",
										"returns": "that resolves to the URL or rejects with an error\n"
									},
									"parameters": [
										{
											"id": 2082,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the path to the file to read\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2083,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 2054,
												"name": "GetFileUrlOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2075,
							"name": "getGaiaAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 219,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 2076,
									"name": "getGaiaAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2077,
											"name": "app",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2078,
											"name": "username",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2079,
											"name": "zoneFileLookupURL",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2069,
							"name": "getUserAppFileUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 196,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2070,
									"name": "getUserAppFileUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch the public read URL of a user file for the specified app.",
										"returns": "that resolves to the public read URL of the file\nor rejects with an error\n"
									},
									"parameters": [
										{
											"id": 2071,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the path to the file to read"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2072,
											"name": "username",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The Blockstack ID of the user to look up"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2073,
											"name": "appOrigin",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The app origin"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2074,
											"name": "zoneFileLookupURL",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2095,
							"name": "handleSignedEncryptedContents",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 394,
									"character": 37
								}
							],
							"signatures": [
								{
									"id": 2096,
									"name": "handleSignedEncryptedContents",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2097,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2098,
											"name": "storedContents",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2099,
											"name": "app",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2100,
											"name": "privateKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2101,
											"name": "username",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2102,
											"name": "zoneFileLookupURL",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													}
												]
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2128,
							"name": "listFiles",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 782,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2129,
									"name": "listFiles",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "List the set of files in this application's Gaia storage bucket.",
										"returns": "that resolves to the number of files listed\n"
									},
									"parameters": [
										{
											"id": 2130,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "a callback to invoke on each named file that\nreturns `true` to continue the listing operation or `false` to end it.\nIf the call is ended early by the callback, the last file is excluded.\nIf an error occurs the entire call is rejected.\n"
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2131,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2132,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2133,
																	"name": "name",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2103,
							"name": "putFile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 465,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 2104,
									"name": "putFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Stores the data provided in the app's data store to to the file specified.",
										"returns": "that resolves if the operation succeed and rejects\nif it failed\n"
									},
									"parameters": [
										{
											"id": 2105,
											"name": "path",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the path to store the data in"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2106,
											"name": "content",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the data to store in the file"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													},
													{
														"type": "reference",
														"name": "Blob"
													},
													{
														"type": "reference",
														"name": "ArrayBufferView"
													}
												]
											}
										},
										{
											"id": 2107,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "a [[PutFileOptions]] object\n"
											},
											"type": {
												"type": "reference",
												"id": 2041,
												"name": "PutFileOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2061
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2064
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2108,
								2114,
								2065,
								2084,
								2091,
								2080,
								2075,
								2069,
								2095,
								2128,
								2103
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/storage/src/storage.ts",
							"line": 113,
							"character": 20
						}
					]
				},
				{
					"id": 2023,
					"name": "GaiaHubConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "The configuration for the user's Gaia storage provider."
					},
					"children": [
						{
							"id": 2024,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/hub.ts",
									"line": 35,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2027,
							"name": "max_file_upload_size_megabytes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/hub.ts",
									"line": 38,
									"character": 32
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 2028,
							"name": "server",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/hub.ts",
									"line": 39,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2026,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/hub.ts",
									"line": 37,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2025,
							"name": "url_prefix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/hub.ts",
									"line": 36,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2024,
								2027,
								2028,
								2026,
								2025
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/storage/src/hub.ts",
							"line": 34,
							"character": 30
						}
					]
				},
				{
					"id": 2048,
					"name": "GetFileOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Used to pass options to [[UserSession.getFile]]"
					},
					"children": [
						{
							"id": 2052,
							"name": "app",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The app to lookup for multi-player storage - defaults to current origin.",
								"tags": [
									{
										"tag": "default",
										"text": "`window.location.origin`\nOnly if available in the executing environment, otherwise `undefined`.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 93,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2056,
								"name": "GetFileUrlOptions.app"
							}
						},
						{
							"id": 2049,
							"name": "decrypt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Try to decrypt the data with the app private key.\nIf a string is specified, it is used as the private key.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 73,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 2051,
							"name": "username",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The Blockstack ID to lookup for multi-player storage.\nIf not specified, the currently signed in username is used."
							},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 87,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2055,
								"name": "GetFileUrlOptions.username"
							}
						},
						{
							"id": 2050,
							"name": "verify",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether the content should be verified, only to be used\nwhen [[UserSession.putFile]] was set to `sign = true`.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 79,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2053,
							"name": "zoneFileLookupURL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The URL to use for zonefile lookup. If falsey, this will use\nthe blockstack.js's [[getNameInfo]] function instead."
							},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 98,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2057,
								"name": "GetFileUrlOptions.zoneFileLookupURL"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2052,
								2049,
								2051,
								2050,
								2053
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/storage/src/storage.ts",
							"line": 67,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2054,
							"name": "GetFileUrlOptions"
						}
					]
				},
				{
					"id": 2054,
					"name": "GetFileUrlOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2056,
							"name": "app",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The app to lookup for multi-player storage - defaults to current origin.",
								"tags": [
									{
										"tag": "default",
										"text": "`window.location.origin`\nOnly if available in the executing environment, otherwise `undefined`.\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 93,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2055,
							"name": "username",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The Blockstack ID to lookup for multi-player storage.\nIf not specified, the currently signed in username is used."
							},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 87,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2057,
							"name": "zoneFileLookupURL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The URL to use for zonefile lookup. If falsey, this will use\nthe blockstack.js's [[getNameInfo]] function instead."
							},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 98,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2056,
								2055,
								2057
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/storage/src/storage.ts",
							"line": 82,
							"character": 34
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2048,
							"name": "GetFileOptions"
						}
					]
				},
				{
					"id": 2041,
					"name": "PutFileOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify a valid MIME type, encryption options, and whether to sign the [[UserSession.putFile]]."
					},
					"children": [
						{
							"id": 2046,
							"name": "cipherTextEncoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "String encoding format for the cipherText buffer.\nCurrently defaults to 'hex' for legacy backwards-compatibility.\nOnly used if the `encrypt` option is also used.\nNote: in the future this should default to 'base64' for the significant\nfile size reduction."
							},
							"sources": [
								{
									"fileName": "packages/encryption/src/encryption.ts",
									"line": 27,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "CipherTextEncoding"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1447,
								"name": "EncryptionOptions.cipherTextEncoding"
							}
						},
						{
							"id": 2042,
							"name": "contentType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies the Content-Type header for unencrypted data.\nIf the `encrypt` is enabled, this option is ignored, and the\nContent-Type header is set to `application/json` for the ciphertext\nJSON envelope."
							},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 48,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2044,
							"name": "dangerouslyIgnoreEtag",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Ignore etag for concurrency control and force file to be written."
							},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 59,
									"character": 23
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2043,
							"name": "encrypt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Encrypt the data with the app public key.\nIf a string is specified, it is used as the public key.\nIf the boolean `true` is specified then the current user's app public key is used.",
								"tags": [
									{
										"tag": "default",
										"text": "true\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 55,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 2045,
							"name": "sign",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If set to `true` the data is signed using ECDSA on SHA256 hashes with the user's\napp private key. If a string is specified, it is used as the private key instead\nof the user's app private key.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/encryption/src/encryption.ts",
									"line": 19,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1446,
								"name": "EncryptionOptions.sign"
							}
						},
						{
							"id": 2047,
							"name": "wasString",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies if the original unencrypted content is a ASCII or UTF-8 string.\nFor example stringified JSON.\nIf true, then when the ciphertext is decrypted, it will be returned as\na `string` type variable, otherwise will be returned as a Buffer."
							},
							"sources": [
								{
									"fileName": "packages/encryption/src/encryption.ts",
									"line": 34,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1448,
								"name": "EncryptionOptions.wasString"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2046,
								2042,
								2044,
								2043,
								2045,
								2047
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/storage/src/storage.ts",
							"line": 41,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1445,
							"name": "EncryptionOptions"
						}
					]
				},
				{
					"id": 2058,
					"name": "StorageOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Options for constructing a Storage instance"
					},
					"children": [
						{
							"id": 2059,
							"name": "userSession",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The userSession object to construct the Storage instance with.\nThe session object contains the credentials and keys for\nGaia hub access and encryption."
							},
							"sources": [
								{
									"fileName": "packages/storage/src/storage.ts",
									"line": 110,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 625,
								"name": "UserSession"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2059
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/storage/src/storage.ts",
							"line": 104,
							"character": 31
						}
					]
				},
				{
					"id": 2033,
					"name": "deleteFromGaiaHub",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/storage/src/hub.ts",
							"line": 105,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 2034,
							"name": "deleteFromGaiaHub",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {},
							"parameters": [
								{
									"id": 2035,
									"name": "filename",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2036,
									"name": "hubConfig",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"id": 2023,
										"name": "GaiaHubConfig"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2060
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2023,
						2048,
						2054,
						2041,
						2058
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2033
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/storage/src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 540,
			"name": "transactions",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/transactions [![npm](https://img.shields.io/npm/v/@stacks/transactions?color=red)](https://www.npmjs.com/package/@stacks/transactions)\n\nConstruct, decode transactions and work with Clarity smart contracts on the Stacks blockchain.\n\n## Installation\n\n```\nnpm install @stacks/transactions\n```\n\n## Overview\n\nThis library supports the creation of the following Stacks transaction types:\n\n1. STX token transfer\n2. Smart contract deploy\n3. Smart contract function call\n\n## Key Generation\n\n```javascript\nimport { createStacksPrivateKey, makeRandomPrivKey, getPublicKey } from '@stacks/transactions';\n\n// Random key\nconst privateKey = makeRandomPrivKey();\n// Get public key from private\nconst publicKey = getPublicKey(privateKey);\n\n// Private key from hex string\nconst key = 'b244296d5907de9864c0b0d51f98a13c52890be0404e83f273144cd5b9960eed01';\nconst privateKey = createStacksPrivateKey(key);\n```\n\n## STX Token Transfer Transaction\n\n```javascript\nimport {\n  makeSTXTokenTransfer,\n  makeStandardSTXPostCondition,\n  broadcastTransaction,\n} from '@stacks/transactions';\nimport { StacksTestnet, StacksMainnet } from '@stacks/network';\nconst BigNum = require('bn.js');\n\n// for mainnet, use `StacksMainnet()`\nconst network = new StacksTestnet();\n\nconst txOptions = {\n  recipient: 'SP3FGQ8Z7JY9BWYZ5WM53E0M9NK7WHJF0691NZ159',\n  amount: new BigNum(12345),\n  senderKey: 'b244296d5907de9864c0b0d51f98a13c52890be0404e83f273144cd5b9960eed01',\n  network,\n  memo: 'test memo',\n  nonce: new BigNum(0), // set a nonce manually if you don't want builder to fetch from a Stacks node\n  fee: new BigNum(200), // set a tx fee if you don't want the builder to estimate\n  anchorMode: AnchorMode.Any\n};\n\nconst transaction = await makeSTXTokenTransfer(txOptions);\n\n// to see the raw serialized tx\nconst serializedTx = transaction.serialize().toString('hex');\n\n// broadcasting transaction to the specified network\nbroadcastTransaction(transaction, network);\n```\n\n## Smart Contract Deploy Transaction\n\n```javascript\nimport { makeContractDeploy, broadcastTransaction, AnchorMode } from '@stacks/transactions';\nimport { StacksTestnet, StacksMainnet } from '@stacks/network';\nconst BigNum = require('bn.js');\n\n// for mainnet, use `StacksMainnet()`\nconst network = new StacksTestnet();\n\nconst txOptions = {\n  contractName: 'contract_name',\n  codeBody: fs.readFileSync('/path/to/contract.clar').toString(),\n  senderKey: 'b244296d5907de9864c0b0d51f98a13c52890be0404e83f273144cd5b9960eed01',\n  network,\n};\n\nconst transaction = await makeContractDeploy(txOptions);\n\nbroadcastTransaction(transaction, network);\n```\n\n## Smart Contract Function Call\n\n```javascript\nimport { makeContractCall, BufferCV, broadcastTransaction, AnchorMode } from '@stacks/transactions';\nimport { StacksTestnet, StacksMainnet } from '@stacks/network';\nconst BigNum = require('bn.js');\n\n// for mainnet, use `StacksMainnet()`\nconst network = new StacksTestnet();\n\n// Add an optional post condition\n// See below for details on constructing post conditions\nconst postConditionAddress = 'SP2ZD731ANQZT6J4K3F5N8A40ZXWXC1XFXHVVQFKE';\nconst postConditionCode = FungibleConditionCode.GreaterEqual;\nconst postConditionAmount = new BigNum(1000000);\nconst postConditions = [\n  makeStandardSTXPostCondition(postConditionAddress, postConditionCode, postConditionAmount),\n];\n\nconst txOptions = {\n  contractAddress: 'SPBMRFRPPGCDE3F384WCJPK8PQJGZ8K9QKK7F59X',\n  contractName: 'contract_name',\n  functionName: 'contract_function',\n  functionArgs: [bufferCVFromString('foo')],\n  senderKey: 'b244296d5907de9864c0b0d51f98a13c52890be0404e83f273144cd5b9960eed01',\n  validateWithAbi: true,\n  network,\n  postConditions,\n  anchorMode: AnchorMode.Any,\n};\n\nconst transaction = await makeContractCall(txOptions);\n\nbroadcastTransaction(transaction, network);\n```\n\nIn this example we construct a `contract-call` transaction with a post condition. We have set the `validateWithAbi` option to `true`, so the `makeContractCall` builder will attempt to fetch this contracts ABI from the specified Stacks network, and validate that the provided functionArgs match what is described in the ABI. This should help you avoid constructing invalid contract-call transactions. If you would prefer to provide your own ABI instead of fetching it from the network, the `validateWithABI` option also accepts [ClarityABI](https://github.com/blockstack/stacks-transactions-js/blob/master/src/contract-abi.ts#L231) objects, which can be constructed from ABI files like so:\n\n```typescript\nimport { readFileSync } from 'fs';\n\nconst abi: ClarityAbi = JSON.parse(readFileSync('abi.json').toString());\n```\n\n## Sponsoring Transactions\n\nTo generate a sponsored transaction, first create and sign the transaction as the origin. The `sponsored` property in the options object must be set to true.\n\n```javascript\nimport { makeContractCall, BufferCV, AnchorMode } from '@stacks/transactions';\nconst BigNum = require('bn.js');\n\nconst txOptions = {\n  contractAddress: 'SPBMRFRPPGCDE3F384WCJPK8PQJGZ8K9QKK7F59X',\n  contractName: 'contract_name',\n  functionName: 'contract_function',\n  functionArgs: [bufferCVFromString('foo')],\n  senderKey: 'b244296d5907de9864c0b0d51f98a13c52890be0404e83f273144cd5b9960eed01',\n  validateWithAbi: true,\n  sponsored: true,\n  anchorMode: AnchorMode.Any,\n};\n\nconst transaction = await makeContractCall(txOptions);\nconst serializedTx = transaction.serialize().toString('hex');\n```\n\nThe serialized transaction can now be passed to the sponsoring party which will sign the sponsor portion of the transaction and set the fee.\n\n```javascript\nimport {\n  sponsorTransaction,\n  BufferReader,\n  deserializeTransaction,\n  broadcastTransaction,\n} from '@stacks/transactions';\nimport { StacksTestnet, StacksMainnet } from '@stacks/network';\nconst BigNum = require('bn.js');\n\nconst bufferReader = new BufferReader(Buffer.from(serializedTx));\nconst deserializedTx = deserializeTransaction(bufferReader);\nconst sponsorKey = '770287b9471081c8acd37d57190c7a70f0da2633311cc120853537362d32e67c01';\nconst fee = new BigNum(1000);\n\nconst sponsorOptions = {\n  transaction: deserializedTx,\n  sponsorPrivateKey: sponsorKey,\n  fee,\n};\n\nconst sponsoredTx = await sponsorTransaction(sponsorOptions);\n\n// for mainnet, use `StacksMainnet()`\nconst network = new StacksTestnet();\nbroadcastTransaction(sponsoredTx, network);\n```\n\n## Supporting multi-signature transactions\n\nTo generate a multi-sig transaction, first create an unsigned transaction.\nThe `numSignatures` and `publicKeys` properties in the options object must be set:\n\n```typescript\nimport {\n  makeUnsignedSTXTokenTransfer,\n  createStacksPrivateKey,\n  pubKeyfromPrivKey,\n  publicKeyToString,\n  TransactionSigner,\n  standardPrincipalCV,\n  BufferReader,\n  AnchorMode,\n} from '@stacks/transactions';\nconst BigNum = require('bn.js');\n\nconst recipient = standardPrincipalCV('SP3FGQ8...');\nconst amount = new BigNum(2500000);\nconst fee = new BigNum(0);\nconst nonce = new BigNum(0);\nconst memo = 'test memo';\n\n// private keys of the participants in the transaction\nconst privKeyStrings = ['6d430bb9...', '2a584d89...', 'd5200dee...'];\n\n// create private key objects from string array\nconst privKeys = privKeyStrings.map(createStacksPrivateKey);\n\n// corresponding public keys\nconst pubKeys = privKeyStrings.map(pubKeyfromPrivKey);\n\n// create public key string array from objects\nconst pubKeyStrings = pubKeys.map(publicKeyToString);\n\nconst transaction = await makeUnsignedSTXTokenTransfer({\n  recipient,\n  amount,\n  fee,\n  nonce,\n  memo,\n  numSignatures: 2, // number of signature required\n  publicKeys: pubKeyStrings, // public key string array with >= numSignatures elements\n  anchorMode: AnchorMode.Any,\n});\n\nconst serializedTx = transaction.serialize();\n```\n\nThis transaction payload can be passed along to other participants to sign. In addition to\nmeeting the numSignatures requirement, the public keys of the parties who did not sign the\ntransaction must be appended to the signature.\n\n```typescript\n// deserialize and sign transaction\nconst bufferReader = new BufferReader(serializedTx);\nconst deserializedTx = deserializeTransaction(bufferReader);\n\nconst signer = new TransactionSigner(deserializedTx);\n\n// first signature\nsigner.signOrigin(privKeys[0]);\n\n// second signature\nsigner.signOrigin(privKeys[1]);\n\n// after meeting the numSignatures requirement, the public\n// keys of the participants who did not sign must be appended\nsigner.appendOrigin(pubKeys[2]);\n\n// the serialized multi-sig tx\nconst serializedSignedTx = deserializedTx.serialize();\n```\n\n## Calling Read-only Contract Functions\n\nRead-only contract functions can be called without generating or broadcasting a transaction. Instead it works via a direct API call to a Stacks node.\n\n```typescript\nconst contractAddress = 'ST3KC0MTNW34S1ZXD36JYKFD3JJMWA01M55DSJ4JE';\nconst contractName = 'kv-store';\nconst functionName = 'get-value';\nconst buffer = bufferCVFromString('foo');\nconst network = new StacksTestnet();\nconst senderAddress = 'ST2F4BK4GZH6YFBNHYDDGN4T1RKBA7DA1BJZPJEJJ';\n\nconst options = {\n  contractAddress,\n  contractName,\n  functionName,\n  functionArgs: [buffer],\n  network,\n  senderAddress,\n};\n\nconst result = await callReadOnlyFunction(options);\n```\n\n## Constructing Clarity Values\n\nBuilding transactions that call functions in deployed clarity contracts requires you to construct valid Clarity Values to pass to the function as arguments. The [Clarity type system](https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-002-smart-contract-language.md#clarity-type-system) contains the following types:\n\n- `(tuple (key-name-0 key-type-0) (key-name-1 key-type-1) ...)`\n  - a typed tuple with named fields.\n- `(list max-len entry-type)`\n  - a list of maximum length max-len, with entries of type entry-type\n- `(response ok-type err-type)`\n  - object used by public functions to commit their changes or abort. May be returned or used by other functions as well, however, only public functions have the commit/abort behavior.\n- `(optional some-type)`\n  - an option type for objects that can either be (some value) or none\n- `(buff max-len)`\n  - byte buffer or maximum length max-len.\n- `principal`\n  - object representing a principal (whether a contract principal or standard principal).\n- `bool`\n  - boolean value ('true or 'false)\n- `int`\n  - signed 128-bit integer\n- `uint`\n  - unsigned 128-bit integer\n\nThis library contains Typescript types and classes that map to the Clarity types, in order to make it easy to construct well-typed Clarity values in Javascript. These types all extend the abstract class `ClarityValue`.\n\n```javascript\n// construct boolean clarity values\nconst t = trueCV();\nconst f = falseCV();\n\n// construct optional clarity values\nconst nothing = noneCV();\nconst something = someCV(t);\n\n// construct a buffer clarity value from an existing Buffer\nconst buffer = Buffer.from('foo');\nconst bufCV = bufferCV(buffer);\n\n// construct signed and unsigned integer clarity values\nconst i = intCV(-10);\nconst u = uintCV(10);\n\n// construct principal clarity values\nconst address = 'SP2JXKMSH007NPYAQHKJPQMAQYAD90NQGTVJVQ02B';\nconst contractName = 'contract-name';\nconst spCV = standardPrincipalCV(address);\nconst cpCV = contractPrincipalCV(address, contractName);\n\n// construct response clarity values\nconst errCV = responseErrorCV(trueCV());\nconst okCV = responseOkCV(falseCV());\n\n// construct tuple clarity values\nconst tupCV = tupleCV({\n  a: intCV(1),\n  b: trueCV(),\n  c: falseCV(),\n});\n\n// construct list clarity values\nconst l = listCV([trueCV(), falseCV()]);\n```\n\nIf you develop in Typescript, the type checker can help prevent you from creating wrongly-typed Clarity values. For example, the following code won't compile since in Clarity lists are homogeneous, meaning they can only contain values of a single type. It is important to include the type variable `BooleanCV` in this example, otherwise the typescript type checker won't know which type the list is of and won't enforce homogeneity.\n\n```typescript\nconst l = listCV<BooleanCV>([trueCV(), intCV(1)]);\n```\n\n## Post Conditions\n\nThree types of post conditions can be added to transactions:\n\n1. STX post condition\n2. Fungible token post condition\n3. Non-Fungible token post condition\n\nFor details see: https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#transaction-post-conditions\n\n### STX post condition\n\n```javascript\n// With a standard principal\nconst postConditionAddress = 'SP2ZD731ANQZT6J4K3F5N8A40ZXWXC1XFXHVVQFKE';\nconst postConditionCode = FungibleConditionCode.GreaterEqual;\nconst postConditionAmount = new BigNum(12345);\n\nconst standardSTXPostCondition = makeStandardSTXPostCondition(\n  postConditionAddress,\n  postConditionCode,\n  postConditionAmount\n);\n\n// With a contract principal\nconst contractAddress = 'SPBMRFRPPGCDE3F384WCJPK8PQJGZ8K9QKK7F59X';\nconst contractName = 'test-contract';\n\nconst contractSTXPostCondition = makeContractSTXPostCondition(\n  contractAddress,\n  contractName,\n  postConditionCode,\n  postConditionAmount\n);\n```\n\n### Fungible token post condition\n\n```javascript\n// With a standard principal\nconst postConditionAddress = 'SP2ZD731ANQZT6J4K3F5N8A40ZXWXC1XFXHVVQFKE';\nconst postConditionCode = FungibleConditionCode.GreaterEqual;\nconst postConditionAmount = new BigNum(12345);\nconst assetAddress = 'SP62M8MEFH32WGSB7XSF9WJZD7TQB48VQB5ANWSJ';\nconst assetContractName = 'test-asset-contract';\nconst fungibleAssetInfo = createAssetInfo(assetAddress, assetContractName);\n\nconst standardFungiblePostCondition = makeStandardFungiblePostCondition(\n  postConditionAddress,\n  postConditionCode,\n  postConditionAmount,\n  fungibleAssetInfo\n);\n\n// With a contract principal\nconst contractAddress = 'SPBMRFRPPGCDE3F384WCJPK8PQJGZ8K9QKK7F59X';\nconst contractName = 'test-contract';\nconst assetAddress = 'SP62M8MEFH32WGSB7XSF9WJZD7TQB48VQB5ANWSJ';\nconst assetContractName = 'test-asset-contract';\nconst fungibleAssetInfo = createAssetInfo(assetAddress, assetContractName);\n\nconst contractFungiblePostCondition = makeContractFungiblePostCondition(\n  contractAddress,\n  contractName,\n  postConditionCode,\n  postConditionAmount,\n  fungibleAssetInfo\n);\n```\n\n### Non-fungible token post condition\n\n```javascript\n// With a standard principal\nconst postConditionAddress = 'SP2ZD731ANQZT6J4K3F5N8A40ZXWXC1XFXHVVQFKE';\nconst postConditionCode = NonFungibleConditionCode.Owns;\nconst assetAddress = 'SP62M8MEFH32WGSB7XSF9WJZD7TQB48VQB5ANWSJ';\nconst assetContractName = 'test-asset-contract';\nconst assetName = 'test-asset';\nconst tokenAssetName = 'test-token-asset';\nconst nonFungibleAssetInfo = createAssetInfo(assetAddress, assetContractName, assetName);\n\nconst standardNonFungiblePostCondition = makeStandardNonFungiblePostCondition(\n  postConditionAddress,\n  postConditionCode,\n  nonFungibleAssetInfo,\n  tokenAssetName\n);\n\n// With a contract principal\nconst contractAddress = 'SPBMRFRPPGCDE3F384WCJPK8PQJGZ8K9QKK7F59X';\nconst contractName = 'test-contract';\n\nconst contractNonFungiblePostCondition = makeContractNonFungiblePostCondition(\n  contractAddress,\n  contractName,\n  postConditionCode,\n  nonFungibleAssetInfo,\n  tokenAssetName\n);\n```\n\n## Helper functions\n\n### Conversion of Clarity Values to JSON\n\nClarity Values represent values of Clarity contracts. If a JSON format is required the helper function `cvToJSON` can be used.\n\n```\ncvToJSON(hexToCV(tx.tx_result.hex))\n```\n"
			},
			"originalName": "transactions/src",
			"children": [
				{
					"id": 3475,
					"name": "randomBytes",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 11,
							"character": 35
						}
					],
					"target": 1382
				},
				{
					"id": 3102,
					"name": "AddressHashMode",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3103,
							"name": "SerializeP2PKH",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "SingleSigHashMode - hash160(public-key), same as bitcoin's p2pkh"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 88,
									"character": 16
								}
							],
							"defaultValue": "0"
						},
						{
							"id": 3104,
							"name": "SerializeP2SH",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "MultiSigHashMode - hash160(multisig-redeem-script), same as bitcoin's multisig p2sh"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 90,
									"character": 15
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 3105,
							"name": "SerializeP2WPKH",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "SingleSigHashMode - hash160(segwit-program-00(p2pkh)), same as bitcoin's p2sh-p2wpkh"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 92,
									"character": 17
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 3106,
							"name": "SerializeP2WSH",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "MultiSigHashMode - hash160(segwit-program-00(public-keys)), same as bitcoin's p2sh-p2wsh"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 94,
									"character": 16
								}
							],
							"defaultValue": "3"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3103,
								3104,
								3105,
								3106
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 84,
							"character": 20
						}
					]
				},
				{
					"id": 3109,
					"name": "AddressVersion",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3111,
							"name": "MainnetMultiSig",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 102,
									"character": 17
								}
							],
							"defaultValue": "20"
						},
						{
							"id": 3110,
							"name": "MainnetSingleSig",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 101,
									"character": 18
								}
							],
							"defaultValue": "22"
						},
						{
							"id": 3113,
							"name": "TestnetMultiSig",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 104,
									"character": 17
								}
							],
							"defaultValue": "21"
						},
						{
							"id": 3112,
							"name": "TestnetSingleSig",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 103,
									"character": 18
								}
							],
							"defaultValue": "26"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3111,
								3110,
								3113,
								3112
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 100,
							"character": 19
						}
					]
				},
				{
					"id": 3081,
					"name": "AnchorMode",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"shortText": "How a transaction should get appended to the Stacks blockchain.",
						"text": "In the Stacks blockchain, there are two kinds of blocks: anchored\nblocks and streaming microblocks. A transactions AnchorMode specifies\nwhich kind of block it should be included in.\n\nFor more information about the kinds of Stacks blocks and the various\nAnchorModes, check out {@link https://github.com/stacksgov/sips/blob/main/sips/sip-001/sip-001-burn-election.md SIP 001} and\n{@link https://github.com/stacksgov/sips/blob/main/sips/sip-005/sip-005-blocks-and-transactions.md SIP 005}\n"
					},
					"children": [
						{
							"id": 3084,
							"name": "Any",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "The leader can choose where to include the transaction (anchored block or microblock)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 58,
									"character": 5
								}
							],
							"defaultValue": "3"
						},
						{
							"id": 3083,
							"name": "OffChainOnly",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "The transaction MUST be included in a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 56,
									"character": 14
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 3082,
							"name": "OnChainOnly",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "The transaction MUST be included in an anchored block"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 54,
									"character": 13
								}
							],
							"defaultValue": "1"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3084,
								3083,
								3082
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 52,
							"character": 15
						}
					]
				},
				{
					"id": 3126,
					"name": "AssetType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3128,
							"name": "Fungible",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 133,
									"character": 10
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 3129,
							"name": "NonFungible",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 134,
									"character": 13
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 3127,
							"name": "STX",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 132,
									"character": 5
								}
							],
							"defaultValue": "0"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3128,
								3129,
								3127
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 131,
							"character": 14
						}
					]
				},
				{
					"id": 3099,
					"name": "AuthType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3101,
							"name": "Sponsored",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 81,
									"character": 11
								}
							],
							"defaultValue": "5"
						},
						{
							"id": 3100,
							"name": "Standard",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 80,
									"character": 10
								}
							],
							"defaultValue": "4"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3101,
								3100
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 79,
							"character": 13
						}
					]
				},
				{
					"id": 3060,
					"name": "ChainID",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"shortText": "Unsigned 32-bit integer"
					},
					"children": [
						{
							"id": 3062,
							"name": "Mainnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 6,
									"character": 9
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 3061,
							"name": "Testnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 5,
									"character": 9
								}
							],
							"defaultValue": "2147483648"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3062,
								3061
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 4,
							"character": 12
						}
					]
				},
				{
					"id": 3210,
					"name": "ClarityAbiTypeId",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3213,
							"name": "ClarityAbiTypeBool",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 60,
									"character": 20
								}
							],
							"defaultValue": "3"
						},
						{
							"id": 3216,
							"name": "ClarityAbiTypeBuffer",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 63,
									"character": 22
								}
							],
							"defaultValue": "6"
						},
						{
							"id": 3212,
							"name": "ClarityAbiTypeInt128",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 59,
									"character": 22
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 3220,
							"name": "ClarityAbiTypeList",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 67,
									"character": 20
								}
							],
							"defaultValue": "10"
						},
						{
							"id": 3215,
							"name": "ClarityAbiTypeNone",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 62,
									"character": 20
								}
							],
							"defaultValue": "5"
						},
						{
							"id": 3218,
							"name": "ClarityAbiTypeOptional",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 65,
									"character": 24
								}
							],
							"defaultValue": "8"
						},
						{
							"id": 3214,
							"name": "ClarityAbiTypePrincipal",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 61,
									"character": 25
								}
							],
							"defaultValue": "4"
						},
						{
							"id": 3217,
							"name": "ClarityAbiTypeResponse",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 64,
									"character": 24
								}
							],
							"defaultValue": "7"
						},
						{
							"id": 3221,
							"name": "ClarityAbiTypeStringAscii",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 68,
									"character": 27
								}
							],
							"defaultValue": "11"
						},
						{
							"id": 3222,
							"name": "ClarityAbiTypeStringUtf8",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 69,
									"character": 26
								}
							],
							"defaultValue": "12"
						},
						{
							"id": 3223,
							"name": "ClarityAbiTypeTraitReference",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 70,
									"character": 30
								}
							],
							"defaultValue": "13"
						},
						{
							"id": 3219,
							"name": "ClarityAbiTypeTuple",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 66,
									"character": 21
								}
							],
							"defaultValue": "9"
						},
						{
							"id": 3211,
							"name": "ClarityAbiTypeUInt128",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 58,
									"character": 23
								}
							],
							"defaultValue": "1"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3213,
								3216,
								3212,
								3220,
								3215,
								3218,
								3214,
								3217,
								3221,
								3222,
								3223,
								3219,
								3211
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 57,
							"character": 28
						}
					]
				},
				{
					"id": 2414,
					"name": "ClarityType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"shortText": "Type IDs corresponding to each of the Clarity value types as described here:\n{@link https://github.com/blockstack/blockstack-core/blob/sip/sip-005/sip/sip-005-blocks-and-transactions.md#clarity-value-representation}"
					},
					"children": [
						{
							"id": 2419,
							"name": "BoolFalse",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 31,
									"character": 11
								}
							],
							"defaultValue": "4"
						},
						{
							"id": 2418,
							"name": "BoolTrue",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 30,
									"character": 10
								}
							],
							"defaultValue": "3"
						},
						{
							"id": 2417,
							"name": "Buffer",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 29,
									"character": 8
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 2415,
							"name": "Int",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 27,
									"character": 5
								}
							],
							"defaultValue": "0"
						},
						{
							"id": 2426,
							"name": "List",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 38,
									"character": 6
								}
							],
							"defaultValue": "11"
						},
						{
							"id": 2424,
							"name": "OptionalNone",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 36,
									"character": 14
								}
							],
							"defaultValue": "9"
						},
						{
							"id": 2425,
							"name": "OptionalSome",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 37,
									"character": 14
								}
							],
							"defaultValue": "10"
						},
						{
							"id": 2421,
							"name": "PrincipalContract",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 33,
									"character": 19
								}
							],
							"defaultValue": "6"
						},
						{
							"id": 2420,
							"name": "PrincipalStandard",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 32,
									"character": 19
								}
							],
							"defaultValue": "5"
						},
						{
							"id": 2423,
							"name": "ResponseErr",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 35,
									"character": 13
								}
							],
							"defaultValue": "8"
						},
						{
							"id": 2422,
							"name": "ResponseOk",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 34,
									"character": 12
								}
							],
							"defaultValue": "7"
						},
						{
							"id": 2428,
							"name": "StringASCII",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 40,
									"character": 13
								}
							],
							"defaultValue": "13"
						},
						{
							"id": 2429,
							"name": "StringUTF8",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 41,
									"character": 12
								}
							],
							"defaultValue": "14"
						},
						{
							"id": 2427,
							"name": "Tuple",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 39,
									"character": 7
								}
							],
							"defaultValue": "12"
						},
						{
							"id": 2416,
							"name": "UInt",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 28,
									"character": 6
								}
							],
							"defaultValue": "1"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								2419,
								2418,
								2417,
								2415,
								2426,
								2424,
								2425,
								2421,
								2420,
								2423,
								2422,
								2428,
								2429,
								2427,
								2416
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/clarityValue.ts",
							"line": 26,
							"character": 23
						}
					]
				},
				{
					"id": 3117,
					"name": "FungibleConditionCode",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3118,
							"name": "Equal",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 113,
									"character": 7
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 3119,
							"name": "Greater",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 114,
									"character": 9
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 3120,
							"name": "GreaterEqual",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 115,
									"character": 14
								}
							],
							"defaultValue": "3"
						},
						{
							"id": 3121,
							"name": "Less",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 116,
									"character": 6
								}
							],
							"defaultValue": "4"
						},
						{
							"id": 3122,
							"name": "LessEqual",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 117,
									"character": 11
								}
							],
							"defaultValue": "5"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3118,
								3119,
								3120,
								3121,
								3122
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 112,
							"character": 26
						}
					]
				},
				{
					"id": 3123,
					"name": "NonFungibleConditionCode",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3124,
							"name": "DoesNotOwn",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 121,
									"character": 12
								}
							],
							"defaultValue": "16"
						},
						{
							"id": 3125,
							"name": "Owns",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 122,
									"character": 6
								}
							],
							"defaultValue": "17"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3124,
								3125
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 120,
							"character": 29
						}
					]
				},
				{
					"id": 3075,
					"name": "PayloadType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3080,
							"name": "Coinbase",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 38,
									"character": 10
								}
							],
							"defaultValue": "4"
						},
						{
							"id": 3078,
							"name": "ContractCall",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 36,
									"character": 14
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 3079,
							"name": "PoisonMicroblock",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 37,
									"character": 18
								}
							],
							"defaultValue": "3"
						},
						{
							"id": 3077,
							"name": "SmartContract",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 35,
									"character": 15
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 3076,
							"name": "TokenTransfer",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 34,
									"character": 15
								}
							],
							"defaultValue": "0"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3080,
								3078,
								3079,
								3077,
								3076
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 33,
							"character": 16
						}
					]
				},
				{
					"id": 3088,
					"name": "PostConditionMode",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3089,
							"name": "Allow",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 69,
									"character": 7
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 3090,
							"name": "Deny",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 70,
									"character": 6
								}
							],
							"defaultValue": "2"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3089,
								3090
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 68,
							"character": 22
						}
					]
				},
				{
					"id": 3095,
					"name": "PostConditionPrincipalID",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3098,
							"name": "Contract",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 128,
									"character": 10
								}
							],
							"defaultValue": "3"
						},
						{
							"id": 3096,
							"name": "Origin",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 126,
									"character": 8
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 3097,
							"name": "Standard",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 127,
									"character": 10
								}
							],
							"defaultValue": "2"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3098,
								3096,
								3097
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 125,
							"character": 29
						}
					]
				},
				{
					"id": 3091,
					"name": "PostConditionType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3093,
							"name": "Fungible",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 75,
									"character": 10
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 3094,
							"name": "NonFungible",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 76,
									"character": 13
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 3092,
							"name": "STX",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 74,
									"character": 5
								}
							],
							"defaultValue": "0"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3093,
								3094,
								3092
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 73,
							"character": 22
						}
					]
				},
				{
					"id": 3114,
					"name": "PubKeyEncoding",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3115,
							"name": "Compressed",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 108,
									"character": 12
								}
							],
							"defaultValue": "0"
						},
						{
							"id": 3116,
							"name": "Uncompressed",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 109,
									"character": 14
								}
							],
							"defaultValue": "1"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3115,
								3116
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 107,
							"character": 19
						}
					]
				},
				{
					"id": 3063,
					"name": "StacksMessageType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3064,
							"name": "Address",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 20,
									"character": 9
								}
							],
							"defaultValue": "0"
						},
						{
							"id": 3068,
							"name": "AssetInfo",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 24,
									"character": 11
								}
							],
							"defaultValue": "4"
						},
						{
							"id": 3071,
							"name": "LengthPrefixedList",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 27,
									"character": 20
								}
							],
							"defaultValue": "7"
						},
						{
							"id": 3066,
							"name": "LengthPrefixedString",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 22,
									"character": 22
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 3067,
							"name": "MemoString",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 23,
									"character": 12
								}
							],
							"defaultValue": "3"
						},
						{
							"id": 3073,
							"name": "MessageSignature",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 29,
									"character": 18
								}
							],
							"defaultValue": "9"
						},
						{
							"id": 3072,
							"name": "Payload",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 28,
									"character": 9
								}
							],
							"defaultValue": "8"
						},
						{
							"id": 3069,
							"name": "PostCondition",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 25,
									"character": 15
								}
							],
							"defaultValue": "5"
						},
						{
							"id": 3065,
							"name": "Principal",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 21,
									"character": 11
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 3070,
							"name": "PublicKey",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 26,
									"character": 11
								}
							],
							"defaultValue": "6"
						},
						{
							"id": 3074,
							"name": "TransactionAuthField",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 30,
									"character": 22
								}
							],
							"defaultValue": "10"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3064,
								3068,
								3071,
								3066,
								3067,
								3073,
								3072,
								3069,
								3065,
								3070,
								3074
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 19,
							"character": 22
						}
					]
				},
				{
					"id": 3085,
					"name": "TransactionVersion",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3086,
							"name": "Mainnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 62,
									"character": 9
								}
							],
							"defaultValue": "0"
						},
						{
							"id": 3087,
							"name": "Testnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 63,
									"character": 9
								}
							],
							"defaultValue": "128"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3086,
								3087
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 61,
							"character": 23
						}
					]
				},
				{
					"id": 3130,
					"name": "TxRejectedReason",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3144,
							"name": "BadAddressVersionByte",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 151,
									"character": 23
								}
							],
							"defaultValue": "\"BadAddressVersionByte\""
						},
						{
							"id": 3139,
							"name": "BadFunctionArgument",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 146,
									"character": 21
								}
							],
							"defaultValue": "\"BadFunctionArgument\""
						},
						{
							"id": 3135,
							"name": "BadNonce",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 142,
									"character": 10
								}
							],
							"defaultValue": "\"BadNonce\""
						},
						{
							"id": 3140,
							"name": "ContractAlreadyExists",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 147,
									"character": 23
								}
							],
							"defaultValue": "\"ContractAlreadyExists\""
						},
						{
							"id": 3132,
							"name": "Deserialization",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 139,
									"character": 17
								}
							],
							"defaultValue": "\"Deserialization\""
						},
						{
							"id": 3134,
							"name": "FeeTooLow",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 141,
									"character": 11
								}
							],
							"defaultValue": "\"FeeTooLow\""
						},
						{
							"id": 3145,
							"name": "NoCoinbaseViaMempool",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 152,
									"character": 22
								}
							],
							"defaultValue": "\"NoCoinbaseViaMempool\""
						},
						{
							"id": 3137,
							"name": "NoSuchContract",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 144,
									"character": 16
								}
							],
							"defaultValue": "\"NoSuchContract\""
						},
						{
							"id": 3138,
							"name": "NoSuchPublicFunction",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 145,
									"character": 22
								}
							],
							"defaultValue": "\"NoSuchPublicFunction\""
						},
						{
							"id": 3136,
							"name": "NotEnoughFunds",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 143,
									"character": 16
								}
							],
							"defaultValue": "\"NotEnoughFunds\""
						},
						{
							"id": 3142,
							"name": "PoisonMicroblockHasUnknownPubKeyHash",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 149,
									"character": 38
								}
							],
							"defaultValue": "\"PoisonMicroblockHasUnknownPubKeyHash\""
						},
						{
							"id": 3143,
							"name": "PoisonMicroblockIsInvalid",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 150,
									"character": 27
								}
							],
							"defaultValue": "\"PoisonMicroblockIsInvalid\""
						},
						{
							"id": 3141,
							"name": "PoisonMicroblocksDoNotConflict",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 148,
									"character": 32
								}
							],
							"defaultValue": "\"PoisonMicroblocksDoNotConflict\""
						},
						{
							"id": 3131,
							"name": "Serialization",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 138,
									"character": 15
								}
							],
							"defaultValue": "\"Serialization\""
						},
						{
							"id": 3147,
							"name": "ServerFailureDatabase",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 154,
									"character": 23
								}
							],
							"defaultValue": "\"ServerFailureDatabase\""
						},
						{
							"id": 3146,
							"name": "ServerFailureNoSuchChainTip",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 153,
									"character": 29
								}
							],
							"defaultValue": "\"ServerFailureNoSuchChainTip\""
						},
						{
							"id": 3148,
							"name": "ServerFailureOther",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 155,
									"character": 20
								}
							],
							"defaultValue": "\"ServerFailureOther\""
						},
						{
							"id": 3133,
							"name": "SignatureValidation",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 140,
									"character": 21
								}
							],
							"defaultValue": "\"SignatureValidation\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3144,
								3139,
								3135,
								3140,
								3132,
								3134,
								3145,
								3137,
								3138,
								3136,
								3142,
								3143,
								3141,
								3131,
								3147,
								3146,
								3148,
								3133
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 137,
							"character": 21
						}
					]
				},
				{
					"id": 2245,
					"name": "Authorization",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 2250,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2251,
									"name": "new Authorization",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2252,
											"name": "authType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 3099,
												"name": "AuthType"
											}
										},
										{
											"id": 2253,
											"name": "spendingConditions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 2353,
												"name": "SpendingCondition"
											}
										},
										{
											"id": 2254,
											"name": "sponsorSpendingCondition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 2353,
												"name": "SpendingCondition"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2245,
										"name": "Authorization"
									},
									"overwrites": {
										"type": "reference",
										"name": "Deserializable.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Deserializable.constructor"
							}
						},
						{
							"id": 2255,
							"name": "authType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 481,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 3099,
								"name": "AuthType"
							}
						},
						{
							"id": 2256,
							"name": "spendingCondition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 482,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 2353,
								"name": "SpendingCondition"
							}
						},
						{
							"id": 2257,
							"name": "sponsorSpendingCondition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 483,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"id": 2353,
								"name": "SpendingCondition"
							}
						},
						{
							"id": 2279,
							"name": "deserialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 593,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2280,
									"name": "deserialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2281,
											"name": "bufferReader",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2200,
												"name": "BufferReader"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "Deserializable.deserialize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Deserializable.deserialize"
							}
						},
						{
							"id": 2263,
							"name": "getFee",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 526,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2264,
									"name": "getFee",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "BN"
											},
											{
												"type": "literal",
												"value": 0
											}
										]
									}
								}
							]
						},
						{
							"id": 2258,
							"name": "intoInitialSighashAuth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 496,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 2259,
									"name": "intoInitialSighashAuth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2245,
										"name": "Authorization"
									}
								}
							]
						},
						{
							"id": 2277,
							"name": "serialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 560,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2278,
									"name": "serialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									},
									"overwrites": {
										"type": "reference",
										"name": "Deserializable.serialize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Deserializable.serialize"
							}
						},
						{
							"id": 2260,
							"name": "setFee",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 515,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2261,
									"name": "setFee",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2262,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2265,
							"name": "setNonce",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 537,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 2266,
									"name": "setNonce",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2267,
											"name": "nonce",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2271,
							"name": "setSponsor",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 545,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 2272,
									"name": "setSponsor",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2273,
											"name": "sponsorSpendingCondition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2353,
												"name": "SpendingCondition"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2268,
							"name": "setSponsorNonce",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 541,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 2269,
									"name": "setSponsorNonce",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2270,
											"name": "nonce",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2274,
							"name": "verifyOrigin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 549,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 2275,
									"name": "verifyOrigin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2276,
											"name": "initialSigHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 2246,
							"name": "deserialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 42,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 2247,
									"name": "deserialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2248,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "Deserializable"
											}
										}
									],
									"parameters": [
										{
											"id": 2249,
											"name": "bufferReader",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2200,
												"name": "BufferReader"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Deserializable.deserialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Deserializable.deserialize"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2250
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2255,
								2256,
								2257
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2279,
								2263,
								2258,
								2277,
								2260,
								2265,
								2271,
								2268,
								2274,
								2246
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 480,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Deserializable"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2282,
							"name": "StandardAuthorization"
						},
						{
							"type": "reference",
							"id": 2317,
							"name": "SponsoredAuthorization"
						}
					]
				},
				{
					"id": 3476,
					"name": "BufferArray",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 3477,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3478,
									"name": "new BufferArray",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3476,
										"name": "BufferArray"
									}
								}
							]
						},
						{
							"id": 3479,
							"name": "_value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/utils.ts",
									"line": 14,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Buffer"
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 3480,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/utils.ts",
									"line": 15,
									"character": 11
								}
							],
							"getSignature": [
								{
									"id": 3481,
									"name": "value",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Buffer"
										}
									}
								}
							]
						},
						{
							"id": 3488,
							"name": "appendByte",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/utils.ts",
									"line": 25,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3489,
									"name": "appendByte",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3490,
											"name": "octet",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3482,
							"name": "appendHexString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/utils.ts",
									"line": 18,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 3483,
									"name": "appendHexString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3484,
											"name": "hexString",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3491,
							"name": "concatBuffer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/utils.ts",
									"line": 32,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 3492,
									"name": "concatBuffer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							]
						},
						{
							"id": 3485,
							"name": "push",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/utils.ts",
									"line": 22,
									"character": 6
								}
							],
							"signatures": [
								{
									"id": 3486,
									"name": "push",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3487,
											"name": "buffer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3477
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3479
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3480
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3488,
								3482,
								3491,
								3485
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 13,
							"character": 24
						}
					]
				},
				{
					"id": 2200,
					"name": "BufferReader",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 2204,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2205,
									"name": "new BufferReader",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2206,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Buffer"
													},
													{
														"type": "reference",
														"name": "SmartBufferOptions"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2200,
										"name": "BufferReader"
									}
								}
							]
						},
						{
							"id": 2207,
							"name": "smartBuffer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 47,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "SmartBuffer"
							}
						},
						{
							"id": 2234,
							"name": "internalBuffer",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 107,
									"character": 20
								}
							],
							"getSignature": [
								{
									"id": 2235,
									"name": "internalBuffer",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							]
						},
						{
							"id": 2230,
							"name": "readOffset",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 99,
									"character": 16
								}
							],
							"getSignature": [
								{
									"id": 2231,
									"name": "readOffset",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"setSignature": [
								{
									"id": 2232,
									"name": "readOffset",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 2233,
											"name": "val",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2224,
							"name": "readBigUInt64BE",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 91,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 2225,
									"name": "readBigUInt64BE",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							]
						},
						{
							"id": 2221,
							"name": "readBigUIntBE",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 84,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 2222,
									"name": "readBigUIntBE",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2223,
											"name": "length",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							]
						},
						{
							"id": 2218,
							"name": "readBigUIntLE",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 77,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 2219,
									"name": "readBigUIntLE",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2220,
											"name": "length",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							]
						},
						{
							"id": 2208,
							"name": "readBuffer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 61,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 2209,
									"name": "readBuffer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2210,
											"name": "length",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							]
						},
						{
							"id": 2226,
							"name": "readString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 95,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 2227,
									"name": "readString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2228,
											"name": "arg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"name": "BufferEncoding"
													}
												]
											}
										},
										{
											"id": 2229,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "BufferEncoding"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 2216,
							"name": "readUInt16BE",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 73,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 2217,
									"name": "readUInt16BE",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 2211,
							"name": "readUInt32BE",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 65,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 2212,
									"name": "readUInt32BE",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2213,
											"name": "offset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 2214,
							"name": "readUInt8",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 69,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2215,
									"name": "readUInt8",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 2236,
							"name": "readUInt8Enum",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 111,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 2237,
									"name": "readUInt8Enum",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2238,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2239,
											"name": "TEnumValue",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"parameters": [
										{
											"id": 2240,
											"name": "enumVariable",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "mapped",
												"parameter": "key",
												"parameterType": {
													"type": "intrinsic",
													"name": "string"
												},
												"templateType": {
													"type": "reference",
													"name": "TEnumValue"
												}
											}
										},
										{
											"id": 2241,
											"name": "invalidEnumErrorFormatter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2242,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 2243,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 2244,
																	"name": "val",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Error"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "TEnumValue"
									}
								}
							]
						},
						{
							"id": 2201,
							"name": "fromBuffer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 49,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 2202,
									"name": "fromBuffer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2203,
											"name": "buffer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2200,
										"name": "BufferReader"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2204
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2207
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								2234,
								2230
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2224,
								2221,
								2218,
								2208,
								2226,
								2216,
								2211,
								2214,
								2236,
								2201
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/bufferReader.ts",
							"line": 46,
							"character": 25
						}
					]
				},
				{
					"id": 2317,
					"name": "SponsoredAuthorization",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 2322,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2323,
									"name": "new SponsoredAuthorization",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2324,
											"name": "originSpendingCondition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2353,
												"name": "SpendingCondition"
											}
										},
										{
											"id": 2325,
											"name": "sponsorSpendingCondition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 2353,
												"name": "SpendingCondition"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2317,
										"name": "SponsoredAuthorization"
									},
									"overwrites": {
										"type": "reference",
										"id": 2251,
										"name": "Authorization.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2250,
								"name": "Authorization.constructor"
							}
						},
						{
							"id": 2326,
							"name": "authType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 481,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 3099,
								"name": "AuthType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2255,
								"name": "Authorization.authType"
							}
						},
						{
							"id": 2327,
							"name": "spendingCondition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 482,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 2353,
								"name": "SpendingCondition"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2256,
								"name": "Authorization.spendingCondition"
							}
						},
						{
							"id": 2328,
							"name": "sponsorSpendingCondition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 483,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"id": 2353,
								"name": "SpendingCondition"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2257,
								"name": "Authorization.sponsorSpendingCondition"
							}
						},
						{
							"id": 2350,
							"name": "deserialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 593,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2351,
									"name": "deserialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2352,
											"name": "bufferReader",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2200,
												"name": "BufferReader"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2280,
										"name": "Authorization.deserialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2279,
								"name": "Authorization.deserialize"
							}
						},
						{
							"id": 2334,
							"name": "getFee",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 526,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2335,
									"name": "getFee",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "BN"
											},
											{
												"type": "literal",
												"value": 0
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2264,
										"name": "Authorization.getFee"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2263,
								"name": "Authorization.getFee"
							}
						},
						{
							"id": 2329,
							"name": "intoInitialSighashAuth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 496,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 2330,
									"name": "intoInitialSighashAuth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2245,
										"name": "Authorization"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2259,
										"name": "Authorization.intoInitialSighashAuth"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2258,
								"name": "Authorization.intoInitialSighashAuth"
							}
						},
						{
							"id": 2348,
							"name": "serialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 560,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2349,
									"name": "serialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2278,
										"name": "Authorization.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2277,
								"name": "Authorization.serialize"
							}
						},
						{
							"id": 2331,
							"name": "setFee",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 515,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2332,
									"name": "setFee",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2333,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2261,
										"name": "Authorization.setFee"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2260,
								"name": "Authorization.setFee"
							}
						},
						{
							"id": 2336,
							"name": "setNonce",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 537,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 2337,
									"name": "setNonce",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2338,
											"name": "nonce",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2266,
										"name": "Authorization.setNonce"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2265,
								"name": "Authorization.setNonce"
							}
						},
						{
							"id": 2342,
							"name": "setSponsor",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 545,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 2343,
									"name": "setSponsor",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2344,
											"name": "sponsorSpendingCondition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2353,
												"name": "SpendingCondition"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2272,
										"name": "Authorization.setSponsor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2271,
								"name": "Authorization.setSponsor"
							}
						},
						{
							"id": 2339,
							"name": "setSponsorNonce",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 541,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 2340,
									"name": "setSponsorNonce",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2341,
											"name": "nonce",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2269,
										"name": "Authorization.setSponsorNonce"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2268,
								"name": "Authorization.setSponsorNonce"
							}
						},
						{
							"id": 2345,
							"name": "verifyOrigin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 549,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 2346,
									"name": "verifyOrigin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2347,
											"name": "initialSigHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2275,
										"name": "Authorization.verifyOrigin"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2274,
								"name": "Authorization.verifyOrigin"
							}
						},
						{
							"id": 2318,
							"name": "deserialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 42,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 2319,
									"name": "deserialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2320,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "Deserializable"
											}
										}
									],
									"parameters": [
										{
											"id": 2321,
											"name": "bufferReader",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2200,
												"name": "BufferReader"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2247,
										"name": "Authorization.deserialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2246,
								"name": "Authorization.deserialize"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2322
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2326,
								2327,
								2328
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2350,
								2334,
								2329,
								2348,
								2331,
								2336,
								2342,
								2339,
								2345,
								2318
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 621,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2245,
							"name": "Authorization"
						}
					]
				},
				{
					"id": 2138,
					"name": "StacksTransaction",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 2139,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2140,
									"name": "new StacksTransaction",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2141,
											"name": "version",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3085,
												"name": "TransactionVersion"
											}
										},
										{
											"id": 2142,
											"name": "auth",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2245,
												"name": "Authorization"
											}
										},
										{
											"id": 2143,
											"name": "payload",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Payload"
											}
										},
										{
											"id": 2144,
											"name": "postConditions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 3046,
												"name": "LengthPrefixedList"
											}
										},
										{
											"id": 2145,
											"name": "postConditionMode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 3088,
												"name": "PostConditionMode"
											}
										},
										{
											"id": 2146,
											"name": "anchorMode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 3081,
												"name": "AnchorMode"
											}
										},
										{
											"id": 2147,
											"name": "chainId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 3060,
												"name": "ChainID"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								}
							]
						},
						{
							"id": 2151,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 41,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3081,
								"name": "AnchorMode"
							}
						},
						{
							"id": 2150,
							"name": "auth",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 40,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 2245,
								"name": "Authorization"
							}
						},
						{
							"id": 2149,
							"name": "chainId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 39,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 3060,
								"name": "ChainID"
							}
						},
						{
							"id": 2152,
							"name": "payload",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 42,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Payload"
							}
						},
						{
							"id": 2153,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 43,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3088,
								"name": "PostConditionMode"
							}
						},
						{
							"id": 2154,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 44,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"id": 3046,
								"name": "LengthPrefixedList"
							}
						},
						{
							"id": 2148,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 38,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 3085,
								"name": "TransactionVersion"
							}
						},
						{
							"id": 2172,
							"name": "appendPubkey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 133,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 2173,
									"name": "appendPubkey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2174,
											"name": "publicKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2633,
												"name": "StacksPublicKey"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2159,
							"name": "createTxWithSignature",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 93,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 2160,
									"name": "createTxWithSignature",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2161,
											"name": "signature",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "Buffer"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								}
							]
						},
						{
							"id": 2195,
							"name": "serialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 216,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2196,
									"name": "serialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							]
						},
						{
							"id": 2186,
							"name": "setFee",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 194,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2187,
									"name": "setFee",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the total fee to be paid for this transaction"
									},
									"parameters": [
										{
											"id": 2188,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2189,
							"name": "setNonce",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 203,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 2190,
									"name": "setNonce",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the transaction nonce"
									},
									"parameters": [
										{
											"id": 2191,
											"name": "nonce",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the nonce value\n"
											},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2183,
							"name": "setSponsor",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 181,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 2184,
									"name": "setSponsor",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2185,
											"name": "sponsorSpendingCondition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2353,
												"name": "SpendingCondition"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2192,
							"name": "setSponsorNonce",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 212,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 2193,
									"name": "setSponsorNonce",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the transaction sponsor nonce"
									},
									"parameters": [
										{
											"id": 2194,
											"name": "nonce",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the sponsor nonce value\n"
											},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2175,
							"name": "signAndAppend",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 148,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 2176,
									"name": "signAndAppend",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2177,
											"name": "condition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2353,
												"name": "SpendingCondition"
											}
										},
										{
											"id": 2178,
											"name": "curSigHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2179,
											"name": "authType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3099,
												"name": "AuthType"
											}
										},
										{
											"id": 2180,
											"name": "privateKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2636,
												"name": "StacksPrivateKey"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 2155,
							"name": "signBegin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 81,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2156,
									"name": "signBegin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 2164,
							"name": "signNextOrigin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 108,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2165,
									"name": "signNextOrigin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2166,
											"name": "sigHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2167,
											"name": "privateKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2636,
												"name": "StacksPrivateKey"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 2168,
							"name": "signNextSponsor",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 118,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 2169,
									"name": "signNextSponsor",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2170,
											"name": "sigHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2171,
											"name": "privateKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2636,
												"name": "StacksPrivateKey"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 2181,
							"name": "txid",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 176,
									"character": 6
								}
							],
							"signatures": [
								{
									"id": 2182,
									"name": "txid",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 2157,
							"name": "verifyBegin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 87,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2158,
									"name": "verifyBegin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 2162,
							"name": "verifyOrigin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/transaction.ts",
									"line": 104,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 2163,
									"name": "verifyOrigin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2139
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2151,
								2150,
								2149,
								2152,
								2153,
								2154,
								2148
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2172,
								2159,
								2195,
								2186,
								2189,
								2183,
								2192,
								2175,
								2155,
								2164,
								2168,
								2181,
								2157,
								2162
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/transaction.ts",
							"line": 37,
							"character": 30
						}
					]
				},
				{
					"id": 2282,
					"name": "StandardAuthorization",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 2287,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2288,
									"name": "new StandardAuthorization",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2289,
											"name": "spendingCondition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2353,
												"name": "SpendingCondition"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2282,
										"name": "StandardAuthorization"
									},
									"overwrites": {
										"type": "reference",
										"id": 2251,
										"name": "Authorization.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 2250,
								"name": "Authorization.constructor"
							}
						},
						{
							"id": 2290,
							"name": "authType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 481,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 3099,
								"name": "AuthType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2255,
								"name": "Authorization.authType"
							}
						},
						{
							"id": 2291,
							"name": "spendingCondition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 482,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 2353,
								"name": "SpendingCondition"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2256,
								"name": "Authorization.spendingCondition"
							}
						},
						{
							"id": 2292,
							"name": "sponsorSpendingCondition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 483,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"id": 2353,
								"name": "SpendingCondition"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2257,
								"name": "Authorization.sponsorSpendingCondition"
							}
						},
						{
							"id": 2314,
							"name": "deserialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 593,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2315,
									"name": "deserialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2316,
											"name": "bufferReader",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2200,
												"name": "BufferReader"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2280,
										"name": "Authorization.deserialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2279,
								"name": "Authorization.deserialize"
							}
						},
						{
							"id": 2298,
							"name": "getFee",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 526,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2299,
									"name": "getFee",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "BN"
											},
											{
												"type": "literal",
												"value": 0
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2264,
										"name": "Authorization.getFee"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2263,
								"name": "Authorization.getFee"
							}
						},
						{
							"id": 2293,
							"name": "intoInitialSighashAuth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 496,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 2294,
									"name": "intoInitialSighashAuth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2245,
										"name": "Authorization"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2259,
										"name": "Authorization.intoInitialSighashAuth"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2258,
								"name": "Authorization.intoInitialSighashAuth"
							}
						},
						{
							"id": 2312,
							"name": "serialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 560,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2313,
									"name": "serialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2278,
										"name": "Authorization.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2277,
								"name": "Authorization.serialize"
							}
						},
						{
							"id": 2295,
							"name": "setFee",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 515,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 2296,
									"name": "setFee",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2297,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2261,
										"name": "Authorization.setFee"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2260,
								"name": "Authorization.setFee"
							}
						},
						{
							"id": 2300,
							"name": "setNonce",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 537,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 2301,
									"name": "setNonce",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2302,
											"name": "nonce",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2266,
										"name": "Authorization.setNonce"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2265,
								"name": "Authorization.setNonce"
							}
						},
						{
							"id": 2306,
							"name": "setSponsor",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 545,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 2307,
									"name": "setSponsor",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2308,
											"name": "sponsorSpendingCondition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2353,
												"name": "SpendingCondition"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2272,
										"name": "Authorization.setSponsor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2271,
								"name": "Authorization.setSponsor"
							}
						},
						{
							"id": 2303,
							"name": "setSponsorNonce",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 541,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 2304,
									"name": "setSponsorNonce",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2305,
											"name": "nonce",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2269,
										"name": "Authorization.setSponsorNonce"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2268,
								"name": "Authorization.setSponsorNonce"
							}
						},
						{
							"id": 2309,
							"name": "verifyOrigin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 549,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 2310,
									"name": "verifyOrigin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2311,
											"name": "initialSigHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2275,
										"name": "Authorization.verifyOrigin"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2274,
								"name": "Authorization.verifyOrigin"
							}
						},
						{
							"id": 2283,
							"name": "deserialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 42,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 2284,
									"name": "deserialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 2285,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "Deserializable"
											}
										}
									],
									"parameters": [
										{
											"id": 2286,
											"name": "bufferReader",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2200,
												"name": "BufferReader"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2247,
										"name": "Authorization.deserialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2246,
								"name": "Authorization.deserialize"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2287
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2290,
								2291,
								2292
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2314,
								2298,
								2293,
								2312,
								2295,
								2300,
								2306,
								2303,
								2309,
								2283
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 615,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2245,
							"name": "Authorization"
						}
					]
				},
				{
					"id": 3330,
					"name": "TransactionSigner",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 3335,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3336,
									"name": "new TransactionSigner",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3337,
											"name": "transaction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2138,
												"name": "StacksTransaction"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3330,
										"name": "TransactionSigner"
									}
								}
							]
						},
						{
							"id": 3342,
							"name": "checkOverlap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/signer.ts",
									"line": 15,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3341,
							"name": "checkOversign",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/signer.ts",
									"line": 14,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3340,
							"name": "originDone",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/signer.ts",
									"line": 13,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3339,
							"name": "sigHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/signer.ts",
									"line": 12,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3338,
							"name": "transaction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/signer.ts",
									"line": 11,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 2138,
								"name": "StacksTransaction"
							}
						},
						{
							"id": 3346,
							"name": "appendOrigin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/signer.ts",
									"line": 67,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 3347,
									"name": "appendOrigin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3348,
											"name": "publicKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2633,
												"name": "StacksPublicKey"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3352,
							"name": "getTxInComplete",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/signer.ts",
									"line": 95,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 3353,
									"name": "getTxInComplete",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								}
							]
						},
						{
							"id": 3354,
							"name": "resume",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/signer.ts",
									"line": 99,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3355,
									"name": "resume",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3356,
											"name": "transaction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2138,
												"name": "StacksTransaction"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3343,
							"name": "signOrigin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/signer.ts",
									"line": 41,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3344,
									"name": "signOrigin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3345,
											"name": "privateKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2636,
												"name": "StacksPrivateKey"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3349,
							"name": "signSponsor",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/signer.ts",
									"line": 82,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 3350,
									"name": "signSponsor",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3351,
											"name": "privateKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2636,
												"name": "StacksPrivateKey"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3331,
							"name": "createSponsorSigner",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/signer.ts",
									"line": 25,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 3332,
									"name": "createSponsorSigner",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3333,
											"name": "transaction",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2138,
												"name": "StacksTransaction"
											}
										},
										{
											"id": 3334,
											"name": "spendingCondition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2353,
												"name": "SpendingCondition"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3330,
										"name": "TransactionSigner"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3335
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3342,
								3341,
								3340,
								3339,
								3338
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3346,
								3352,
								3354,
								3343,
								3349,
								3331
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/signer.ts",
							"line": 10,
							"character": 30
						}
					]
				},
				{
					"id": 3515,
					"name": "sha512_256",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 3516,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3517,
									"name": "new sha512_256",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"overwrites": {
										"type": "reference",
										"name": "sha512.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "sha512.constructor"
							}
						},
						{
							"id": 3620,
							"name": "destroyed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 40,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.destroyed"
							}
						},
						{
							"id": 3613,
							"name": "readable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 33,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.readable"
							}
						},
						{
							"id": 3614,
							"name": "readableEncoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 34,
									"character": 37
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"name": "BufferEncoding"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.readableEncoding"
							}
						},
						{
							"id": 3615,
							"name": "readableEnded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 35,
									"character": 34
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.readableEnded"
							}
						},
						{
							"id": 3616,
							"name": "readableFlowing",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 36,
									"character": 36
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.readableFlowing"
							}
						},
						{
							"id": 3617,
							"name": "readableHighWaterMark",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 37,
									"character": 42
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.readableHighWaterMark"
							}
						},
						{
							"id": 3618,
							"name": "readableLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 38,
									"character": 35
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.readableLength"
							}
						},
						{
							"id": 3619,
							"name": "readableObjectMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 39,
									"character": 39
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.readableObjectMode"
							}
						},
						{
							"id": 3538,
							"name": "writable",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 252,
									"character": 29
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.writable"
							}
						},
						{
							"id": 3544,
							"name": "writableCorked",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 258,
									"character": 35
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.writableCorked"
							}
						},
						{
							"id": 3539,
							"name": "writableEnded",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 253,
									"character": 34
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.writableEnded"
							}
						},
						{
							"id": 3540,
							"name": "writableFinished",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 254,
									"character": 37
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.writableFinished"
							}
						},
						{
							"id": 3541,
							"name": "writableHighWaterMark",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 255,
									"character": 42
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.writableHighWaterMark"
							}
						},
						{
							"id": 3542,
							"name": "writableLength",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 256,
									"character": 35
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.writableLength"
							}
						},
						{
							"id": 3543,
							"name": "writableObjectMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExternal": true,
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 257,
									"character": 39
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.writableObjectMode"
							}
						},
						{
							"id": 3937,
							"name": "[Symbol.asyncIterator]",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 129,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 3938,
									"name": "[Symbol.asyncIterator]",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "AsyncIterableIterator"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.__@asyncIterator"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.__@asyncIterator"
							}
						},
						{
							"id": 3563,
							"name": "_destroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 262,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 3564,
									"name": "_destroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3565,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"name": "Error"
													}
												]
											}
										},
										{
											"id": 3566,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3567,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3568,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3569,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"name": "Error"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512._destroy"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512._destroy"
							}
						},
						{
							"id": 3570,
							"name": "_final",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 263,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 3571,
									"name": "_final",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3572,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3573,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3574,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3575,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"name": "Error"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512._final"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512._final"
							}
						},
						{
							"id": 3535,
							"name": "_flush",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 289,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 3536,
									"name": "_flush",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3537,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "TransformCallback"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512._flush"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512._flush"
							}
						},
						{
							"id": 3621,
							"name": "_read",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 42,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 3622,
									"name": "_read",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3623,
											"name": "size",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512._read"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512._read"
							}
						},
						{
							"id": 3530,
							"name": "_transform",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 288,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 3531,
									"name": "_transform",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3532,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3533,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "BufferEncoding"
											}
										},
										{
											"id": 3534,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "TransformCallback"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512._transform"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512._transform"
							}
						},
						{
							"id": 3545,
							"name": "_write",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 260,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 3546,
									"name": "_write",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3547,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3548,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "BufferEncoding"
											}
										},
										{
											"id": 3549,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3550,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3551,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3552,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"name": "Error"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512._write"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512._write"
							}
						},
						{
							"id": 3553,
							"name": "_writev",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 261,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 3554,
									"name": "_writev",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3555,
											"name": "chunks",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 3556,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {
															"isExternal": true
														},
														"children": [
															{
																"id": 3557,
																"name": "chunk",
																"kind": 1024,
																"kindString": "Property",
																"flags": {
																	"isExternal": true
																},
																"sources": [
																	{
																		"fileName": "node_modules/@types/node/stream.d.ts",
																		"line": 261,
																		"character": 42
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															},
															{
																"id": 3558,
																"name": "encoding",
																"kind": 1024,
																"kindString": "Property",
																"flags": {
																	"isExternal": true
																},
																"sources": [
																	{
																		"fileName": "node_modules/@types/node/stream.d.ts",
																		"line": 261,
																		"character": 57
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "BufferEncoding"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"kind": 1024,
																"children": [
																	3557,
																	3558
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 3559,
											"name": "callback",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3560,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3561,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3562,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"name": "Error"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512._writev"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512._writev"
							}
						},
						{
							"id": 3653,
							"name": "addListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 66,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 3654,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "Event emitter\nThe defined events on documents including:\n1. close\n2. data\n3. end\n4. error\n5. pause\n6. readable\n7. resume"
									},
									"parameters": [
										{
											"id": 3655,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 3656,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3657,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3658,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.addListener"
									}
								},
								{
									"id": 3659,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3660,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "data"
											}
										},
										{
											"id": 3661,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3662,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3663,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3664,
																	"name": "chunk",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.addListener"
									}
								},
								{
									"id": 3665,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3666,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "end"
											}
										},
										{
											"id": 3667,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3668,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3669,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.addListener"
									}
								},
								{
									"id": 3670,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3671,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 3672,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3673,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3674,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3675,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.addListener"
									}
								},
								{
									"id": 3676,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3677,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pause"
											}
										},
										{
											"id": 3678,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3679,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3680,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.addListener"
									}
								},
								{
									"id": 3681,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3682,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "readable"
											}
										},
										{
											"id": 3683,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3684,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3685,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.addListener"
									}
								},
								{
									"id": 3686,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3687,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "resume"
											}
										},
										{
											"id": 3688,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3689,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3690,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.addListener"
									}
								},
								{
									"id": 3691,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3692,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3693,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3694,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3695,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3696,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.addListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.addListener"
							}
						},
						{
							"id": 3522,
							"name": "copy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/crypto.d.ts",
									"line": 157,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3523,
									"name": "copy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "Hash"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.copy"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.copy"
							}
						},
						{
							"id": 3609,
							"name": "cork",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 270,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3610,
									"name": "cork",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.cork"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.cork"
							}
						},
						{
							"id": 3650,
							"name": "destroy",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 53,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 3651,
									"name": "destroy",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3652,
											"name": "error",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.destroy"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.destroy"
							}
						},
						{
							"id": 3518,
							"name": "digest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/utils.ts",
									"line": 89,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3519,
									"name": "digest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									},
									"overwrites": {
										"type": "reference",
										"name": "sha512.digest"
									}
								},
								{
									"id": 3520,
									"name": "digest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3521,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BufferEncoding"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"overwrites": {
										"type": "reference",
										"name": "sha512.digest"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "sha512.digest"
							}
						},
						{
							"id": 3697,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 75,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3698,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3699,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.emit"
									}
								},
								{
									"id": 3700,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3701,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "data"
											}
										},
										{
											"id": 3702,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.emit"
									}
								},
								{
									"id": 3703,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3704,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "end"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.emit"
									}
								},
								{
									"id": 3705,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3706,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 3707,
											"name": "err",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "Error"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.emit"
									}
								},
								{
									"id": 3708,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3709,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pause"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.emit"
									}
								},
								{
									"id": 3710,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3711,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "readable"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.emit"
									}
								},
								{
									"id": 3712,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3713,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "resume"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.emit"
									}
								},
								{
									"id": 3714,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3715,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3716,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.emit"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.emit"
							}
						},
						{
							"id": 3593,
							"name": "end",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 267,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 3594,
									"name": "end",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3595,
											"name": "cb",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3596,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3597,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.end"
									}
								},
								{
									"id": 3598,
									"name": "end",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3599,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3600,
											"name": "cb",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3601,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3602,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.end"
									}
								},
								{
									"id": 3603,
									"name": "end",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3604,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3605,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "BufferEncoding"
											}
										},
										{
											"id": 3606,
											"name": "cb",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3607,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3608,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.end"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.end"
							}
						},
						{
							"id": 3970,
							"name": "eventNames",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3971,
									"name": "eventNames",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.eventNames"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.eventNames"
							}
						},
						{
							"id": 3959,
							"name": "getMaxListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3960,
									"name": "getMaxListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.getMaxListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.getMaxListeners"
							}
						},
						{
							"id": 3634,
							"name": "isPaused",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 47,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 3635,
									"name": "isPaused",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.isPaused"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.isPaused"
							}
						},
						{
							"id": 3967,
							"name": "listenerCount",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3968,
									"name": "listenerCount",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3969,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.listenerCount"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.listenerCount"
							}
						},
						{
							"id": 3961,
							"name": "listeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3962,
									"name": "listeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3963,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Function"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.listeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.listeners"
							}
						},
						{
							"id": 3946,
							"name": "off",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3947,
									"name": "off",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3948,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3949,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3950,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3951,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3952,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.off"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.off"
							}
						},
						{
							"id": 3717,
							"name": "on",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 84,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 3718,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3719,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 3720,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3721,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3722,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.on"
									}
								},
								{
									"id": 3723,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3724,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "data"
											}
										},
										{
											"id": 3725,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3726,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3727,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3728,
																	"name": "chunk",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.on"
									}
								},
								{
									"id": 3729,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3730,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "end"
											}
										},
										{
											"id": 3731,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3732,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3733,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.on"
									}
								},
								{
									"id": 3734,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3735,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 3736,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3737,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3738,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3739,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.on"
									}
								},
								{
									"id": 3740,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3741,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pause"
											}
										},
										{
											"id": 3742,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3743,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3744,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.on"
									}
								},
								{
									"id": 3745,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3746,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "readable"
											}
										},
										{
											"id": 3747,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3748,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3749,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.on"
									}
								},
								{
									"id": 3750,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3751,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "resume"
											}
										},
										{
											"id": 3752,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3753,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3754,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.on"
									}
								},
								{
									"id": 3755,
									"name": "on",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3756,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3757,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3758,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3759,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3760,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.on"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.on"
							}
						},
						{
							"id": 3761,
							"name": "once",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 93,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3762,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3763,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 3764,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3765,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3766,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.once"
									}
								},
								{
									"id": 3767,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3768,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "data"
											}
										},
										{
											"id": 3769,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3770,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3771,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3772,
																	"name": "chunk",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.once"
									}
								},
								{
									"id": 3773,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3774,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "end"
											}
										},
										{
											"id": 3775,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3776,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3777,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.once"
									}
								},
								{
									"id": 3778,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3779,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 3780,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3781,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3782,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3783,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.once"
									}
								},
								{
									"id": 3784,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3785,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pause"
											}
										},
										{
											"id": 3786,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3787,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3788,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.once"
									}
								},
								{
									"id": 3789,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3790,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "readable"
											}
										},
										{
											"id": 3791,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3792,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3793,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.once"
									}
								},
								{
									"id": 3794,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3795,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "resume"
											}
										},
										{
											"id": 3796,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3797,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3798,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.once"
									}
								},
								{
									"id": 3799,
									"name": "once",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3800,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3801,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3802,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3803,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3804,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.once"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.once"
							}
						},
						{
							"id": 3630,
							"name": "pause",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 45,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 3631,
									"name": "pause",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.pause"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.pause"
							}
						},
						{
							"id": 3939,
							"name": "pipe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 10,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3940,
									"name": "pipe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"typeParameter": [
										{
											"id": 3941,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "WritableStream"
											}
										}
									],
									"parameters": [
										{
											"id": 3942,
											"name": "destination",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "T"
											}
										},
										{
											"id": 3943,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3944,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"children": [
														{
															"id": 3945,
															"name": "end",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isExternal": true,
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/stream.d.ts",
																	"line": 10,
																	"character": 77
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																3945
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.pipe"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.pipe"
							}
						},
						{
							"id": 3805,
							"name": "prependListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 102,
									"character": 27
								}
							],
							"signatures": [
								{
									"id": 3806,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3807,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 3808,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3809,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3810,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.prependListener"
									}
								},
								{
									"id": 3811,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3812,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "data"
											}
										},
										{
											"id": 3813,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3814,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3815,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3816,
																	"name": "chunk",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.prependListener"
									}
								},
								{
									"id": 3817,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3818,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "end"
											}
										},
										{
											"id": 3819,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3820,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3821,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.prependListener"
									}
								},
								{
									"id": 3822,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3823,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 3824,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3825,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3826,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3827,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.prependListener"
									}
								},
								{
									"id": 3828,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3829,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pause"
											}
										},
										{
											"id": 3830,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3831,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3832,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.prependListener"
									}
								},
								{
									"id": 3833,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3834,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "readable"
											}
										},
										{
											"id": 3835,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3836,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3837,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.prependListener"
									}
								},
								{
									"id": 3838,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3839,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "resume"
											}
										},
										{
											"id": 3840,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3841,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3842,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.prependListener"
									}
								},
								{
									"id": 3843,
									"name": "prependListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3844,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3845,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3846,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3847,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3848,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.prependListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.prependListener"
							}
						},
						{
							"id": 3849,
							"name": "prependOnceListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 111,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 3850,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3851,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 3852,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3853,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3854,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.prependOnceListener"
									}
								},
								{
									"id": 3855,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3856,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "data"
											}
										},
										{
											"id": 3857,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3858,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3859,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3860,
																	"name": "chunk",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.prependOnceListener"
									}
								},
								{
									"id": 3861,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3862,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "end"
											}
										},
										{
											"id": 3863,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3864,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3865,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.prependOnceListener"
									}
								},
								{
									"id": 3866,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3867,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 3868,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3869,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3870,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3871,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.prependOnceListener"
									}
								},
								{
									"id": 3872,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3873,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pause"
											}
										},
										{
											"id": 3874,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3875,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3876,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.prependOnceListener"
									}
								},
								{
									"id": 3877,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3878,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "readable"
											}
										},
										{
											"id": 3879,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3880,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3881,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.prependOnceListener"
									}
								},
								{
									"id": 3882,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3883,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "resume"
											}
										},
										{
											"id": 3884,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3885,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3886,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.prependOnceListener"
									}
								},
								{
									"id": 3887,
									"name": "prependOnceListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3888,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3889,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3890,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3891,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3892,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.prependOnceListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.prependOnceListener"
							}
						},
						{
							"id": 3646,
							"name": "push",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 51,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3647,
									"name": "push",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3648,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3649,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "BufferEncoding"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.push"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.push"
							}
						},
						{
							"id": 3964,
							"name": "rawListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3965,
									"name": "rawListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3966,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Function"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.rawListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.rawListeners"
							}
						},
						{
							"id": 3624,
							"name": "read",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 43,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3625,
									"name": "read",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3626,
											"name": "size",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.read"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.read"
							}
						},
						{
							"id": 3953,
							"name": "removeAllListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3954,
									"name": "removeAllListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3955,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.removeAllListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.removeAllListeners"
							}
						},
						{
							"id": 3893,
							"name": "removeListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 120,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 3894,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3895,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "close"
											}
										},
										{
											"id": 3896,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3897,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3898,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.removeListener"
									}
								},
								{
									"id": 3899,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3900,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "data"
											}
										},
										{
											"id": 3901,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3902,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3903,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3904,
																	"name": "chunk",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.removeListener"
									}
								},
								{
									"id": 3905,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3906,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "end"
											}
										},
										{
											"id": 3907,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3908,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3909,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.removeListener"
									}
								},
								{
									"id": 3910,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3911,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 3912,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3913,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3914,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3915,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "Error"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.removeListener"
									}
								},
								{
									"id": 3916,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3917,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "pause"
											}
										},
										{
											"id": 3918,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3919,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3920,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.removeListener"
									}
								},
								{
									"id": 3921,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3922,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "readable"
											}
										},
										{
											"id": 3923,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3924,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3925,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.removeListener"
									}
								},
								{
									"id": 3926,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3927,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "literal",
												"value": "resume"
											}
										},
										{
											"id": 3928,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3929,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3930,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.removeListener"
									}
								},
								{
									"id": 3931,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3932,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 3933,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3934,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3935,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3936,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true,
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.removeListener"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.removeListener"
							}
						},
						{
							"id": 3632,
							"name": "resume",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 46,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 3633,
									"name": "resume",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.resume"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.resume"
							}
						},
						{
							"id": 3590,
							"name": "setDefaultEncoding",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 266,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 3591,
									"name": "setDefaultEncoding",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3592,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "BufferEncoding"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.setDefaultEncoding"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.setDefaultEncoding"
							}
						},
						{
							"id": 3627,
							"name": "setEncoding",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 44,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 3628,
									"name": "setEncoding",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3629,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "BufferEncoding"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.setEncoding"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.setEncoding"
							}
						},
						{
							"id": 3956,
							"name": "setMaxListeners",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 3957,
									"name": "setMaxListeners",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3958,
											"name": "n",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.setMaxListeners"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.setMaxListeners"
							}
						},
						{
							"id": 3611,
							"name": "uncork",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 271,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 3612,
									"name": "uncork",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.uncork"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.uncork"
							}
						},
						{
							"id": 3636,
							"name": "unpipe",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 48,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 3637,
									"name": "unpipe",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3638,
											"name": "destination",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "WritableStream"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.unpipe"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.unpipe"
							}
						},
						{
							"id": 3639,
							"name": "unshift",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 49,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 3640,
									"name": "unshift",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3641,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3642,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "BufferEncoding"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.unshift"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.unshift"
							}
						},
						{
							"id": 3524,
							"name": "update",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/crypto.d.ts",
									"line": 158,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 3525,
									"name": "update",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3526,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "BinaryLike"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Hash"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.update"
									}
								},
								{
									"id": 3527,
									"name": "update",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3528,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3529,
											"name": "input_encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "Encoding"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Hash"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.update"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.update"
							}
						},
						{
							"id": 3643,
							"name": "wrap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 50,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 3644,
									"name": "wrap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3645,
											"name": "oldStream",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"name": "ReadableStream"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3515,
										"name": "sha512_256"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.wrap"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.wrap"
							}
						},
						{
							"id": 3576,
							"name": "write",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/@types/node/stream.d.ts",
									"line": 264,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 3577,
									"name": "write",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3578,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3579,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "BufferEncoding"
											}
										},
										{
											"id": 3580,
											"name": "cb",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3581,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3582,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3583,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"name": "Error"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.write"
									}
								},
								{
									"id": 3584,
									"name": "write",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 3585,
											"name": "chunk",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 3586,
											"name": "cb",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true,
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3587,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 3588,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 3589,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "reference",
																				"name": "Error"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "sha512.write"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "sha512.write"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3516
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3620,
								3613,
								3614,
								3615,
								3616,
								3617,
								3618,
								3619,
								3538,
								3544,
								3539,
								3540,
								3541,
								3542,
								3543
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3937,
								3563,
								3570,
								3535,
								3621,
								3530,
								3545,
								3553,
								3653,
								3522,
								3609,
								3650,
								3518,
								3697,
								3593,
								3970,
								3959,
								3634,
								3967,
								3961,
								3946,
								3717,
								3761,
								3630,
								3939,
								3805,
								3849,
								3646,
								3964,
								3624,
								3953,
								3893,
								3632,
								3590,
								3627,
								3956,
								3611,
								3636,
								3639,
								3524,
								3643,
								3576
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 65,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "sha512"
						}
					]
				},
				{
					"id": 3019,
					"name": "Address",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3022,
							"name": "hash160",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 115,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3020,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 113,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 3064,
								"name": "Address"
							}
						},
						{
							"id": 3021,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 114,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 3109,
								"name": "AddressVersion"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3022,
								3020,
								3021
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 112,
							"character": 24
						}
					]
				},
				{
					"id": 3041,
					"name": "AssetInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3043,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 409,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 3019,
								"name": "Address"
							}
						},
						{
							"id": 3045,
							"name": "assetName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 411,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"id": 3033,
								"name": "LengthPrefixedString"
							}
						},
						{
							"id": 3044,
							"name": "contractName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 410,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"id": 3033,
								"name": "LengthPrefixedString"
							}
						},
						{
							"id": 3042,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 408,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 3068,
								"name": "AssetInfo"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3043,
								3045,
								3044,
								3042
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 407,
							"character": 26
						}
					]
				},
				{
					"id": 2442,
					"name": "BufferCV",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2444,
							"name": "buffer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/bufferCV.ts",
									"line": 6,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						},
						{
							"id": 2443,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/bufferCV.ts",
									"line": 5,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 2417,
								"name": "Buffer"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2444,
								2443
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/bufferCV.ts",
							"line": 4,
							"character": 18
						}
					]
				},
				{
					"id": 3324,
					"name": "ClarityAbi",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3325,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 268,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3295,
									"name": "ClarityAbiFunction"
								}
							}
						},
						{
							"id": 3328,
							"name": "fungible_tokens",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 271,
									"character": 17
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3319,
									"name": "ClarityAbiTypeFungibleToken"
								}
							}
						},
						{
							"id": 3327,
							"name": "maps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 270,
									"character": 6
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3309,
									"name": "ClarityAbiMap"
								}
							}
						},
						{
							"id": 3329,
							"name": "non_fungible_tokens",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 272,
									"character": 21
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3321,
									"name": "ClarityAbiTypeNonFungibleToken"
								}
							}
						},
						{
							"id": 3326,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 269,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3305,
									"name": "ClarityAbiVariable"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3325,
								3328,
								3327,
								3329,
								3326
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 267,
							"character": 27
						}
					]
				},
				{
					"id": 3295,
					"name": "ClarityAbiFunction",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3297,
							"name": "access",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 223,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "private"
									},
									{
										"type": "literal",
										"value": "public"
									},
									{
										"type": "literal",
										"value": "read_only"
									}
								]
							}
						},
						{
							"id": 3298,
							"name": "args",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 224,
									"character": 6
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 3299,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 3300,
												"name": "name",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "packages/transactions/src/contract-abi.ts",
														"line": 225,
														"character": 8
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 3301,
												"name": "type",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "packages/transactions/src/contract-abi.ts",
														"line": 226,
														"character": 8
													}
												],
												"type": {
													"type": "reference",
													"id": 3209,
													"name": "ClarityAbiType"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"kind": 1024,
												"children": [
													3300,
													3301
												]
											}
										]
									}
								}
							}
						},
						{
							"id": 3296,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 222,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3302,
							"name": "outputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 228,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3303,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3304,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 229,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3209,
												"name": "ClarityAbiType"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3304
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3297,
								3298,
								3296,
								3302
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 221,
							"character": 35
						}
					]
				},
				{
					"id": 3309,
					"name": "ClarityAbiMap",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3311,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 248,
									"character": 5
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 3312,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 3313,
												"name": "name",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "packages/transactions/src/contract-abi.ts",
														"line": 249,
														"character": 8
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 3314,
												"name": "type",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "packages/transactions/src/contract-abi.ts",
														"line": 250,
														"character": 8
													}
												],
												"type": {
													"type": "reference",
													"id": 3209,
													"name": "ClarityAbiType"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"kind": 1024,
												"children": [
													3313,
													3314
												]
											}
										]
									}
								}
							}
						},
						{
							"id": 3310,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 247,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3315,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 252,
									"character": 7
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 3316,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 3317,
												"name": "name",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "packages/transactions/src/contract-abi.ts",
														"line": 253,
														"character": 8
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 3318,
												"name": "type",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "packages/transactions/src/contract-abi.ts",
														"line": 254,
														"character": 8
													}
												],
												"type": {
													"type": "reference",
													"id": 3209,
													"name": "ClarityAbiType"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"kind": 1024,
												"children": [
													3317,
													3318
												]
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3311,
								3310,
								3315
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 246,
							"character": 30
						}
					]
				},
				{
					"id": 3319,
					"name": "ClarityAbiTypeFungibleToken",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3320,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 259,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3320
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 258,
							"character": 44
						}
					]
				},
				{
					"id": 3321,
					"name": "ClarityAbiTypeNonFungibleToken",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3322,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 263,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3323,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 264,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 3209,
								"name": "ClarityAbiType"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3322,
								3323
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 262,
							"character": 47
						}
					]
				},
				{
					"id": 3305,
					"name": "ClarityAbiVariable",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3307,
							"name": "access",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 242,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "variable"
									},
									{
										"type": "literal",
										"value": "constant"
									}
								]
							}
						},
						{
							"id": 3306,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 241,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3308,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 243,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 3209,
								"name": "ClarityAbiType"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3307,
								3306,
								3308
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 240,
							"character": 35
						}
					]
				},
				{
					"id": 2386,
					"name": "CoinbasePayload",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2389,
							"name": "coinbaseBuffer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 135,
									"character": 25
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						},
						{
							"id": 2388,
							"name": "payloadType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 134,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"id": 3080,
								"name": "Coinbase"
							}
						},
						{
							"id": 2387,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 133,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 3072,
								"name": "Payload"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2389,
								2388,
								2387
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/payload.ts",
							"line": 132,
							"character": 32
						}
					]
				},
				{
					"id": 2813,
					"name": "ContractCallOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Contract function call transaction options"
					},
					"children": [
						{
							"id": 2822,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 610,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3081,
								"name": "AnchorMode"
							}
						},
						{
							"id": 2814,
							"name": "contractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the Stacks address of the contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 597,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2815,
							"name": "contractName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 598,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2818,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 602,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 2819,
							"name": "feeEstimateApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 603,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2817,
							"name": "functionArgs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 600,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2430,
									"name": "ClarityValue"
								}
							}
						},
						{
							"id": 2816,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 599,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2821,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the Stacks blockchain network that will ultimately be used to broadcast this transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 607,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						},
						{
							"id": 2820,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 605,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 2823,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 613,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3088,
								"name": "PostConditionMode"
							}
						},
						{
							"id": 2824,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 615,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2390,
									"name": "PostCondition"
								}
							}
						},
						{
							"id": 2826,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 620,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2825,
							"name": "validateWithAbi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true to validate that the supplied function args match those specified in\nthe published contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 618,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"id": 3324,
										"name": "ClarityAbi"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2822,
								2814,
								2815,
								2818,
								2819,
								2817,
								2816,
								2821,
								2820,
								2823,
								2824,
								2826,
								2825
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 595,
							"character": 36
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2827,
							"name": "UnsignedContractCallOptions"
						},
						{
							"type": "reference",
							"id": 2842,
							"name": "SignedContractCallOptions"
						},
						{
							"type": "reference",
							"id": 2857,
							"name": "UnsignedMultiSigContractCallOptions"
						},
						{
							"type": "reference",
							"id": 2873,
							"name": "SignedMultiSigContractCallOptions"
						}
					]
				},
				{
					"id": 2371,
					"name": "ContractCallPayload",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2374,
							"name": "contractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 65,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"id": 3019,
								"name": "Address"
							}
						},
						{
							"id": 2375,
							"name": "contractName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 66,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"id": 3033,
								"name": "LengthPrefixedString"
							}
						},
						{
							"id": 2377,
							"name": "functionArgs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 68,
									"character": 23
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2430,
									"name": "ClarityValue"
								}
							}
						},
						{
							"id": 2376,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 67,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"id": 3033,
								"name": "LengthPrefixedString"
							}
						},
						{
							"id": 2373,
							"name": "payloadType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 64,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"id": 3078,
								"name": "ContractCall"
							}
						},
						{
							"id": 2372,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 63,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 3072,
								"name": "Payload"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2374,
								2375,
								2377,
								2376,
								2373,
								2372
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/payload.ts",
							"line": 62,
							"character": 36
						}
					]
				},
				{
					"id": 2802,
					"name": "ContractDeployOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Contract deploy transaction options"
					},
					"children": [
						{
							"id": 2809,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 446,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3081,
								"name": "AnchorMode"
							}
						},
						{
							"id": 2804,
							"name": "codeBody",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the Clarity code to be deployed"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 435,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2803,
							"name": "contractName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 433,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2806,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 439,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 2808,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the network that the transaction will ultimately be broadcast to"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 443,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						},
						{
							"id": 2807,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 441,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 2810,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 449,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3088,
								"name": "PostConditionMode"
							}
						},
						{
							"id": 2811,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 451,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2390,
									"name": "PostCondition"
								}
							}
						},
						{
							"id": 2805,
							"name": "senderKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "a hex string of the private key of the transaction sender"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 437,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2812,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 453,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2809,
								2804,
								2803,
								2806,
								2808,
								2807,
								2810,
								2811,
								2805,
								2812
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 432,
							"character": 38
						}
					]
				},
				{
					"id": 3028,
					"name": "ContractPrincipal",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3031,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 252,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 3019,
								"name": "Address"
							}
						},
						{
							"id": 3032,
							"name": "contractName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 253,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"id": 3033,
								"name": "LengthPrefixedString"
							}
						},
						{
							"id": 3030,
							"name": "prefix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 251,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 3098,
								"name": "Contract"
							}
						},
						{
							"id": 3029,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 250,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 3065,
								"name": "Principal"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3031,
								3032,
								3030,
								3029
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 249,
							"character": 34
						}
					]
				},
				{
					"id": 2466,
					"name": "ContractPrincipalCV",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2468,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/principalCV.ts",
									"line": 20,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 3019,
								"name": "Address"
							}
						},
						{
							"id": 2469,
							"name": "contractName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/principalCV.ts",
									"line": 21,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"id": 3033,
								"name": "LengthPrefixedString"
							}
						},
						{
							"id": 2467,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/principalCV.ts",
									"line": 19,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 2421,
								"name": "PrincipalContract"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2468,
								2469,
								2467
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/principalCV.ts",
							"line": 18,
							"character": 29
						}
					]
				},
				{
					"id": 2434,
					"name": "FalseCV",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2435,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/booleanCV.ts",
									"line": 10,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 2419,
								"name": "BoolFalse"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2435
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/booleanCV.ts",
							"line": 9,
							"character": 17
						}
					]
				},
				{
					"id": 2436,
					"name": "IntCV",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2437,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/intCV.ts",
									"line": 8,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 2415,
								"name": "Int"
							}
						},
						{
							"id": 2438,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/intCV.ts",
									"line": 9,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2437,
								2438
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/intCV.ts",
							"line": 7,
							"character": 15
						}
					]
				},
				{
					"id": 3046,
					"name": "LengthPrefixedList",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3048,
							"name": "lengthPrefixBytes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 457,
									"character": 28
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3047,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 456,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 3071,
								"name": "LengthPrefixedList"
							}
						},
						{
							"id": 3049,
							"name": "values",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 458,
									"character": 17
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3018,
									"name": "StacksMessage"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3048,
								3047,
								3049
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 455,
							"character": 35
						}
					]
				},
				{
					"id": 3033,
					"name": "LengthPrefixedString",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3035,
							"name": "content",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 325,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3036,
							"name": "lengthPrefixBytes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 326,
									"character": 28
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3037,
							"name": "maxLengthBytes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 327,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3034,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 324,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 3066,
								"name": "LengthPrefixedString"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3035,
								3036,
								3037,
								3034
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 323,
							"character": 37
						}
					]
				},
				{
					"id": 2470,
					"name": "ListCV",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2472,
							"name": "list",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/listCV.ts",
									"line": 5,
									"character": 6
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "T"
								}
							}
						},
						{
							"id": 2471,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/listCV.ts",
									"line": 4,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 2426,
								"name": "List"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2472,
								2471
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/listCV.ts",
							"line": 3,
							"character": 16
						}
					],
					"typeParameter": [
						{
							"id": 2473,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2430,
								"name": "ClarityValue"
							},
							"default": {
								"type": "reference",
								"id": 2430,
								"name": "ClarityValue"
							}
						}
					]
				},
				{
					"id": 3038,
					"name": "MemoString",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3040,
							"name": "content",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 381,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3039,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 380,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 3067,
								"name": "MemoString"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3040,
								3039
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 379,
							"character": 27
						}
					]
				},
				{
					"id": 2354,
					"name": "MessageSignature",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2356,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 51,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2355,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 50,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 3073,
								"name": "MessageSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2356,
								2355
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 49,
							"character": 33
						}
					]
				},
				{
					"id": 2736,
					"name": "MultiSigOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2737,
							"name": "numSignatures",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 246,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2738,
							"name": "publicKeys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 247,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2739,
							"name": "signerKeys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 248,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2737,
								2738,
								2739
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 245,
							"character": 32
						}
					]
				},
				{
					"id": 3445,
					"name": "MultiSigSpendingCondition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3449,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 181,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 3450,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 182,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3434,
									"name": "TransactionAuthField"
								}
							}
						},
						{
							"id": 3446,
							"name": "hashMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 178,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 3108,
								"name": "MultiSigHashMode"
							}
						},
						{
							"id": 3448,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 180,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 3451,
							"name": "signaturesRequired",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 183,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3447,
							"name": "signer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 179,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3449,
								3450,
								3446,
								3448,
								3451,
								3447
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 177,
							"character": 42
						}
					]
				},
				{
					"id": 2447,
					"name": "NoneCV",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2448,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/optionalCV.ts",
									"line": 6,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 2424,
								"name": "OptionalNone"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2448
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/optionalCV.ts",
							"line": 5,
							"character": 16
						}
					]
				},
				{
					"id": 2383,
					"name": "PoisonPayload",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2385,
							"name": "payloadType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 125,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"id": 3079,
								"name": "PoisonMicroblock"
							}
						},
						{
							"id": 2384,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 124,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 3072,
								"name": "Payload"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2385,
								2384
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/payload.ts",
							"line": 123,
							"character": 30
						}
					]
				},
				{
					"id": 3988,
					"name": "ReadOnlyFunctionErrorResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3990,
							"name": "cause",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/utils.ts",
									"line": 182,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3989,
							"name": "okay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/utils.ts",
									"line": 181,
									"character": 6
								}
							],
							"type": {
								"type": "literal",
								"value": false
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3990,
								3989
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 180,
							"character": 46
						}
					]
				},
				{
					"id": 2890,
					"name": "ReadOnlyFunctionOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Read only function options",
						"tags": [
							{
								"tag": "param",
								"text": "the c32check address of the contract",
								"param": "contractAddress"
							},
							{
								"tag": "param",
								"text": "the contract name",
								"param": "contractName"
							},
							{
								"tag": "param",
								"text": "name of the function to be called",
								"param": "functionName"
							},
							{
								"tag": "param",
								"text": "an array of Clarity values as arguments to the function call",
								"param": "functionArgs"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network this transaction is destined for",
								"param": "network"
							},
							{
								"tag": "param",
								"text": "the c32check address of the sender\n",
								"param": "senderAddress"
							}
						]
					},
					"children": [
						{
							"id": 2892,
							"name": "contractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1007,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2891,
							"name": "contractName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1006,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2894,
							"name": "functionArgs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1009,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2430,
									"name": "ClarityValue"
								}
							}
						},
						{
							"id": 2893,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1008,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2895,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the network that the contract which contains the function is deployed to"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1011,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						},
						{
							"id": 2896,
							"name": "senderAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "address of the sender"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1013,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2892,
								2891,
								2894,
								2893,
								2895,
								2896
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 1005,
							"character": 40
						}
					]
				},
				{
					"id": 3985,
					"name": "ReadOnlyFunctionSuccessResponse",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Read only function response object",
						"tags": [
							{
								"tag": "param",
								"text": "the status of the response",
								"param": "okay"
							},
							{
								"tag": "param",
								"text": "serialized hex clarity value\n",
								"param": "result"
							}
						]
					},
					"children": [
						{
							"id": 3986,
							"name": "okay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/utils.ts",
									"line": 176,
									"character": 6
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						},
						{
							"id": 3987,
							"name": "result",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/utils.ts",
									"line": 177,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3986,
								3987
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 175,
							"character": 48
						}
					]
				},
				{
					"id": 2458,
					"name": "ResponseErrorCV",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2459,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/responseCV.ts",
									"line": 6,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 2423,
								"name": "ResponseErr"
							}
						},
						{
							"id": 2460,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/responseCV.ts",
									"line": 7,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "T"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2459,
								2460
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/responseCV.ts",
							"line": 5,
							"character": 25
						}
					],
					"typeParameter": [
						{
							"id": 2461,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2430,
								"name": "ClarityValue"
							},
							"default": {
								"type": "reference",
								"id": 2430,
								"name": "ClarityValue"
							}
						}
					]
				},
				{
					"id": 2454,
					"name": "ResponseOkCV",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2455,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/responseCV.ts",
									"line": 11,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 2422,
								"name": "ResponseOk"
							}
						},
						{
							"id": 2456,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/responseCV.ts",
									"line": 12,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "T"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2455,
								2456
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/responseCV.ts",
							"line": 10,
							"character": 22
						}
					],
					"typeParameter": [
						{
							"id": 2457,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2430,
								"name": "ClarityValue"
							},
							"default": {
								"type": "reference",
								"id": 2430,
								"name": "ClarityValue"
							}
						}
					]
				},
				{
					"id": 2842,
					"name": "SignedContractCallOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2852,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 610,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3081,
								"name": "AnchorMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2822,
								"name": "ContractCallOptions.anchorMode"
							}
						},
						{
							"id": 2844,
							"name": "contractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the Stacks address of the contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 597,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2814,
								"name": "ContractCallOptions.contractAddress"
							}
						},
						{
							"id": 2845,
							"name": "contractName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 598,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2815,
								"name": "ContractCallOptions.contractName"
							}
						},
						{
							"id": 2848,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 602,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2818,
								"name": "ContractCallOptions.fee"
							}
						},
						{
							"id": 2849,
							"name": "feeEstimateApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 603,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2819,
								"name": "ContractCallOptions.feeEstimateApiUrl"
							}
						},
						{
							"id": 2847,
							"name": "functionArgs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 600,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2430,
									"name": "ClarityValue"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2817,
								"name": "ContractCallOptions.functionArgs"
							}
						},
						{
							"id": 2846,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 599,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2816,
								"name": "ContractCallOptions.functionName"
							}
						},
						{
							"id": 2851,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the Stacks blockchain network that will ultimately be used to broadcast this transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 607,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2821,
								"name": "ContractCallOptions.network"
							}
						},
						{
							"id": 2850,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 605,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2820,
								"name": "ContractCallOptions.nonce"
							}
						},
						{
							"id": 2853,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 613,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3088,
								"name": "PostConditionMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2823,
								"name": "ContractCallOptions.postConditionMode"
							}
						},
						{
							"id": 2854,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 615,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2390,
									"name": "PostCondition"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2824,
								"name": "ContractCallOptions.postConditions"
							}
						},
						{
							"id": 2843,
							"name": "senderKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 628,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2856,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 620,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2826,
								"name": "ContractCallOptions.sponsored"
							}
						},
						{
							"id": 2855,
							"name": "validateWithAbi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true to validate that the supplied function args match those specified in\nthe published contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 618,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"id": 3324,
										"name": "ClarityAbi"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2825,
								"name": "ContractCallOptions.validateWithAbi"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2852,
								2844,
								2845,
								2848,
								2849,
								2847,
								2846,
								2851,
								2850,
								2853,
								2854,
								2843,
								2856,
								2855
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 627,
							"character": 42
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2813,
							"name": "ContractCallOptions"
						}
					]
				},
				{
					"id": 2873,
					"name": "SignedMultiSigContractCallOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2885,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 610,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3081,
								"name": "AnchorMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2822,
								"name": "ContractCallOptions.anchorMode"
							}
						},
						{
							"id": 2877,
							"name": "contractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the Stacks address of the contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 597,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2814,
								"name": "ContractCallOptions.contractAddress"
							}
						},
						{
							"id": 2878,
							"name": "contractName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 598,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2815,
								"name": "ContractCallOptions.contractName"
							}
						},
						{
							"id": 2881,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 602,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2818,
								"name": "ContractCallOptions.fee"
							}
						},
						{
							"id": 2882,
							"name": "feeEstimateApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 603,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2819,
								"name": "ContractCallOptions.feeEstimateApiUrl"
							}
						},
						{
							"id": 2880,
							"name": "functionArgs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 600,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2430,
									"name": "ClarityValue"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2817,
								"name": "ContractCallOptions.functionArgs"
							}
						},
						{
							"id": 2879,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 599,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2816,
								"name": "ContractCallOptions.functionName"
							}
						},
						{
							"id": 2884,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the Stacks blockchain network that will ultimately be used to broadcast this transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 607,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2821,
								"name": "ContractCallOptions.network"
							}
						},
						{
							"id": 2883,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 605,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2820,
								"name": "ContractCallOptions.nonce"
							}
						},
						{
							"id": 2874,
							"name": "numSignatures",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 637,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2886,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 613,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3088,
								"name": "PostConditionMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2823,
								"name": "ContractCallOptions.postConditionMode"
							}
						},
						{
							"id": 2887,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 615,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2390,
									"name": "PostCondition"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2824,
								"name": "ContractCallOptions.postConditions"
							}
						},
						{
							"id": 2875,
							"name": "publicKeys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 638,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2876,
							"name": "signerKeys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 639,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2889,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 620,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2826,
								"name": "ContractCallOptions.sponsored"
							}
						},
						{
							"id": 2888,
							"name": "validateWithAbi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true to validate that the supplied function args match those specified in\nthe published contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 618,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"id": 3324,
										"name": "ClarityAbi"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2825,
								"name": "ContractCallOptions.validateWithAbi"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2885,
								2877,
								2878,
								2881,
								2882,
								2880,
								2879,
								2884,
								2883,
								2874,
								2886,
								2887,
								2875,
								2876,
								2889,
								2888
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 636,
							"character": 50
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2813,
							"name": "ContractCallOptions"
						}
					]
				},
				{
					"id": 2788,
					"name": "SignedMultiSigTokenTransferOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2793,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the amount to be transfered in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 258,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2742,
								"name": "TokenTransferOptions.amount"
							}
						},
						{
							"id": 2797,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 267,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3081,
								"name": "AnchorMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2746,
								"name": "TokenTransferOptions.anchorMode"
							}
						},
						{
							"id": 2794,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 260,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2743,
								"name": "TokenTransferOptions.fee"
							}
						},
						{
							"id": 2798,
							"name": "memo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "an arbitrary string to include in the transaction, must be less than 34 bytes"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 269,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2747,
								"name": "TokenTransferOptions.memo"
							}
						},
						{
							"id": 2796,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the network that the transaction will ultimately be broadcast to"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 264,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2745,
								"name": "TokenTransferOptions.network"
							}
						},
						{
							"id": 2795,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 262,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2744,
								"name": "TokenTransferOptions.nonce"
							}
						},
						{
							"id": 2789,
							"name": "numSignatures",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 293,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2799,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 272,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3088,
								"name": "PostConditionMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2748,
								"name": "TokenTransferOptions.postConditionMode"
							}
						},
						{
							"id": 2800,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 274,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2390,
									"name": "PostCondition"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2749,
								"name": "TokenTransferOptions.postConditions"
							}
						},
						{
							"id": 2790,
							"name": "publicKeys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 294,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2792,
							"name": "recipient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the address of the recipient of the token transfer"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 256,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 2462,
										"name": "PrincipalCV"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2741,
								"name": "TokenTransferOptions.recipient"
							}
						},
						{
							"id": 2791,
							"name": "signerKeys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 295,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2801,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 276,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2750,
								"name": "TokenTransferOptions.sponsored"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2793,
								2797,
								2794,
								2798,
								2796,
								2795,
								2789,
								2799,
								2800,
								2790,
								2792,
								2791,
								2801
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 292,
							"character": 51
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2740,
							"name": "TokenTransferOptions"
						}
					]
				},
				{
					"id": 2763,
					"name": "SignedTokenTransferOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2766,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the amount to be transfered in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 258,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2742,
								"name": "TokenTransferOptions.amount"
							}
						},
						{
							"id": 2770,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 267,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3081,
								"name": "AnchorMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2746,
								"name": "TokenTransferOptions.anchorMode"
							}
						},
						{
							"id": 2767,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 260,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2743,
								"name": "TokenTransferOptions.fee"
							}
						},
						{
							"id": 2771,
							"name": "memo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "an arbitrary string to include in the transaction, must be less than 34 bytes"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 269,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2747,
								"name": "TokenTransferOptions.memo"
							}
						},
						{
							"id": 2769,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the network that the transaction will ultimately be broadcast to"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 264,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2745,
								"name": "TokenTransferOptions.network"
							}
						},
						{
							"id": 2768,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 262,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2744,
								"name": "TokenTransferOptions.nonce"
							}
						},
						{
							"id": 2772,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 272,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3088,
								"name": "PostConditionMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2748,
								"name": "TokenTransferOptions.postConditionMode"
							}
						},
						{
							"id": 2773,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 274,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2390,
									"name": "PostCondition"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2749,
								"name": "TokenTransferOptions.postConditions"
							}
						},
						{
							"id": 2765,
							"name": "recipient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the address of the recipient of the token transfer"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 256,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 2462,
										"name": "PrincipalCV"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2741,
								"name": "TokenTransferOptions.recipient"
							}
						},
						{
							"id": 2764,
							"name": "senderKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 284,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2774,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 276,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2750,
								"name": "TokenTransferOptions.sponsored"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2766,
								2770,
								2767,
								2771,
								2769,
								2768,
								2772,
								2773,
								2765,
								2764,
								2774
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 283,
							"character": 43
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2740,
							"name": "TokenTransferOptions"
						}
					]
				},
				{
					"id": 3438,
					"name": "SingleSigSpendingCondition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3442,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 172,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 3439,
							"name": "hashMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 169,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 3107,
								"name": "SingleSigHashMode"
							}
						},
						{
							"id": 3443,
							"name": "keyEncoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 173,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 3114,
								"name": "PubKeyEncoding"
							}
						},
						{
							"id": 3441,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 171,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 3444,
							"name": "signature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 174,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 2354,
								"name": "MessageSignature"
							}
						},
						{
							"id": 3440,
							"name": "signer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 170,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3442,
								3439,
								3443,
								3441,
								3444,
								3440
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 168,
							"character": 43
						}
					]
				},
				{
					"id": 2378,
					"name": "SmartContractPayload",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2382,
							"name": "codeBody",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 101,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3033,
								"name": "LengthPrefixedString"
							}
						},
						{
							"id": 2381,
							"name": "contractName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 100,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"id": 3033,
								"name": "LengthPrefixedString"
							}
						},
						{
							"id": 2380,
							"name": "payloadType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 99,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"id": 3077,
								"name": "SmartContract"
							}
						},
						{
							"id": 2379,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 98,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 3072,
								"name": "Payload"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2382,
								2381,
								2380,
								2379
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/payload.ts",
							"line": 97,
							"character": 37
						}
					]
				},
				{
					"id": 2449,
					"name": "SomeCV",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2450,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/optionalCV.ts",
									"line": 10,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 2425,
								"name": "OptionalSome"
							}
						},
						{
							"id": 2451,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/optionalCV.ts",
									"line": 11,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "T"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2450,
								2451
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/optionalCV.ts",
							"line": 9,
							"character": 16
						}
					],
					"typeParameter": [
						{
							"id": 2452,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2430,
								"name": "ClarityValue"
							},
							"default": {
								"type": "reference",
								"id": 2430,
								"name": "ClarityValue"
							}
						}
					]
				},
				{
					"id": 2897,
					"name": "SponsorOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Sponsored transaction options"
					},
					"children": [
						{
							"id": 2900,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction fee amount to sponsor"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1076,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 2903,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the Stacks blockchain network that this transaction will ultimately be broadcast to"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1082,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						},
						{
							"id": 2902,
							"name": "sponsorAddressHashmode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the hashmode of the sponsor's address"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1080,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"id": 3102,
								"name": "AddressHashMode"
							}
						},
						{
							"id": 2901,
							"name": "sponsorNonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the nonce of the sponsor account"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1078,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 2899,
							"name": "sponsorPrivateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the sponsor's private key"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1074,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2898,
							"name": "transaction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the origin-signed transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1072,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 2138,
								"name": "StacksTransaction"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2900,
								2903,
								2902,
								2901,
								2899,
								2898
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 1070,
							"character": 31
						}
					]
				},
				{
					"id": 2636,
					"name": "StacksPrivateKey",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2638,
							"name": "compressed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/keys.ts",
									"line": 132,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2637,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/keys.ts",
									"line": 131,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2638,
								2637
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 130,
							"character": 33
						}
					]
				},
				{
					"id": 2633,
					"name": "StacksPublicKey",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2635,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/keys.ts",
									"line": 31,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						},
						{
							"id": 2634,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/keys.ts",
									"line": 30,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 3070,
								"name": "PublicKey"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2635,
								2634
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 29,
							"character": 32
						}
					]
				},
				{
					"id": 3024,
					"name": "StandardPrincipal",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3027,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 246,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 3019,
								"name": "Address"
							}
						},
						{
							"id": 3026,
							"name": "prefix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 245,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"id": 3097,
								"name": "Standard"
							}
						},
						{
							"id": 3025,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/types.ts",
									"line": 244,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 3065,
								"name": "Principal"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3027,
								3026,
								3025
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 243,
							"character": 34
						}
					]
				},
				{
					"id": 2463,
					"name": "StandardPrincipalCV",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2465,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/principalCV.ts",
									"line": 15,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"id": 3019,
								"name": "Address"
							}
						},
						{
							"id": 2464,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/principalCV.ts",
									"line": 14,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 2420,
								"name": "PrincipalStandard"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2465,
								2464
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/principalCV.ts",
							"line": 13,
							"character": 29
						}
					]
				},
				{
					"id": 2478,
					"name": "StringAsciiCV",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2480,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/stringCV.ts",
									"line": 5,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2479,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/stringCV.ts",
									"line": 4,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 2428,
								"name": "StringASCII"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2480,
								2479
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/stringCV.ts",
							"line": 3,
							"character": 23
						}
					]
				},
				{
					"id": 2481,
					"name": "StringUtf8CV",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2483,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/stringCV.ts",
									"line": 10,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2482,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/stringCV.ts",
									"line": 9,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 2429,
								"name": "StringUTF8"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2483,
								2482
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/stringCV.ts",
							"line": 8,
							"character": 22
						}
					]
				},
				{
					"id": 2740,
					"name": "TokenTransferOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "STX token transfer transaction options"
					},
					"children": [
						{
							"id": 2742,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the amount to be transfered in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 258,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 2746,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 267,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3081,
								"name": "AnchorMode"
							}
						},
						{
							"id": 2743,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 260,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 2747,
							"name": "memo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "an arbitrary string to include in the transaction, must be less than 34 bytes"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 269,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2745,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the network that the transaction will ultimately be broadcast to"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 264,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							}
						},
						{
							"id": 2744,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 262,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 2748,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 272,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3088,
								"name": "PostConditionMode"
							}
						},
						{
							"id": 2749,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 274,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2390,
									"name": "PostCondition"
								}
							}
						},
						{
							"id": 2741,
							"name": "recipient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the address of the recipient of the token transfer"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 256,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 2462,
										"name": "PrincipalCV"
									}
								]
							}
						},
						{
							"id": 2750,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 276,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2742,
								2746,
								2743,
								2747,
								2745,
								2744,
								2748,
								2749,
								2741,
								2750
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 254,
							"character": 37
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2751,
							"name": "UnsignedTokenTransferOptions"
						},
						{
							"type": "reference",
							"id": 2763,
							"name": "SignedTokenTransferOptions"
						},
						{
							"type": "reference",
							"id": 2775,
							"name": "UnsignedMultiSigTokenTransferOptions"
						},
						{
							"type": "reference",
							"id": 2788,
							"name": "SignedMultiSigTokenTransferOptions"
						}
					]
				},
				{
					"id": 2365,
					"name": "TokenTransferPayload",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2369,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 37,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 2370,
							"name": "memo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 38,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 3038,
								"name": "MemoString"
							}
						},
						{
							"id": 2367,
							"name": "payloadType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 35,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"id": 3076,
								"name": "TokenTransfer"
							}
						},
						{
							"id": 2368,
							"name": "recipient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 36,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"id": 2462,
								"name": "PrincipalCV"
							}
						},
						{
							"id": 2366,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/payload.ts",
									"line": 34,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 3072,
								"name": "Payload"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2369,
								2370,
								2367,
								2368,
								2366
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/payload.ts",
							"line": 33,
							"character": 37
						}
					]
				},
				{
					"id": 3434,
					"name": "TransactionAuthField",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3437,
							"name": "contents",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 97,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 3433,
								"name": "TransactionAuthFieldContents"
							}
						},
						{
							"id": 3436,
							"name": "pubKeyEncoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 96,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"id": 3114,
								"name": "PubKeyEncoding"
							}
						},
						{
							"id": 3435,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 95,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 3074,
								"name": "TransactionAuthField"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3437,
								3436,
								3435
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 94,
							"character": 37
						}
					]
				},
				{
					"id": 2432,
					"name": "TrueCV",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2433,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/booleanCV.ts",
									"line": 6,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 2418,
								"name": "BoolTrue"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2433
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/booleanCV.ts",
							"line": 5,
							"character": 16
						}
					]
				},
				{
					"id": 2474,
					"name": "TupleCV",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2476,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/tupleCV.ts",
									"line": 8,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "T"
							}
						},
						{
							"id": 2475,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/tupleCV.ts",
									"line": 7,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 2427,
								"name": "Tuple"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2476,
								2475
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/tupleCV.ts",
							"line": 6,
							"character": 17
						}
					],
					"typeParameter": [
						{
							"id": 2477,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "TupleData"
							},
							"default": {
								"type": "reference",
								"name": "TupleData"
							}
						}
					]
				},
				{
					"id": 2439,
					"name": "UIntCV",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2440,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/intCV.ts",
									"line": 24,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 2416,
								"name": "UInt"
							}
						},
						{
							"id": 2441,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/types/intCV.ts",
									"line": 25,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2440,
								2441
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/intCV.ts",
							"line": 23,
							"character": 16
						}
					]
				},
				{
					"id": 2827,
					"name": "UnsignedContractCallOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2837,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 610,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3081,
								"name": "AnchorMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2822,
								"name": "ContractCallOptions.anchorMode"
							}
						},
						{
							"id": 2829,
							"name": "contractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the Stacks address of the contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 597,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2814,
								"name": "ContractCallOptions.contractAddress"
							}
						},
						{
							"id": 2830,
							"name": "contractName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 598,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2815,
								"name": "ContractCallOptions.contractName"
							}
						},
						{
							"id": 2833,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 602,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2818,
								"name": "ContractCallOptions.fee"
							}
						},
						{
							"id": 2834,
							"name": "feeEstimateApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 603,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2819,
								"name": "ContractCallOptions.feeEstimateApiUrl"
							}
						},
						{
							"id": 2832,
							"name": "functionArgs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 600,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2430,
									"name": "ClarityValue"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2817,
								"name": "ContractCallOptions.functionArgs"
							}
						},
						{
							"id": 2831,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 599,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2816,
								"name": "ContractCallOptions.functionName"
							}
						},
						{
							"id": 2836,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the Stacks blockchain network that will ultimately be used to broadcast this transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 607,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2821,
								"name": "ContractCallOptions.network"
							}
						},
						{
							"id": 2835,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 605,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2820,
								"name": "ContractCallOptions.nonce"
							}
						},
						{
							"id": 2838,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 613,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3088,
								"name": "PostConditionMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2823,
								"name": "ContractCallOptions.postConditionMode"
							}
						},
						{
							"id": 2839,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 615,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2390,
									"name": "PostCondition"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2824,
								"name": "ContractCallOptions.postConditions"
							}
						},
						{
							"id": 2828,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 624,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2841,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 620,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2826,
								"name": "ContractCallOptions.sponsored"
							}
						},
						{
							"id": 2840,
							"name": "validateWithAbi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true to validate that the supplied function args match those specified in\nthe published contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 618,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"id": 3324,
										"name": "ClarityAbi"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2825,
								"name": "ContractCallOptions.validateWithAbi"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2837,
								2829,
								2830,
								2833,
								2834,
								2832,
								2831,
								2836,
								2835,
								2838,
								2839,
								2828,
								2841,
								2840
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 623,
							"character": 44
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2813,
							"name": "ContractCallOptions"
						}
					]
				},
				{
					"id": 2857,
					"name": "UnsignedMultiSigContractCallOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2868,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 610,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3081,
								"name": "AnchorMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2822,
								"name": "ContractCallOptions.anchorMode"
							}
						},
						{
							"id": 2860,
							"name": "contractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the Stacks address of the contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 597,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2814,
								"name": "ContractCallOptions.contractAddress"
							}
						},
						{
							"id": 2861,
							"name": "contractName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 598,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2815,
								"name": "ContractCallOptions.contractName"
							}
						},
						{
							"id": 2864,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 602,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2818,
								"name": "ContractCallOptions.fee"
							}
						},
						{
							"id": 2865,
							"name": "feeEstimateApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 603,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2819,
								"name": "ContractCallOptions.feeEstimateApiUrl"
							}
						},
						{
							"id": 2863,
							"name": "functionArgs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 600,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2430,
									"name": "ClarityValue"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2817,
								"name": "ContractCallOptions.functionArgs"
							}
						},
						{
							"id": 2862,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 599,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2816,
								"name": "ContractCallOptions.functionName"
							}
						},
						{
							"id": 2867,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the Stacks blockchain network that will ultimately be used to broadcast this transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 607,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2821,
								"name": "ContractCallOptions.network"
							}
						},
						{
							"id": 2866,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 605,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2820,
								"name": "ContractCallOptions.nonce"
							}
						},
						{
							"id": 2858,
							"name": "numSignatures",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 632,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2869,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 613,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3088,
								"name": "PostConditionMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2823,
								"name": "ContractCallOptions.postConditionMode"
							}
						},
						{
							"id": 2870,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 615,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2390,
									"name": "PostCondition"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2824,
								"name": "ContractCallOptions.postConditions"
							}
						},
						{
							"id": 2859,
							"name": "publicKeys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 633,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2872,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 620,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2826,
								"name": "ContractCallOptions.sponsored"
							}
						},
						{
							"id": 2871,
							"name": "validateWithAbi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true to validate that the supplied function args match those specified in\nthe published contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 618,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"id": 3324,
										"name": "ClarityAbi"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2825,
								"name": "ContractCallOptions.validateWithAbi"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2868,
								2860,
								2861,
								2864,
								2865,
								2863,
								2862,
								2867,
								2866,
								2858,
								2869,
								2870,
								2859,
								2872,
								2871
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 631,
							"character": 52
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2813,
							"name": "ContractCallOptions"
						}
					]
				},
				{
					"id": 2775,
					"name": "UnsignedMultiSigTokenTransferOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2779,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the amount to be transfered in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 258,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2742,
								"name": "TokenTransferOptions.amount"
							}
						},
						{
							"id": 2783,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 267,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3081,
								"name": "AnchorMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2746,
								"name": "TokenTransferOptions.anchorMode"
							}
						},
						{
							"id": 2780,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 260,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2743,
								"name": "TokenTransferOptions.fee"
							}
						},
						{
							"id": 2784,
							"name": "memo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "an arbitrary string to include in the transaction, must be less than 34 bytes"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 269,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2747,
								"name": "TokenTransferOptions.memo"
							}
						},
						{
							"id": 2782,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the network that the transaction will ultimately be broadcast to"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 264,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2745,
								"name": "TokenTransferOptions.network"
							}
						},
						{
							"id": 2781,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 262,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2744,
								"name": "TokenTransferOptions.nonce"
							}
						},
						{
							"id": 2776,
							"name": "numSignatures",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 288,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2785,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 272,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3088,
								"name": "PostConditionMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2748,
								"name": "TokenTransferOptions.postConditionMode"
							}
						},
						{
							"id": 2786,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 274,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2390,
									"name": "PostCondition"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2749,
								"name": "TokenTransferOptions.postConditions"
							}
						},
						{
							"id": 2777,
							"name": "publicKeys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 289,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2778,
							"name": "recipient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the address of the recipient of the token transfer"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 256,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 2462,
										"name": "PrincipalCV"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2741,
								"name": "TokenTransferOptions.recipient"
							}
						},
						{
							"id": 2787,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 276,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2750,
								"name": "TokenTransferOptions.sponsored"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2779,
								2783,
								2780,
								2784,
								2782,
								2781,
								2776,
								2785,
								2786,
								2777,
								2778,
								2787
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 287,
							"character": 53
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2740,
							"name": "TokenTransferOptions"
						}
					]
				},
				{
					"id": 2751,
					"name": "UnsignedTokenTransferOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2754,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the amount to be transfered in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 258,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2742,
								"name": "TokenTransferOptions.amount"
							}
						},
						{
							"id": 2758,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 267,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3081,
								"name": "AnchorMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2746,
								"name": "TokenTransferOptions.anchorMode"
							}
						},
						{
							"id": 2755,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 260,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2743,
								"name": "TokenTransferOptions.fee"
							}
						},
						{
							"id": 2759,
							"name": "memo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "an arbitrary string to include in the transaction, must be less than 34 bytes"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 269,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2747,
								"name": "TokenTransferOptions.memo"
							}
						},
						{
							"id": 2757,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the network that the transaction will ultimately be broadcast to"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 264,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"id": 154,
								"name": "StacksNetwork"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2745,
								"name": "TokenTransferOptions.network"
							}
						},
						{
							"id": 2756,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 262,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2744,
								"name": "TokenTransferOptions.nonce"
							}
						},
						{
							"id": 2760,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 272,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3088,
								"name": "PostConditionMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2748,
								"name": "TokenTransferOptions.postConditionMode"
							}
						},
						{
							"id": 2761,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 274,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2390,
									"name": "PostCondition"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2749,
								"name": "TokenTransferOptions.postConditions"
							}
						},
						{
							"id": 2752,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 280,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2753,
							"name": "recipient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the address of the recipient of the token transfer"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 256,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 2462,
										"name": "PrincipalCV"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2741,
								"name": "TokenTransferOptions.recipient"
							}
						},
						{
							"id": 2762,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 276,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 2750,
								"name": "TokenTransferOptions.sponsored"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2754,
								2758,
								2755,
								2759,
								2757,
								2756,
								2760,
								2761,
								2752,
								2753,
								2762
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 279,
							"character": 45
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2740,
							"name": "TokenTransferOptions"
						}
					]
				},
				{
					"id": 2431,
					"name": "BooleanCV",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/booleanCV.ts",
							"line": 3,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 2432,
								"name": "TrueCV"
							},
							{
								"type": "reference",
								"id": 2434,
								"name": "FalseCV"
							}
						]
					}
				},
				{
					"id": 3209,
					"name": "ClarityAbiType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 46,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 3208,
								"name": "ClarityAbiTypePrimitive"
							},
							{
								"type": "reference",
								"id": 3166,
								"name": "ClarityAbiTypeBuffer"
							},
							{
								"type": "reference",
								"id": 3181,
								"name": "ClarityAbiTypeResponse"
							},
							{
								"type": "reference",
								"id": 3187,
								"name": "ClarityAbiTypeOptional"
							},
							{
								"type": "reference",
								"id": 3190,
								"name": "ClarityAbiTypeTuple"
							},
							{
								"type": "reference",
								"id": 3196,
								"name": "ClarityAbiTypeList"
							},
							{
								"type": "reference",
								"id": 3171,
								"name": "ClarityAbiTypeStringAscii"
							},
							{
								"type": "reference",
								"id": 3176,
								"name": "ClarityAbiTypeStringUtf8"
							},
							{
								"type": "reference",
								"id": 3206,
								"name": "ClarityAbiTypeTraitReference"
							}
						]
					}
				},
				{
					"id": 3204,
					"name": "ClarityAbiTypeBool",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 33,
							"character": 30
						}
					],
					"type": {
						"type": "literal",
						"value": "bool"
					}
				},
				{
					"id": 3166,
					"name": "ClarityAbiTypeBuffer",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 23,
							"character": 32
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3167,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3168,
									"name": "buffer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 23,
											"character": 43
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3169,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3170,
													"name": "length",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/transactions/src/contract-abi.ts",
															"line": 23,
															"character": 53
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														3170
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 23,
													"character": 44
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3168
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 23,
									"character": 34
								}
							]
						}
					}
				},
				{
					"id": 3203,
					"name": "ClarityAbiTypeInt128",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 32,
							"character": 32
						}
					],
					"type": {
						"type": "literal",
						"value": "int128"
					}
				},
				{
					"id": 3196,
					"name": "ClarityAbiTypeList",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 29,
							"character": 30
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3197,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3198,
									"name": "list",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 29,
											"character": 39
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3199,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3201,
													"name": "length",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/transactions/src/contract-abi.ts",
															"line": 29,
															"character": 71
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 3200,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/transactions/src/contract-abi.ts",
															"line": 29,
															"character": 47
														}
													],
													"type": {
														"type": "reference",
														"id": 3209,
														"name": "ClarityAbiType"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														3201,
														3200
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 29,
													"character": 40
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3198
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 29,
									"character": 32
								}
							]
						}
					}
				},
				{
					"id": 3207,
					"name": "ClarityAbiTypeNone",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 36,
							"character": 30
						}
					],
					"type": {
						"type": "literal",
						"value": "none"
					}
				},
				{
					"id": 3187,
					"name": "ClarityAbiTypeOptional",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 27,
							"character": 34
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3188,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3189,
									"name": "optional",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 27,
											"character": 47
										}
									],
									"type": {
										"type": "reference",
										"id": 3209,
										"name": "ClarityAbiType"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3189
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 27,
									"character": 36
								}
							]
						}
					}
				},
				{
					"id": 3208,
					"name": "ClarityAbiTypePrimitive",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 38,
							"character": 35
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 3202,
								"name": "ClarityAbiTypeUInt128"
							},
							{
								"type": "reference",
								"id": 3203,
								"name": "ClarityAbiTypeInt128"
							},
							{
								"type": "reference",
								"id": 3204,
								"name": "ClarityAbiTypeBool"
							},
							{
								"type": "reference",
								"id": 3205,
								"name": "ClarityAbiTypePrincipal"
							},
							{
								"type": "reference",
								"id": 3206,
								"name": "ClarityAbiTypeTraitReference"
							},
							{
								"type": "reference",
								"id": 3207,
								"name": "ClarityAbiTypeNone"
							}
						]
					}
				},
				{
					"id": 3205,
					"name": "ClarityAbiTypePrincipal",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 34,
							"character": 35
						}
					],
					"type": {
						"type": "literal",
						"value": "principal"
					}
				},
				{
					"id": 3181,
					"name": "ClarityAbiTypeResponse",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 26,
							"character": 34
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3182,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3183,
									"name": "response",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 26,
											"character": 47
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3184,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3186,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/transactions/src/contract-abi.ts",
															"line": 26,
															"character": 76
														}
													],
													"type": {
														"type": "reference",
														"id": 3209,
														"name": "ClarityAbiType"
													}
												},
												{
													"id": 3185,
													"name": "ok",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/transactions/src/contract-abi.ts",
															"line": 26,
															"character": 53
														}
													],
													"type": {
														"type": "reference",
														"id": 3209,
														"name": "ClarityAbiType"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														3186,
														3185
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 26,
													"character": 48
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3183
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 26,
									"character": 36
								}
							]
						}
					}
				},
				{
					"id": 3171,
					"name": "ClarityAbiTypeStringAscii",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 24,
							"character": 37
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3172,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3173,
									"name": "string-ascii",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 24,
											"character": 41
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3174,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3175,
													"name": "length",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/transactions/src/contract-abi.ts",
															"line": 24,
															"character": 66
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														3175
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 24,
													"character": 57
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3173
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 24,
									"character": 39
								}
							]
						}
					}
				},
				{
					"id": 3176,
					"name": "ClarityAbiTypeStringUtf8",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 25,
							"character": 36
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3177,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3178,
									"name": "string-utf8",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 25,
											"character": 40
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3179,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3180,
													"name": "length",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/transactions/src/contract-abi.ts",
															"line": 25,
															"character": 64
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														3180
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 25,
													"character": 55
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3178
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 25,
									"character": 38
								}
							]
						}
					}
				},
				{
					"id": 3206,
					"name": "ClarityAbiTypeTraitReference",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 35,
							"character": 40
						}
					],
					"type": {
						"type": "literal",
						"value": "trait_reference"
					}
				},
				{
					"id": 3190,
					"name": "ClarityAbiTypeTuple",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 28,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3191,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3192,
									"name": "tuple",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 28,
											"character": 41
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 3193,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 3194,
														"name": "name",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "packages/transactions/src/contract-abi.ts",
																"line": 28,
																"character": 49
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 3195,
														"name": "type",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "packages/transactions/src/contract-abi.ts",
																"line": 28,
																"character": 63
															}
														],
														"type": {
															"type": "reference",
															"id": 3209,
															"name": "ClarityAbiType"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"kind": 1024,
														"children": [
															3194,
															3195
														]
													}
												],
												"sources": [
													{
														"fileName": "packages/transactions/src/contract-abi.ts",
														"line": 28,
														"character": 42
													}
												]
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3192
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 28,
									"character": 33
								}
							]
						}
					}
				},
				{
					"id": 3202,
					"name": "ClarityAbiTypeUInt128",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 31,
							"character": 33
						}
					],
					"type": {
						"type": "literal",
						"value": "uint128"
					}
				},
				{
					"id": 3248,
					"name": "ClarityAbiTypeUnion",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 90,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 3249,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3250,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 91,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3211,
												"name": "ClarityAbiTypeId.ClarityAbiTypeUInt128"
											}
										},
										{
											"id": 3251,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 91,
													"character": 54
												}
											],
											"type": {
												"type": "reference",
												"id": 3202,
												"name": "ClarityAbiTypeUInt128"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3250,
												3251
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 91,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3252,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3253,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 92,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3212,
												"name": "ClarityAbiTypeId.ClarityAbiTypeInt128"
											}
										},
										{
											"id": 3254,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 92,
													"character": 53
												}
											],
											"type": {
												"type": "reference",
												"id": 3203,
												"name": "ClarityAbiTypeInt128"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3253,
												3254
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 92,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3255,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3256,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 93,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3213,
												"name": "ClarityAbiTypeId.ClarityAbiTypeBool"
											}
										},
										{
											"id": 3257,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 93,
													"character": 51
												}
											],
											"type": {
												"type": "reference",
												"id": 3204,
												"name": "ClarityAbiTypeBool"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3256,
												3257
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 93,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3258,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3259,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 94,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3214,
												"name": "ClarityAbiTypeId.ClarityAbiTypePrincipal"
											}
										},
										{
											"id": 3260,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 94,
													"character": 56
												}
											],
											"type": {
												"type": "reference",
												"id": 3205,
												"name": "ClarityAbiTypePrincipal"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3259,
												3260
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 94,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3261,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3262,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 95,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3223,
												"name": "ClarityAbiTypeId.ClarityAbiTypeTraitReference"
											}
										},
										{
											"id": 3263,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 95,
													"character": 61
												}
											],
											"type": {
												"type": "reference",
												"id": 3206,
												"name": "ClarityAbiTypeTraitReference"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3262,
												3263
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 95,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3264,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3265,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 96,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3215,
												"name": "ClarityAbiTypeId.ClarityAbiTypeNone"
											}
										},
										{
											"id": 3266,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 96,
													"character": 51
												}
											],
											"type": {
												"type": "reference",
												"id": 3207,
												"name": "ClarityAbiTypeNone"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3265,
												3266
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 96,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3267,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3268,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 97,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3216,
												"name": "ClarityAbiTypeId.ClarityAbiTypeBuffer"
											}
										},
										{
											"id": 3269,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 97,
													"character": 53
												}
											],
											"type": {
												"type": "reference",
												"id": 3166,
												"name": "ClarityAbiTypeBuffer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3268,
												3269
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 97,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3270,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3271,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 98,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3217,
												"name": "ClarityAbiTypeId.ClarityAbiTypeResponse"
											}
										},
										{
											"id": 3272,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 98,
													"character": 55
												}
											],
											"type": {
												"type": "reference",
												"id": 3181,
												"name": "ClarityAbiTypeResponse"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3271,
												3272
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 98,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3273,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3274,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 99,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3218,
												"name": "ClarityAbiTypeId.ClarityAbiTypeOptional"
											}
										},
										{
											"id": 3275,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 99,
													"character": 55
												}
											],
											"type": {
												"type": "reference",
												"id": 3187,
												"name": "ClarityAbiTypeOptional"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3274,
												3275
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 99,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3276,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3277,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 100,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3219,
												"name": "ClarityAbiTypeId.ClarityAbiTypeTuple"
											}
										},
										{
											"id": 3278,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 100,
													"character": 52
												}
											],
											"type": {
												"type": "reference",
												"id": 3190,
												"name": "ClarityAbiTypeTuple"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3277,
												3278
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 100,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3279,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3280,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 101,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3220,
												"name": "ClarityAbiTypeId.ClarityAbiTypeList"
											}
										},
										{
											"id": 3281,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 101,
													"character": 51
												}
											],
											"type": {
												"type": "reference",
												"id": 3196,
												"name": "ClarityAbiTypeList"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3280,
												3281
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 101,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3282,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3283,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 102,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3221,
												"name": "ClarityAbiTypeId.ClarityAbiTypeStringAscii"
											}
										},
										{
											"id": 3284,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 102,
													"character": 58
												}
											],
											"type": {
												"type": "reference",
												"id": 3171,
												"name": "ClarityAbiTypeStringAscii"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3283,
												3284
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 102,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3285,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3286,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 103,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3222,
												"name": "ClarityAbiTypeId.ClarityAbiTypeStringUtf8"
											}
										},
										{
											"id": 3287,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 103,
													"character": 57
												}
											],
											"type": {
												"type": "reference",
												"id": 3176,
												"name": "ClarityAbiTypeStringUtf8"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3286,
												3287
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 103,
											"character": 3
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 2430,
					"name": "ClarityValue",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/clarityValue.ts",
							"line": 44,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 2431,
								"name": "BooleanCV"
							},
							{
								"type": "reference",
								"id": 2442,
								"name": "BufferCV"
							},
							{
								"type": "reference",
								"id": 2436,
								"name": "IntCV"
							},
							{
								"type": "reference",
								"id": 2439,
								"name": "UIntCV"
							},
							{
								"type": "reference",
								"id": 2463,
								"name": "StandardPrincipalCV"
							},
							{
								"type": "reference",
								"id": 2466,
								"name": "ContractPrincipalCV"
							},
							{
								"type": "reference",
								"id": 2458,
								"name": "ResponseErrorCV"
							},
							{
								"type": "reference",
								"id": 2454,
								"name": "ResponseOkCV"
							},
							{
								"type": "reference",
								"id": 2447,
								"name": "NoneCV"
							},
							{
								"type": "reference",
								"id": 2449,
								"name": "SomeCV"
							},
							{
								"type": "reference",
								"id": 2470,
								"name": "ListCV"
							},
							{
								"type": "reference",
								"id": 2474,
								"name": "TupleCV"
							},
							{
								"type": "reference",
								"id": 2478,
								"name": "StringAsciiCV"
							},
							{
								"type": "reference",
								"id": 2481,
								"name": "StringUtf8CV"
							}
						]
					}
				},
				{
					"id": 3108,
					"name": "MultiSigHashMode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 98,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 3104,
								"name": "AddressHashMode.SerializeP2SH"
							},
							{
								"type": "reference",
								"id": 3106,
								"name": "AddressHashMode.SerializeP2WSH"
							}
						]
					}
				},
				{
					"id": 2445,
					"name": "OptionalCV",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/optionalCV.ts",
							"line": 3,
							"character": 15
						}
					],
					"typeParameter": [
						{
							"id": 2446,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2430,
								"name": "ClarityValue"
							},
							"default": {
								"type": "reference",
								"id": 2430,
								"name": "ClarityValue"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 2447,
								"name": "NoneCV"
							},
							{
								"type": "reference",
								"id": 2449,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "SomeCV"
							}
						]
					}
				},
				{
					"id": 2390,
					"name": "PostCondition",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/postcondition.ts",
							"line": 27,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "STXPostCondition"
							},
							{
								"type": "reference",
								"name": "FungiblePostCondition"
							},
							{
								"type": "reference",
								"name": "NonFungiblePostCondition"
							}
						]
					}
				},
				{
					"id": 3023,
					"name": "PostConditionPrincipal",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 241,
							"character": 34
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 3024,
								"name": "StandardPrincipal"
							},
							{
								"type": "reference",
								"id": 3028,
								"name": "ContractPrincipal"
							}
						]
					}
				},
				{
					"id": 2462,
					"name": "PrincipalCV",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/principalCV.ts",
							"line": 11,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 2463,
								"name": "StandardPrincipalCV"
							},
							{
								"type": "reference",
								"id": 2466,
								"name": "ContractPrincipalCV"
							}
						]
					}
				},
				{
					"id": 3991,
					"name": "ReadOnlyFunctionResponse",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 185,
							"character": 36
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 3985,
								"name": "ReadOnlyFunctionSuccessResponse"
							},
							{
								"type": "reference",
								"id": 3988,
								"name": "ReadOnlyFunctionErrorResponse"
							}
						]
					}
				},
				{
					"id": 2453,
					"name": "ResponseCV",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/responseCV.ts",
							"line": 3,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 2458,
								"name": "ResponseErrorCV"
							},
							{
								"type": "reference",
								"id": 2454,
								"name": "ResponseOkCV"
							}
						]
					}
				},
				{
					"id": 3107,
					"name": "SingleSigHashMode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 97,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 3103,
								"name": "AddressHashMode.SerializeP2PKH"
							},
							{
								"type": "reference",
								"id": 3105,
								"name": "AddressHashMode.SerializeP2WPKH"
							}
						]
					}
				},
				{
					"id": 2353,
					"name": "SpendingCondition",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 186,
							"character": 29
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 3438,
								"name": "SingleSigSpendingCondition"
							},
							{
								"type": "reference",
								"id": 3445,
								"name": "MultiSigSpendingCondition"
							}
						]
					}
				},
				{
					"id": 3018,
					"name": "StacksMessage",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 38,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 3019,
								"name": "Address"
							},
							{
								"type": "reference",
								"id": 3023,
								"name": "PostConditionPrincipal"
							},
							{
								"type": "reference",
								"id": 3033,
								"name": "LengthPrefixedString"
							},
							{
								"type": "reference",
								"id": 3046,
								"name": "LengthPrefixedList"
							},
							{
								"type": "reference",
								"name": "Payload"
							},
							{
								"type": "reference",
								"id": 3038,
								"name": "MemoString"
							},
							{
								"type": "reference",
								"id": 3041,
								"name": "AssetInfo"
							},
							{
								"type": "reference",
								"id": 2390,
								"name": "PostCondition"
							},
							{
								"type": "reference",
								"id": 2633,
								"name": "StacksPublicKey"
							},
							{
								"type": "reference",
								"id": 3434,
								"name": "TransactionAuthField"
							},
							{
								"type": "reference",
								"id": 2354,
								"name": "MessageSignature"
							}
						]
					}
				},
				{
					"id": 3433,
					"name": "TransactionAuthFieldContents",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 92,
							"character": 40
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 2633,
								"name": "StacksPublicKey"
							},
							{
								"type": "reference",
								"id": 2354,
								"name": "MessageSignature"
							}
						]
					}
				},
				{
					"id": 2735,
					"name": "TxBroadcastResult",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 149,
							"character": 29
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 2728,
								"name": "TxBroadcastResultOk"
							},
							{
								"type": "reference",
								"id": 2729,
								"name": "TxBroadcastResultRejected"
							}
						]
					}
				},
				{
					"id": 2728,
					"name": "TxBroadcastResultOk",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 142,
							"character": 31
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2729,
					"name": "TxBroadcastResultRejected",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 143,
							"character": 37
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2730,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 2731,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/builders.ts",
											"line": 144,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2732,
									"name": "reason",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/builders.ts",
											"line": 145,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 3130,
										"name": "TxRejectedReason"
									}
								},
								{
									"id": 2733,
									"name": "reason_data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/builders.ts",
											"line": 146,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2734,
									"name": "txid",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/builders.ts",
											"line": 147,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2731,
										2732,
										2733,
										2734
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 143,
									"character": 39
								}
							]
						}
					}
				},
				{
					"id": 3051,
					"name": "CLARITY_INT_SIZE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 11,
							"character": 22
						}
					],
					"type": {
						"type": "literal",
						"value": 128
					},
					"defaultValue": "128"
				},
				{
					"id": 3052,
					"name": "COINBASE_BUFFER_LENGTH_BYTES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 12,
							"character": 34
						}
					],
					"type": {
						"type": "literal",
						"value": 32
					},
					"defaultValue": "32"
				},
				{
					"id": 3056,
					"name": "COMPRESSED_PUBKEY_LENGTH_BYTES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 14,
							"character": 36
						}
					],
					"type": {
						"type": "literal",
						"value": 32
					},
					"defaultValue": "32"
				},
				{
					"id": 3053,
					"name": "DEFAULT_CHAIN_ID",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 9,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"id": 3062,
						"name": "Mainnet"
					},
					"defaultValue": "..."
				},
				{
					"id": 3059,
					"name": "DEFAULT_CORE_NODE_API_URL",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 17,
							"character": 31
						}
					],
					"type": {
						"type": "literal",
						"value": "https://stacks-node-api.mainnet.stacks.co"
					},
					"defaultValue": "'https://stacks-node-api.mainnet.stacks.co'"
				},
				{
					"id": 3054,
					"name": "DEFAULT_TRANSACTION_VERSION",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 66,
							"character": 33
						}
					],
					"type": {
						"type": "reference",
						"id": 3086,
						"name": "Mainnet"
					},
					"defaultValue": "..."
				},
				{
					"id": 3050,
					"name": "MAX_STRING_LENGTH_BYTES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 10,
							"character": 29
						}
					],
					"type": {
						"type": "literal",
						"value": 128
					},
					"defaultValue": "128"
				},
				{
					"id": 3058,
					"name": "MEMO_MAX_LENGTH_BYTES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 16,
							"character": 27
						}
					],
					"type": {
						"type": "literal",
						"value": 34
					},
					"defaultValue": "34"
				},
				{
					"id": 3055,
					"name": "RECOVERABLE_ECDSA_SIG_LENGTH_BYTES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 13,
							"character": 40
						}
					],
					"type": {
						"type": "literal",
						"value": 65
					},
					"defaultValue": "65"
				},
				{
					"id": 3057,
					"name": "UNCOMPRESSED_PUBKEY_LENGTH_BYTES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 15,
							"character": 38
						}
					],
					"type": {
						"type": "literal",
						"value": 64
					},
					"defaultValue": "64"
				},
				{
					"id": 3155,
					"name": "abiFunctionToString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 233,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 3156,
							"name": "abiFunctionToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3157,
									"name": "func",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3295,
										"name": "ClarityAbiFunction"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2925,
					"name": "addressFromHashMode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 177,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 2926,
							"name": "addressFromHashMode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2927,
									"name": "hashMode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3102,
										"name": "AddressHashMode"
									}
								},
								{
									"id": 2928,
									"name": "txVersion",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3085,
										"name": "TransactionVersion"
									}
								},
								{
									"id": 2929,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3019,
								"name": "Address"
							}
						}
					]
				},
				{
					"id": 2930,
					"name": "addressFromPublicKeys",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 186,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 2931,
							"name": "addressFromPublicKeys",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2932,
									"name": "version",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3109,
										"name": "AddressVersion"
									}
								},
								{
									"id": 2933,
									"name": "hashMode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3102,
										"name": "AddressHashMode"
									}
								},
								{
									"id": 2934,
									"name": "numSigs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2935,
									"name": "publicKeys",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 2633,
											"name": "StacksPublicKey"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3019,
								"name": "Address"
							}
						}
					]
				},
				{
					"id": 2917,
					"name": "addressFromVersionHash",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 135,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 2918,
							"name": "addressFromVersionHash",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2919,
									"name": "version",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3109,
										"name": "AddressVersion"
									}
								},
								{
									"id": 2920,
									"name": "hash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3019,
								"name": "Address"
							}
						}
					]
				},
				{
					"id": 2921,
					"name": "addressHashModeToVersion",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 143,
							"character": 40
						}
					],
					"signatures": [
						{
							"id": 2922,
							"name": "addressHashModeToVersion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Translates the tx auth hash mode to the corresponding address version.",
								"tags": [
									{
										"tag": "see",
										"text": "https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#transaction-authorization\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2923,
									"name": "hashMode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3102,
										"name": "AddressHashMode"
									}
								},
								{
									"id": 2924,
									"name": "txVersion",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3085,
										"name": "TransactionVersion"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3109,
								"name": "AddressVersion"
							}
						}
					]
				},
				{
					"id": 2936,
					"name": "addressToString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 222,
							"character": 31
						}
					],
					"signatures": [
						{
							"id": 2937,
							"name": "addressToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2938,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3019,
										"name": "Address"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2652,
					"name": "broadcastRawTransaction",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 178,
							"character": 45
						}
					],
					"signatures": [
						{
							"id": 2653,
							"name": "broadcastRawTransaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Broadcast the signed transaction to a core node",
								"returns": "that resolves to a response if the operation succeeds\n"
							},
							"parameters": [
								{
									"id": 2654,
									"name": "rawTx",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the raw serialized transaction buffer to broadcast"
									},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 2655,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the broadcast endpoint URL\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2656,
									"name": "attachment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2735,
										"name": "TxBroadcastResult"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 2647,
					"name": "broadcastTransaction",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 159,
							"character": 42
						}
					],
					"signatures": [
						{
							"id": 2648,
							"name": "broadcastTransaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Broadcast the signed transaction to a core node",
								"returns": "that resolves to a response if the operation succeeds\n"
							},
							"parameters": [
								{
									"id": 2649,
									"name": "transaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the token transfer transaction to broadcast"
									},
									"type": {
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								},
								{
									"id": 2650,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the Stacks network to broadcast transaction to\n"
									},
									"type": {
										"type": "reference",
										"id": 154,
										"name": "StacksNetwork"
									}
								},
								{
									"id": 2651,
									"name": "attachment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2735,
										"name": "TxBroadcastResult"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 2494,
					"name": "bufferCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/bufferCV.ts",
							"line": 9,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 2495,
							"name": "bufferCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2496,
									"name": "buffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2442,
								"name": "BufferCV"
							}
						}
					]
				},
				{
					"id": 2497,
					"name": "bufferCVFromString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/bufferCV.ts",
							"line": 17,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 2498,
							"name": "bufferCVFromString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2499,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2442,
								"name": "BufferCV"
							}
						}
					]
				},
				{
					"id": 2722,
					"name": "callReadOnlyFunction",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 1025,
							"character": 42
						}
					],
					"signatures": [
						{
							"id": 2723,
							"name": "callReadOnlyFunction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Calls a read only function from a contract interface",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 2724,
									"name": "readOnlyFunctionOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the options object\n\nReturns an object with a status bool (okay) and a result string that is a serialized clarity value in hex format.\n"
									},
									"type": {
										"type": "reference",
										"id": 2890,
										"name": "ReadOnlyFunctionOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 3452,
					"name": "cloneDeep",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 54,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 3453,
							"name": "cloneDeep",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 3454,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3455,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "T"
							}
						}
					]
				},
				{
					"id": 2979,
					"name": "codeBodyString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 375,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 2980,
							"name": "codeBodyString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2981,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3033,
								"name": "LengthPrefixedString"
							}
						}
					]
				},
				{
					"id": 2597,
					"name": "compressPublicKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 114,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 2598,
							"name": "compressPublicKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2599,
									"name": "publicKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2633,
								"name": "StacksPublicKey"
							}
						}
					]
				},
				{
					"id": 2520,
					"name": "contractPrincipalCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/principalCV.ts",
							"line": 53,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 2521,
							"name": "contractPrincipalCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2522,
									"name": "addressString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2523,
									"name": "contractName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2466,
								"name": "ContractPrincipalCV"
							}
						}
					]
				},
				{
					"id": 2524,
					"name": "contractPrincipalCVFromAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/principalCV.ts",
							"line": 59,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 2525,
							"name": "contractPrincipalCVFromAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2526,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3019,
										"name": "Address"
									}
								},
								{
									"id": 2527,
									"name": "contractName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3033,
										"name": "LengthPrefixedString"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2466,
								"name": "ContractPrincipalCV"
							}
						}
					]
				},
				{
					"id": 2528,
					"name": "contractPrincipalCVFromStandard",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/principalCV.ts",
							"line": 69,
							"character": 40
						}
					],
					"signatures": [
						{
							"id": 2529,
							"name": "contractPrincipalCVFromStandard",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2530,
									"name": "sp",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2463,
										"name": "StandardPrincipalCV"
									}
								},
								{
									"id": 2531,
									"name": "contractName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2466,
								"name": "ContractPrincipalCV"
							}
						}
					]
				},
				{
					"id": 2912,
					"name": "createAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 118,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 2913,
							"name": "createAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2914,
									"name": "c32AddressString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3019,
								"name": "Address"
							}
						}
					]
				},
				{
					"id": 2994,
					"name": "createAssetInfo",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 425,
							"character": 31
						}
					],
					"signatures": [
						{
							"id": 2995,
							"name": "createAssetInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2996,
									"name": "addressString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2997,
									"name": "contractName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2998,
									"name": "assetName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3041,
								"name": "AssetInfo"
							}
						}
					]
				},
				{
					"id": 2951,
					"name": "createContractPrincipal",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 282,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 2952,
							"name": "createContractPrincipal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2953,
									"name": "addressString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2954,
									"name": "contractName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3028,
								"name": "ContractPrincipal"
							}
						}
					]
				},
				{
					"id": 2915,
					"name": "createEmptyAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 127,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 2916,
							"name": "createEmptyAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 3019,
								"name": "Address"
							}
						}
					]
				},
				{
					"id": 2391,
					"name": "createFungiblePostCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/postcondition.ts",
							"line": 64,
							"character": 43
						}
					],
					"signatures": [
						{
							"id": 2392,
							"name": "createFungiblePostCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2393,
									"name": "principal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 3023,
												"name": "PostConditionPrincipal"
											}
										]
									}
								},
								{
									"id": 2394,
									"name": "conditionCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3117,
										"name": "FungibleConditionCode"
									}
								},
								{
									"id": 2395,
									"name": "amount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 2396,
									"name": "assetInfo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 3041,
												"name": "AssetInfo"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "FungiblePostCondition"
							}
						}
					]
				},
				{
					"id": 3005,
					"name": "createLPList",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 461,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 3006,
							"name": "createLPList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 3007,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3018,
										"name": "StacksMessage"
									}
								}
							],
							"parameters": [
								{
									"id": 3008,
									"name": "values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "T"
										}
									}
								},
								{
									"id": 3009,
									"name": "lengthPrefixBytes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3046,
								"name": "LengthPrefixedList"
							}
						}
					]
				},
				{
					"id": 2961,
					"name": "createLPString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 330,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 2962,
							"name": "createLPString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2963,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3033,
								"name": "LengthPrefixedString"
							}
						},
						{
							"id": 2964,
							"name": "createLPString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2965,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2966,
									"name": "lengthPrefixBytes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3033,
								"name": "LengthPrefixedString"
							}
						},
						{
							"id": 2967,
							"name": "createLPString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2968,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2969,
									"name": "lengthPrefixBytes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2970,
									"name": "maxLengthBytes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3033,
								"name": "LengthPrefixedString"
							}
						}
					]
				},
				{
					"id": 2982,
					"name": "createMemoString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 384,
							"character": 32
						}
					],
					"signatures": [
						{
							"id": 2983,
							"name": "createMemoString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2984,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3038,
								"name": "MemoString"
							}
						}
					]
				},
				{
					"id": 2357,
					"name": "createMessageSignature",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 54,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 2358,
							"name": "createMessageSignature",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2359,
									"name": "signature",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2354,
								"name": "MessageSignature"
							}
						}
					]
				},
				{
					"id": 3379,
					"name": "createMultiSigSpendingCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 210,
							"character": 47
						}
					],
					"signatures": [
						{
							"id": 3380,
							"name": "createMultiSigSpendingCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3381,
									"name": "hashMode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3108,
										"name": "MultiSigHashMode"
									}
								},
								{
									"id": 3382,
									"name": "numSigs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3383,
									"name": "pubKeys",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 3384,
									"name": "nonce",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 3385,
									"name": "fee",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3445,
								"name": "MultiSigSpendingCondition"
							}
						}
					]
				},
				{
					"id": 2397,
					"name": "createNonFungiblePostCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/postcondition.ts",
							"line": 98,
							"character": 46
						}
					],
					"signatures": [
						{
							"id": 2398,
							"name": "createNonFungiblePostCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2399,
									"name": "principal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 3023,
												"name": "PostConditionPrincipal"
											}
										]
									}
								},
								{
									"id": 2400,
									"name": "conditionCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3123,
										"name": "NonFungibleConditionCode"
									}
								},
								{
									"id": 2401,
									"name": "assetInfo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 3041,
												"name": "AssetInfo"
											}
										]
									}
								},
								{
									"id": 2402,
									"name": "assetName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NonFungiblePostCondition"
							}
						}
					]
				},
				{
					"id": 2403,
					"name": "createSTXPostCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/postcondition.ts",
							"line": 37,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 2404,
							"name": "createSTXPostCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2405,
									"name": "principal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 3023,
												"name": "PostConditionPrincipal"
											}
										]
									}
								},
								{
									"id": 2406,
									"name": "conditionCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3117,
										"name": "FungibleConditionCode"
									}
								},
								{
									"id": 2407,
									"name": "amount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "STXPostCondition"
							}
						}
					]
				},
				{
					"id": 3373,
					"name": "createSingleSigSpendingCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 188,
							"character": 48
						}
					],
					"signatures": [
						{
							"id": 3374,
							"name": "createSingleSigSpendingCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3375,
									"name": "hashMode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3107,
										"name": "SingleSigHashMode"
									}
								},
								{
									"id": 3376,
									"name": "pubKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3377,
									"name": "nonce",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 3378,
									"name": "fee",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3438,
								"name": "SingleSigSpendingCondition"
							}
						}
					]
				},
				{
					"id": 2603,
					"name": "createStacksPrivateKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 135,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 2604,
							"name": "createStacksPrivateKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2605,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2636,
								"name": "StacksPrivateKey"
							}
						}
					]
				},
				{
					"id": 2574,
					"name": "createStacksPublicKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 57,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 2575,
							"name": "createStacksPublicKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2576,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2633,
								"name": "StacksPublicKey"
							}
						}
					]
				},
				{
					"id": 2948,
					"name": "createStandardPrincipal",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 273,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 2949,
							"name": "createStandardPrincipal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2950,
									"name": "addressString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3024,
								"name": "StandardPrincipal"
							}
						}
					]
				},
				{
					"id": 3363,
					"name": "createTransactionAuthField",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 100,
							"character": 42
						}
					],
					"signatures": [
						{
							"id": 3364,
							"name": "createTransactionAuthField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3365,
									"name": "pubKeyEncoding",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3114,
										"name": "PubKeyEncoding"
									}
								},
								{
									"id": 3366,
									"name": "contents",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3433,
										"name": "TransactionAuthFieldContents"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3434,
								"name": "TransactionAuthField"
							}
						}
					]
				},
				{
					"id": 3469,
					"name": "cvToHex",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 156,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 3470,
							"name": "cvToHex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts a clarity value to a hex encoded string with `0x` prefix"
							},
							"parameters": [
								{
									"id": 3471,
									"name": "cv",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the clarity value to convert\n"
									},
									"type": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2560,
					"name": "cvToJSON",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/clarityValue.ts",
							"line": 140,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 2561,
							"name": "cvToJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2562,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 2556,
					"name": "cvToString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/clarityValue.ts",
							"line": 60,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 2557,
							"name": "cvToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2558,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									}
								},
								{
									"id": 2559,
									"name": "encoding",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "tryAscii"
											},
											{
												"type": "literal",
												"value": "hex"
											}
										]
									},
									"defaultValue": "'hex'"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2563,
					"name": "cvToValue",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/clarityValue.ts",
							"line": 102,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 2564,
							"name": "cvToValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2565,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 2942,
					"name": "deserializeAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 234,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 2943,
							"name": "deserializeAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2944,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2200,
										"name": "BufferReader"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3019,
								"name": "Address"
							}
						}
					]
				},
				{
					"id": 3002,
					"name": "deserializeAssetInfo",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 446,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 3003,
							"name": "deserializeAssetInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3004,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2200,
										"name": "BufferReader"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3041,
								"name": "AssetInfo"
							}
						}
					]
				},
				{
					"id": 2552,
					"name": "deserializeCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/deserialize.ts",
							"line": 24,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 2553,
							"name": "deserializeCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 2554,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									},
									"default": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									}
								}
							],
							"parameters": [
								{
									"id": 2555,
									"name": "serializedClarityValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 2200,
												"name": "BufferReader"
											},
											{
												"type": "reference",
												"name": "Buffer"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "T"
							}
						}
					]
				},
				{
					"id": 3013,
					"name": "deserializeLPList",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 482,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 3014,
							"name": "deserializeLPList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3015,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2200,
										"name": "BufferReader"
									}
								},
								{
									"id": 3016,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3063,
										"name": "StacksMessageType"
									}
								},
								{
									"id": 3017,
									"name": "lengthPrefixBytes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3046,
								"name": "LengthPrefixedList"
							}
						}
					]
				},
				{
					"id": 2974,
					"name": "deserializeLPString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 364,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 2975,
							"name": "deserializeLPString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2976,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2200,
										"name": "BufferReader"
									}
								},
								{
									"id": 2977,
									"name": "prefixBytes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2978,
									"name": "maxLength",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3033,
								"name": "LengthPrefixedString"
							}
						}
					]
				},
				{
					"id": 2988,
					"name": "deserializeMemoString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 402,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 2989,
							"name": "deserializeMemoString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2990,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2200,
										"name": "BufferReader"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3038,
								"name": "MemoString"
							}
						}
					]
				},
				{
					"id": 3360,
					"name": "deserializeMessageSignature",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 79,
							"character": 43
						}
					],
					"signatures": [
						{
							"id": 3361,
							"name": "deserializeMessageSignature",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3362,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2200,
										"name": "BufferReader"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2354,
								"name": "MessageSignature"
							}
						}
					]
				},
				{
					"id": 3396,
					"name": "deserializeMultiSigSpendingCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 299,
							"character": 52
						}
					],
					"signatures": [
						{
							"id": 3397,
							"name": "deserializeMultiSigSpendingCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3398,
									"name": "hashMode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3108,
										"name": "MultiSigHashMode"
									}
								},
								{
									"id": 3399,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2200,
										"name": "BufferReader"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3445,
								"name": "MultiSigSpendingCondition"
							}
						}
					]
				},
				{
					"id": 2411,
					"name": "deserializePostCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/postcondition.ts",
							"line": 149,
							"character": 40
						}
					],
					"signatures": [
						{
							"id": 2412,
							"name": "deserializePostCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2413,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2200,
										"name": "BufferReader"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2390,
								"name": "PostCondition"
							}
						}
					]
				},
				{
					"id": 2958,
					"name": "deserializePrincipal",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 306,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 2959,
							"name": "deserializePrincipal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2960,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2200,
										"name": "BufferReader"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3023,
								"name": "PostConditionPrincipal"
							}
						}
					]
				},
				{
					"id": 2600,
					"name": "deserializePublicKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 121,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 2601,
							"name": "deserializePublicKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2602,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2200,
										"name": "BufferReader"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2633,
								"name": "StacksPublicKey"
							}
						}
					]
				},
				{
					"id": 3392,
					"name": "deserializeSingleSigSpendingCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 277,
							"character": 53
						}
					],
					"signatures": [
						{
							"id": 3393,
							"name": "deserializeSingleSigSpendingCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3394,
									"name": "hashMode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3107,
										"name": "SingleSigHashMode"
									}
								},
								{
									"id": 3395,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2200,
										"name": "BufferReader"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3438,
								"name": "SingleSigSpendingCondition"
							}
						}
					]
				},
				{
					"id": 3403,
					"name": "deserializeSpendingCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 330,
							"character": 44
						}
					],
					"signatures": [
						{
							"id": 3404,
							"name": "deserializeSpendingCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3405,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2200,
										"name": "BufferReader"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2353,
								"name": "SpendingCondition"
							}
						}
					]
				},
				{
					"id": 2907,
					"name": "deserializeStacksMessage",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 78,
							"character": 40
						}
					],
					"signatures": [
						{
							"id": 2908,
							"name": "deserializeStacksMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2909,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2200,
										"name": "BufferReader"
									}
								},
								{
									"id": 2910,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3063,
										"name": "StacksMessageType"
									}
								},
								{
									"id": 2911,
									"name": "listType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3063,
										"name": "StacksMessageType"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3018,
								"name": "StacksMessage"
							}
						}
					]
				},
				{
					"id": 2197,
					"name": "deserializeTransaction",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/transaction.ts",
							"line": 252,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 2198,
							"name": "deserializeTransaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {},
							"parameters": [
								{
									"id": 2199,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Buffer or hex string\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 2200,
												"name": "BufferReader"
											},
											{
												"type": "reference",
												"name": "Buffer"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2138,
								"name": "StacksTransaction"
							}
						}
					]
				},
				{
					"id": 3370,
					"name": "deserializeTransactionAuthField",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 137,
							"character": 47
						}
					],
					"signatures": [
						{
							"id": 3371,
							"name": "deserializeTransactionAuthField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3372,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2200,
										"name": "BufferReader"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3434,
								"name": "TransactionAuthField"
							}
						}
					]
				},
				{
					"id": 2360,
					"name": "emptyMessageSignature",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 66,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 2361,
							"name": "emptyMessageSignature",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2354,
								"name": "MessageSignature"
							}
						}
					]
				},
				{
					"id": 3288,
					"name": "encodeClarityValue",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 141,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 3289,
							"name": "encodeClarityValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3290,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3209,
										"name": "ClarityAbiType"
									}
								},
								{
									"id": 3291,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2430,
								"name": "ClarityValue"
							}
						},
						{
							"id": 3292,
							"name": "encodeClarityValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3293,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3248,
										"name": "ClarityAbiTypeUnion"
									}
								},
								{
									"id": 3294,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2430,
								"name": "ClarityValue"
							}
						}
					]
				},
				{
					"id": 2668,
					"name": "estimateContractDeploy",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 464,
							"character": 44
						}
					],
					"signatures": [
						{
							"id": 2669,
							"name": "estimateContractDeploy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Estimate the total transaction fee in microstacks for a contract deploy",
								"returns": "a promise that resolves to number of microstacks per byte\n"
							},
							"parameters": [
								{
									"id": 2670,
									"name": "transaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the token transfer transaction to estimate fees for"
									},
									"type": {
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								},
								{
									"id": 2671,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "the Stacks network to estimate transaction for\n"
									},
									"type": {
										"type": "reference",
										"id": 154,
										"name": "StacksNetwork"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "BigNum"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 2675,
					"name": "estimateContractFunctionCall",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 650,
							"character": 50
						}
					],
					"signatures": [
						{
							"id": 2676,
							"name": "estimateContractFunctionCall",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Estimate the total transaction fee in microstacks for a contract function call",
								"returns": "a promise that resolves to number of microstacks per byte\n"
							},
							"parameters": [
								{
									"id": 2677,
									"name": "transaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the token transfer transaction to estimate fees for"
									},
									"type": {
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								},
								{
									"id": 2678,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "the Stacks network to estimate transaction for\n"
									},
									"type": {
										"type": "reference",
										"id": 154,
										"name": "StacksNetwork"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "BigNum"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 2643,
					"name": "estimateTransfer",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 100,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 2644,
							"name": "estimateTransfer",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Estimate the total transaction fee in microstacks for a token transfer",
								"returns": "a promise that resolves to number of microstacks per byte\n"
							},
							"parameters": [
								{
									"id": 2645,
									"name": "transaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the token transfer transaction to estimate fees for"
									},
									"type": {
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								},
								{
									"id": 2646,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "the Stacks network to estimate transaction for\n"
									},
									"type": {
										"type": "reference",
										"id": 154,
										"name": "StacksNetwork"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "BigNum"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 3511,
					"name": "exceedsMaxLengthBytes",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 51,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 3512,
							"name": "exceedsMaxLengthBytes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3513,
									"name": "string",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3514,
									"name": "maxLengthBytes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 2486,
					"name": "falseCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/booleanCV.ts",
							"line": 14,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 2487,
							"name": "falseCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2431,
								"name": "BooleanCV"
							}
						}
					]
				},
				{
					"id": 2657,
					"name": "getAbi",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 220,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 2658,
							"name": "getAbi",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fetch a contract's ABI",
								"returns": "that resolves to a ClarityAbi if the operation succeeds\n"
							},
							"parameters": [
								{
									"id": 2659,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the contracts address"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2660,
									"name": "contractName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the contracts name"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2661,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the Stacks network to broadcast transaction to\n"
									},
									"type": {
										"type": "reference",
										"id": 154,
										"name": "StacksNetwork"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3324,
										"name": "ClarityAbi"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 2566,
					"name": "getAddressFromPrivateKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 35,
							"character": 40
						}
					],
					"signatures": [
						{
							"id": 2567,
							"name": "getAddressFromPrivateKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a P2PKH address string from the given private key and tx version."
							},
							"parameters": [
								{
									"id": 2568,
									"name": "privateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer"
											}
										]
									}
								},
								{
									"id": 2569,
									"name": "transactionVersion",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3085,
										"name": "TransactionVersion"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2570,
					"name": "getAddressFromPublicKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 45,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 2571,
							"name": "getAddressFromPublicKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a P2PKH address string from the given public key and tx version."
							},
							"parameters": [
								{
									"id": 2572,
									"name": "publicKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer"
											}
										]
									}
								},
								{
									"id": 2573,
									"name": "transactionVersion",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3085,
										"name": "TransactionVersion"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2546,
					"name": "getCVTypeString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/clarityValue.ts",
							"line": 151,
							"character": 31
						}
					],
					"signatures": [
						{
							"id": 2547,
							"name": "getCVTypeString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2548,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2639,
					"name": "getNonce",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 72,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 2640,
							"name": "getNonce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Lookup the nonce for an address from a core node",
								"returns": "a promise that resolves to an integer\n"
							},
							"parameters": [
								{
									"id": 2641,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the c32check address to look up"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2642,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "the Stacks network to look up address on\n"
									},
									"type": {
										"type": "reference",
										"id": 154,
										"name": "StacksNetwork"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "BigNum"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 2623,
					"name": "getPublicKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 203,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 2624,
							"name": "getPublicKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2625,
									"name": "privateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2636,
										"name": "StacksPrivateKey"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2633,
								"name": "StacksPublicKey"
							}
						}
					]
				},
				{
					"id": 2613,
					"name": "getSignatureRecoveryParam",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 179,
							"character": 41
						}
					],
					"signatures": [
						{
							"id": 2614,
							"name": "getSignatureRecoveryParam",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2615,
									"name": "signature",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 3152,
					"name": "getTypeString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 194,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 3153,
							"name": "getTypeString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3154,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3209,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3149,
					"name": "getTypeUnion",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 105,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 3150,
							"name": "getTypeUnion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3151,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3209,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3248,
								"name": "ClarityAbiTypeUnion"
							}
						}
					]
				},
				{
					"id": 3975,
					"name": "hash160",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 100,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 3976,
							"name": "hash160",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3977,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 3978,
					"name": "hashP2PKH",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 107,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 3979,
							"name": "hashP2PKH",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3980,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3981,
					"name": "hashP2SH",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 113,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 3982,
							"name": "hashP2SH",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3983,
									"name": "numSigs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3984,
									"name": "pubKeys",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "Buffer"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3508,
					"name": "hexStringToInt",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 49,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 3509,
							"name": "hexStringToInt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3510,
									"name": "hexString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 3472,
					"name": "hexToCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 165,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 3473,
							"name": "hexToCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts a hex encoded string to a clarity value"
							},
							"parameters": [
								{
									"id": 3474,
									"name": "hex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the hex encoded string with or without `0x` prefix\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2430,
								"name": "ClarityValue"
							}
						}
					]
				},
				{
					"id": 2488,
					"name": "intCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/intCV.ts",
							"line": 12,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 2489,
							"name": "intCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2490,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "Buffer"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2436,
								"name": "IntCV"
							}
						}
					]
				},
				{
					"id": 3504,
					"name": "intToHexString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 46,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 3505,
							"name": "intToHexString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3506,
									"name": "integer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3507,
									"name": "lengthBytes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "8"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3227,
					"name": "isClarityAbiBuffer",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 75,
							"character": 31
						}
					],
					"signatures": [
						{
							"id": 3228,
							"name": "isClarityAbiBuffer",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3229,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3209,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "val",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 3166,
									"name": "ClarityAbiTypeBuffer"
								}
							}
						}
					]
				},
				{
					"id": 3245,
					"name": "isClarityAbiList",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 87,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 3246,
							"name": "isClarityAbiList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3247,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3209,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "val",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 3196,
									"name": "ClarityAbiTypeList"
								}
							}
						}
					]
				},
				{
					"id": 3239,
					"name": "isClarityAbiOptional",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 83,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 3240,
							"name": "isClarityAbiOptional",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3241,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3209,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "val",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 3187,
									"name": "ClarityAbiTypeOptional"
								}
							}
						}
					]
				},
				{
					"id": 3224,
					"name": "isClarityAbiPrimitive",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 73,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 3225,
							"name": "isClarityAbiPrimitive",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3226,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3209,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "val",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 3208,
									"name": "ClarityAbiTypePrimitive"
								}
							}
						}
					]
				},
				{
					"id": 3236,
					"name": "isClarityAbiResponse",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 81,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 3237,
							"name": "isClarityAbiResponse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3238,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3209,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "val",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 3181,
									"name": "ClarityAbiTypeResponse"
								}
							}
						}
					]
				},
				{
					"id": 3230,
					"name": "isClarityAbiStringAscii",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 77,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 3231,
							"name": "isClarityAbiStringAscii",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3232,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3209,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "val",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 3171,
									"name": "ClarityAbiTypeStringAscii"
								}
							}
						}
					]
				},
				{
					"id": 3233,
					"name": "isClarityAbiStringUtf8",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 79,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 3234,
							"name": "isClarityAbiStringUtf8",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3235,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3209,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "val",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 3176,
									"name": "ClarityAbiTypeStringUtf8"
								}
							}
						}
					]
				},
				{
					"id": 3242,
					"name": "isClarityAbiTuple",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 85,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 3243,
							"name": "isClarityAbiTuple",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3244,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3209,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "val",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 3190,
									"name": "ClarityAbiTypeTuple"
								}
							}
						}
					]
				},
				{
					"id": 3462,
					"name": "isClarityName",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 137,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 3463,
							"name": "isClarityName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3464,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 2585,
					"name": "isCompressed",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 92,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 2586,
							"name": "isCompressed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2587,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2633,
										"name": "StacksPublicKey"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 2362,
					"name": "isSingleSig",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 232,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 2363,
							"name": "isSingleSig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2364,
									"name": "condition",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2353,
										"name": "SpendingCondition"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "condition",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 3438,
									"name": "SingleSigSpendingCondition"
								}
							}
						}
					]
				},
				{
					"id": 3493,
					"name": "leftPadHex",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 37,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 3494,
							"name": "leftPadHex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3495,
									"name": "hexString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3496,
					"name": "leftPadHexToLength",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 40,
							"character": 31
						}
					],
					"signatures": [
						{
							"id": 3497,
							"name": "leftPadHexToLength",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3498,
									"name": "hexString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3499,
									"name": "length",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2532,
					"name": "listCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/listCV.ts",
							"line": 8,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 2533,
							"name": "listCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 2534,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									},
									"default": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									}
								}
							],
							"parameters": [
								{
									"id": 2535,
									"name": "values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "T"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2470,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "ListCV"
							}
						}
					]
				},
				{
					"id": 2682,
					"name": "makeContractCall",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 809,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 2683,
							"name": "makeContractCall",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a Clarity smart contract function call transaction",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 2684,
									"name": "txOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "an options object for the contract function call\n\nReturns a signed Stacks smart contract function call transaction.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 2842,
												"name": "SignedContractCallOptions"
											},
											{
												"type": "reference",
												"id": 2873,
												"name": "SignedMultiSigContractCallOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 2672,
					"name": "makeContractDeploy",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 517,
							"character": 40
						}
					],
					"signatures": [
						{
							"id": 2673,
							"name": "makeContractDeploy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a Clarity smart contract deploy transaction",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 2674,
									"name": "txOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "an options object for the contract deploy\n\nReturns a signed Stacks smart contract deploy transaction.\n"
									},
									"type": {
										"type": "reference",
										"id": 2802,
										"name": "ContractDeployOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 2702,
					"name": "makeContractFungiblePostCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 925,
							"character": 49
						}
					],
					"signatures": [
						{
							"id": 2703,
							"name": "makeContractFungiblePostCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a fungible token post condition with a contract principal",
								"text": "Returns a fungible token post condition object\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 2704,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the c32check address"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2705,
									"name": "contractName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the name of the contract"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2706,
									"name": "conditionCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the condition code"
									},
									"type": {
										"type": "reference",
										"id": 3117,
										"name": "FungibleConditionCode"
									}
								},
								{
									"id": 2707,
									"name": "amount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the amount of fungible tokens"
									},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 2708,
									"name": "assetInfo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "asset info describing the fungible token\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 3041,
												"name": "AssetInfo"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "FungiblePostCondition"
							}
						}
					]
				},
				{
					"id": 2715,
					"name": "makeContractNonFungiblePostCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 979,
							"character": 52
						}
					],
					"signatures": [
						{
							"id": 2716,
							"name": "makeContractNonFungiblePostCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a non-fungible token post condition with a contract principal",
								"text": "Returns a non-fungible token post condition object\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 2717,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the c32check address"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2718,
									"name": "contractName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the name of the contract"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2719,
									"name": "conditionCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the condition code"
									},
									"type": {
										"type": "reference",
										"id": 3123,
										"name": "NonFungibleConditionCode"
									}
								},
								{
									"id": 2720,
									"name": "assetInfo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "asset info describing the non-fungible token"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 3041,
												"name": "AssetInfo"
											}
										]
									}
								},
								{
									"id": 2721,
									"name": "assetName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "asset name describing the non-fungible token\n"
									},
									"type": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NonFungiblePostCondition"
							}
						}
					]
				},
				{
					"id": 2690,
					"name": "makeContractSTXPostCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 873,
							"character": 44
						}
					],
					"signatures": [
						{
							"id": 2691,
							"name": "makeContractSTXPostCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a STX post condition with a contract principal",
								"text": "Returns a STX post condition object\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 2692,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the c32check address of the contract"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2693,
									"name": "contractName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the name of the contract"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2694,
									"name": "conditionCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the condition code"
									},
									"type": {
										"type": "reference",
										"id": 3117,
										"name": "FungibleConditionCode"
									}
								},
								{
									"id": 2695,
									"name": "amount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the amount of STX tokens\n"
									},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "STXPostCondition"
							}
						}
					]
				},
				{
					"id": 2606,
					"name": "makeRandomPrivKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 156,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 2607,
							"name": "makeRandomPrivKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2608,
									"name": "entropy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2636,
								"name": "StacksPrivateKey"
							}
						}
					]
				},
				{
					"id": 2665,
					"name": "makeSTXTokenTransfer",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 396,
							"character": 42
						}
					],
					"signatures": [
						{
							"id": 2666,
							"name": "makeSTXTokenTransfer",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a signed Stacks token transfer transaction",
								"text": "Returns a signed Stacks token transfer transaction.\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 2667,
									"name": "txOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "an options object for the token transfer\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 2763,
												"name": "SignedTokenTransferOptions"
											},
											{
												"type": "reference",
												"id": 2788,
												"name": "SignedMultiSigTokenTransferOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 3406,
					"name": "makeSigHashPreSign",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 342,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 3407,
							"name": "makeSigHashPreSign",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3408,
									"name": "curSigHash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3409,
									"name": "authType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3099,
										"name": "AuthType"
									}
								},
								{
									"id": 3410,
									"name": "fee",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 3411,
									"name": "nonce",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2696,
					"name": "makeStandardFungiblePostCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 898,
							"character": 49
						}
					],
					"signatures": [
						{
							"id": 2697,
							"name": "makeStandardFungiblePostCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a fungible token post condition with a standard principal",
								"text": "Returns a fungible token post condition object\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 2698,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the c32check address"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2699,
									"name": "conditionCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the condition code"
									},
									"type": {
										"type": "reference",
										"id": 3117,
										"name": "FungibleConditionCode"
									}
								},
								{
									"id": 2700,
									"name": "amount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the amount of fungible tokens"
									},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 2701,
									"name": "assetInfo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "asset info describing the fungible token\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 3041,
												"name": "AssetInfo"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "FungiblePostCondition"
							}
						}
					]
				},
				{
					"id": 2709,
					"name": "makeStandardNonFungiblePostCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 952,
							"character": 52
						}
					],
					"signatures": [
						{
							"id": 2710,
							"name": "makeStandardNonFungiblePostCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a non-fungible token post condition with a standard principal",
								"text": "Returns a non-fungible token post condition object\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 2711,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the c32check address"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2712,
									"name": "conditionCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the condition code"
									},
									"type": {
										"type": "reference",
										"id": 3123,
										"name": "NonFungibleConditionCode"
									}
								},
								{
									"id": 2713,
									"name": "assetInfo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "asset info describing the non-fungible token"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 3041,
												"name": "AssetInfo"
											}
										]
									}
								},
								{
									"id": 2714,
									"name": "assetName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "asset name describing the non-fungible token\n"
									},
									"type": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "NonFungiblePostCondition"
							}
						}
					]
				},
				{
					"id": 2685,
					"name": "makeStandardSTXPostCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 853,
							"character": 44
						}
					],
					"signatures": [
						{
							"id": 2686,
							"name": "makeStandardSTXPostCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a STX post condition with a standard principal",
								"text": "Returns a STX post condition object\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 2687,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the c32check address"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2688,
									"name": "conditionCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the condition code"
									},
									"type": {
										"type": "reference",
										"id": 3117,
										"name": "FungibleConditionCode"
									}
								},
								{
									"id": 2689,
									"name": "amount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the amount of STX tokens\n"
									},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "STXPostCondition"
							}
						}
					]
				},
				{
					"id": 2679,
					"name": "makeUnsignedContractCall",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 701,
							"character": 46
						}
					],
					"signatures": [
						{
							"id": 2680,
							"name": "makeUnsignedContractCall",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates an unsigned Clarity smart contract function call transaction",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 2681,
									"name": "txOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "an options object for the contract call\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 2827,
												"name": "UnsignedContractCallOptions"
											},
											{
												"type": "reference",
												"id": 2857,
												"name": "UnsignedMultiSigContractCallOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 2662,
					"name": "makeUnsignedSTXTokenTransfer",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 307,
							"character": 50
						}
					],
					"signatures": [
						{
							"id": 2663,
							"name": "makeUnsignedSTXTokenTransfer",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates an unsigned Stacks token transfer transaction",
								"text": "Returns a Stacks token transfer transaction.\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 2664,
									"name": "txOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "an options object for the token transfer\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 2751,
												"name": "UnsignedTokenTransferOptions"
											},
											{
												"type": "reference",
												"id": 2775,
												"name": "UnsignedMultiSigTokenTransferOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 3412,
					"name": "nextSignature",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 394,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 3413,
							"name": "nextSignature",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3414,
									"name": "curSigHash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3415,
									"name": "authType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3099,
										"name": "AuthType"
									}
								},
								{
									"id": 3416,
									"name": "fee",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 3417,
									"name": "nonce",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 3418,
									"name": "privateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2636,
										"name": "StacksPrivateKey"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3419,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3420,
											"name": "nextSig",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/authorization.ts",
													"line": 401,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 2354,
												"name": "MessageSignature"
											}
										},
										{
											"id": 3421,
											"name": "nextSigHash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/authorization.ts",
													"line": 402,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3420,
												3421
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/authorization.ts",
											"line": 400,
											"character": 2
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 3422,
					"name": "nextVerification",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 416,
							"character": 32
						}
					],
					"signatures": [
						{
							"id": 3423,
							"name": "nextVerification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3424,
									"name": "initialSigHash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3425,
									"name": "authType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3099,
										"name": "AuthType"
									}
								},
								{
									"id": 3426,
									"name": "fee",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 3427,
									"name": "nonce",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 3428,
									"name": "pubKeyEncoding",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3114,
										"name": "PubKeyEncoding"
									}
								},
								{
									"id": 3429,
									"name": "signature",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2354,
										"name": "MessageSignature"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3430,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3432,
											"name": "nextSigHash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3431,
											"name": "pubKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2633,
												"name": "StacksPublicKey"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3432,
												3431
											]
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 2500,
					"name": "noneCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/optionalCV.ts",
							"line": 14,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 2501,
							"name": "noneCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2447,
								"name": "NoneCV"
							}
						}
					]
				},
				{
					"id": 3456,
					"name": "omit",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 58,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 3457,
							"name": "omit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 3458,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 3459,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 3460,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "T"
									}
								},
								{
									"id": 3461,
									"name": "prop",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									},
									{
										"type": "reference",
										"name": "K"
									}
								],
								"name": "Omit"
							}
						}
					]
				},
				{
					"id": 2991,
					"name": "parseAssetInfoString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 419,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 2992,
							"name": "parseAssetInfoString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Parse a fully qualified string that identifies the token type.",
								"tags": [
									{
										"tag": "example",
										"text": "\"SP13N5TE1FBBGRZD1FCM49QDGN32WAXM2E5F8WT2G.example-contract::example-token\"\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2993,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String in the format `{address}.{contractName}::{assetName}`"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3041,
								"name": "AssetInfo"
							}
						}
					]
				},
				{
					"id": 2945,
					"name": "parsePrincipalString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 262,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 2946,
							"name": "parsePrincipalString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Parses a principal string for either a standard principal or contract principal.",
								"tags": [
									{
										"tag": "example",
										"text": "\"SP13N5TE1FBBGRZD1FCM49QDGN32WAXM2E5F8WT2G.example-contract\""
									},
									{
										"tag": "example",
										"text": "\"SP13N5TE1FBBGRZD1FCM49QDGN32WAXM2E5F8WT2G\"\n"
									}
								]
							},
							"parameters": [
								{
									"id": 2947,
									"name": "principalString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "String in the format `{address}.{contractName}`"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 3024,
										"name": "StandardPrincipal"
									},
									{
										"type": "reference",
										"id": 3028,
										"name": "ContractPrincipal"
									}
								]
							}
						}
					]
				},
				{
					"id": 3992,
					"name": "parseReadOnlyResponse",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 193,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 3993,
							"name": "parseReadOnlyResponse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Converts the response of a read-only function call into its Clarity Value"
							},
							"parameters": [
								{
									"id": 3994,
									"name": "response",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3991,
										"name": "ReadOnlyFunctionResponse"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2430,
								"name": "ClarityValue"
							}
						}
					]
				},
				{
					"id": 2616,
					"name": "parseRecoverableSignature",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 188,
							"character": 41
						}
					],
					"signatures": [
						{
							"id": 2617,
							"name": "parseRecoverableSignature",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2618,
									"name": "signature",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2619,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2621,
											"name": "r",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2620,
											"name": "recoveryParam",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "..."
										},
										{
											"id": 2622,
											"name": "s",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												2621,
												2620,
												2622
											]
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 3162,
					"name": "parseToCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 417,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 3163,
							"name": "parseToCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Convert string input to Clarity value based on contract ABI data. Only handles Clarity\nprimitives and buffers. Responses, optionals, tuples and lists are not supported.",
								"returns": "returns a Clarity value\n"
							},
							"parameters": [
								{
									"id": 3164,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "string to be parsed into Clarity value"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3165,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the contract function argument object\n"
									},
									"type": {
										"type": "reference",
										"id": 3209,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2430,
								"name": "ClarityValue"
							}
						}
					]
				},
				{
					"id": 2626,
					"name": "privateKeyToString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 207,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 2627,
							"name": "privateKeyToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2628,
									"name": "privateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2636,
										"name": "StacksPrivateKey"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2594,
					"name": "pubKeyfromPrivKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 106,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 2595,
							"name": "pubKeyfromPrivKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2596,
									"name": "privateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2633,
								"name": "StacksPublicKey"
							}
						}
					]
				},
				{
					"id": 2582,
					"name": "publicKeyFromBuffer",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 88,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 2583,
							"name": "publicKeyFromBuffer",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2584,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2633,
								"name": "StacksPublicKey"
							}
						}
					]
				},
				{
					"id": 2577,
					"name": "publicKeyFromSignature",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 64,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 2578,
							"name": "publicKeyFromSignature",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2579,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2580,
									"name": "messageSignature",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2354,
										"name": "MessageSignature"
									}
								},
								{
									"id": 2581,
									"name": "pubKeyEncoding",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3114,
										"name": "PubKeyEncoding"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 2629,
					"name": "publicKeyToAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 211,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 2630,
							"name": "publicKeyToAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2631,
									"name": "version",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3109,
										"name": "AddressVersion"
									}
								},
								{
									"id": 2632,
									"name": "publicKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2633,
										"name": "StacksPublicKey"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2588,
					"name": "publicKeyToString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 96,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 2589,
							"name": "publicKeyToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2590,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2633,
										"name": "StacksPublicKey"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2510,
					"name": "responseErrorCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/responseCV.ts",
							"line": 15,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 2511,
							"name": "responseErrorCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 2512,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									},
									"default": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									}
								}
							],
							"parameters": [
								{
									"id": 2513,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2458,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "ResponseErrorCV"
							}
						}
					]
				},
				{
					"id": 2506,
					"name": "responseOkCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/responseCV.ts",
							"line": 19,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 2507,
							"name": "responseOkCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 2508,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									},
									"default": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									}
								}
							],
							"parameters": [
								{
									"id": 2509,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2454,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "ResponseOkCV"
							}
						}
					]
				},
				{
					"id": 3500,
					"name": "rightPadHexToLength",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 43,
							"character": 32
						}
					],
					"signatures": [
						{
							"id": 3501,
							"name": "rightPadHexToLength",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3502,
									"name": "hexString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3503,
									"name": "length",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2939,
					"name": "serializeAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 226,
							"character": 32
						}
					],
					"signatures": [
						{
							"id": 2940,
							"name": "serializeAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2941,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3019,
										"name": "Address"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 2999,
					"name": "serializeAssetInfo",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 438,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 3000,
							"name": "serializeAssetInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3001,
									"name": "info",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3041,
										"name": "AssetInfo"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 2549,
					"name": "serializeCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/serialize.ts",
							"line": 124,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 2550,
							"name": "serializeCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2551,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 3010,
					"name": "serializeLPList",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 472,
							"character": 31
						}
					],
					"signatures": [
						{
							"id": 3011,
							"name": "serializeLPList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3012,
									"name": "lpList",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3046,
										"name": "LengthPrefixedList"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 2971,
					"name": "serializeLPString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 355,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 2972,
							"name": "serializeLPString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2973,
									"name": "lps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3033,
										"name": "LengthPrefixedString"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 2985,
					"name": "serializeMemoString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 391,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 2986,
							"name": "serializeMemoString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2987,
									"name": "memoString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3038,
										"name": "MemoString"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 3357,
					"name": "serializeMessageSignature",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 73,
							"character": 41
						}
					],
					"signatures": [
						{
							"id": 3358,
							"name": "serializeMessageSignature",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3359,
									"name": "messageSignature",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2354,
										"name": "MessageSignature"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 3389,
					"name": "serializeMultiSigSpendingCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 261,
							"character": 50
						}
					],
					"signatures": [
						{
							"id": 3390,
							"name": "serializeMultiSigSpendingCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3391,
									"name": "condition",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3445,
										"name": "MultiSigSpendingCondition"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 2408,
					"name": "serializePostCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/postcondition.ts",
							"line": 121,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 2409,
							"name": "serializePostCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2410,
									"name": "postCondition",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2390,
										"name": "PostCondition"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 2955,
					"name": "serializePrincipal",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 296,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 2956,
							"name": "serializePrincipal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2957,
									"name": "principal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3023,
										"name": "PostConditionPrincipal"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 2591,
					"name": "serializePublicKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 100,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 2592,
							"name": "serializePublicKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2593,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2633,
										"name": "StacksPublicKey"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 3386,
					"name": "serializeSingleSigSpendingCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 250,
							"character": 51
						}
					],
					"signatures": [
						{
							"id": 3387,
							"name": "serializeSingleSigSpendingCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3388,
									"name": "condition",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3438,
										"name": "SingleSigSpendingCondition"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 3400,
					"name": "serializeSpendingCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 322,
							"character": 42
						}
					],
					"signatures": [
						{
							"id": 3401,
							"name": "serializeSpendingCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3402,
									"name": "condition",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2353,
										"name": "SpendingCondition"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 2904,
					"name": "serializeStacksMessage",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/types.ts",
							"line": 51,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 2905,
							"name": "serializeStacksMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2906,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3018,
										"name": "StacksMessage"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 3367,
					"name": "serializeTransactionAuthField",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 111,
							"character": 45
						}
					],
					"signatures": [
						{
							"id": 3368,
							"name": "serializeTransactionAuthField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3369,
									"name": "field",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3434,
										"name": "TransactionAuthField"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 2609,
					"name": "signWithKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/keys.ts",
							"line": 164,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 2610,
							"name": "signWithKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2611,
									"name": "privateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2636,
										"name": "StacksPrivateKey"
									}
								},
								{
									"id": 2612,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2354,
								"name": "MessageSignature"
							}
						}
					]
				},
				{
					"id": 2502,
					"name": "someCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/optionalCV.ts",
							"line": 18,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 2503,
							"name": "someCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 2504,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									},
									"default": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									}
								}
							],
							"parameters": [
								{
									"id": 2505,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2445,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "OptionalCV"
							}
						}
					]
				},
				{
					"id": 2725,
					"name": "sponsorTransaction",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 1094,
							"character": 40
						}
					],
					"signatures": [
						{
							"id": 2726,
							"name": "sponsorTransaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Constructs and signs a sponsored transaction as the sponsor",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 2727,
									"name": "sponsorOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the sponsor options object\n\nReturns a signed sponsored transaction.\n"
									},
									"type": {
										"type": "reference",
										"id": 2897,
										"name": "SponsorOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 2138,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 2514,
					"name": "standardPrincipalCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/principalCV.ts",
							"line": 44,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 2515,
							"name": "standardPrincipalCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2516,
									"name": "addressString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2463,
								"name": "StandardPrincipalCV"
							}
						}
					]
				},
				{
					"id": 2517,
					"name": "standardPrincipalCVFromAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/principalCV.ts",
							"line": 49,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 2518,
							"name": "standardPrincipalCVFromAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2519,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3019,
										"name": "Address"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2463,
								"name": "StandardPrincipalCV"
							}
						}
					]
				},
				{
					"id": 2540,
					"name": "stringAsciiCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/stringCV.ts",
							"line": 13,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 2541,
							"name": "stringAsciiCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2542,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2478,
								"name": "StringAsciiCV"
							}
						}
					]
				},
				{
					"id": 2543,
					"name": "stringUtf8CV",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/stringCV.ts",
							"line": 17,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 2544,
							"name": "stringUtf8CV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2545,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2481,
								"name": "StringUtf8CV"
							}
						}
					]
				},
				{
					"id": 2484,
					"name": "trueCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/booleanCV.ts",
							"line": 13,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 2485,
							"name": "trueCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 2431,
								"name": "BooleanCV"
							}
						}
					]
				},
				{
					"id": 2536,
					"name": "tupleCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/tupleCV.ts",
							"line": 11,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 2537,
							"name": "tupleCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 2538,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									},
									"default": {
										"type": "reference",
										"id": 2430,
										"name": "ClarityValue"
									}
								}
							],
							"parameters": [
								{
									"id": 2539,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "TupleData"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2474,
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "TupleData"
									}
								],
								"name": "TupleCV"
							}
						}
					]
				},
				{
					"id": 3972,
					"name": "txidFromData",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 98,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 3973,
							"name": "txidFromData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3974,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2491,
					"name": "uintCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/intCV.ts",
							"line": 28,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 2492,
							"name": "uintCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2493,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "Buffer"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2439,
								"name": "UIntCV"
							}
						}
					]
				},
				{
					"id": 3158,
					"name": "validateContractCall",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 370,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 3159,
							"name": "validateContractCall",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Validates a contract-call payload with a contract ABI",
								"returns": "true if the payloads functionArgs type check against those in the ABI\n"
							},
							"parameters": [
								{
									"id": 3160,
									"name": "payload",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a contract-call payload"
									},
									"type": {
										"type": "reference",
										"id": 2371,
										"name": "ContractCallPayload"
									}
								},
								{
									"id": 3161,
									"name": "abi",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a contract ABI\n"
									},
									"type": {
										"type": "reference",
										"id": 3324,
										"name": "ClarityAbi"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 3995,
					"name": "validateStacksAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/utils.ts",
							"line": 201,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 3996,
							"name": "validateStacksAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3997,
									"name": "stacksAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						3475
					]
				},
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						3102,
						3109,
						3081,
						3126,
						3099,
						3060,
						3210,
						2414,
						3117,
						3123,
						3075,
						3088,
						3095,
						3091,
						3114,
						3063,
						3085,
						3130
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2245,
						3476,
						2200,
						2317,
						2138,
						2282,
						3330,
						3515
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3019,
						3041,
						2442,
						3324,
						3295,
						3309,
						3319,
						3321,
						3305,
						2386,
						2813,
						2371,
						2802,
						3028,
						2466,
						2434,
						2436,
						3046,
						3033,
						2470,
						3038,
						2354,
						2736,
						3445,
						2447,
						2383,
						3988,
						2890,
						3985,
						2458,
						2454,
						2842,
						2873,
						2788,
						2763,
						3438,
						2378,
						2449,
						2897,
						2636,
						2633,
						3024,
						2463,
						2478,
						2481,
						2740,
						2365,
						3434,
						2432,
						2474,
						2439,
						2827,
						2857,
						2775,
						2751
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2431,
						3209,
						3204,
						3166,
						3203,
						3196,
						3207,
						3187,
						3208,
						3205,
						3181,
						3171,
						3176,
						3206,
						3190,
						3202,
						3248,
						2430,
						3108,
						2445,
						2390,
						3023,
						2462,
						3991,
						2453,
						3107,
						2353,
						3018,
						3433,
						2735,
						2728,
						2729
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3051,
						3052,
						3056,
						3053,
						3059,
						3054,
						3050,
						3058,
						3055,
						3057
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3155,
						2925,
						2930,
						2917,
						2921,
						2936,
						2652,
						2647,
						2494,
						2497,
						2722,
						3452,
						2979,
						2597,
						2520,
						2524,
						2528,
						2912,
						2994,
						2951,
						2915,
						2391,
						3005,
						2961,
						2982,
						2357,
						3379,
						2397,
						2403,
						3373,
						2603,
						2574,
						2948,
						3363,
						3469,
						2560,
						2556,
						2563,
						2942,
						3002,
						2552,
						3013,
						2974,
						2988,
						3360,
						3396,
						2411,
						2958,
						2600,
						3392,
						3403,
						2907,
						2197,
						3370,
						2360,
						3288,
						2668,
						2675,
						2643,
						3511,
						2486,
						2657,
						2566,
						2570,
						2546,
						2639,
						2623,
						2613,
						3152,
						3149,
						3975,
						3978,
						3981,
						3508,
						3472,
						2488,
						3504,
						3227,
						3245,
						3239,
						3224,
						3236,
						3230,
						3233,
						3242,
						3462,
						2585,
						2362,
						3493,
						3496,
						2532,
						2682,
						2672,
						2702,
						2715,
						2690,
						2606,
						2665,
						3406,
						2696,
						2709,
						2685,
						2679,
						2662,
						3412,
						3422,
						2500,
						3456,
						2991,
						2945,
						3992,
						2616,
						3162,
						2626,
						2594,
						2582,
						2577,
						2629,
						2588,
						2510,
						2506,
						3500,
						2939,
						2999,
						2549,
						3010,
						2971,
						2985,
						3357,
						3389,
						2408,
						2955,
						2591,
						3386,
						3400,
						2904,
						3367,
						2609,
						2502,
						2725,
						2514,
						2517,
						2540,
						2543,
						2484,
						2536,
						3972,
						2491,
						3158,
						3995
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/transactions/src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				1,
				2,
				146,
				147,
				148,
				149,
				153,
				377,
				378,
				539,
				540
			]
		}
	]
}